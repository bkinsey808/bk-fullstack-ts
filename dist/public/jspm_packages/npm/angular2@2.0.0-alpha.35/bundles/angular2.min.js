/* */ 
"format cjs";
(function(process) {
  !function e(t, n, r) {
    function i(s, a) {
      if (!n[s]) {
        if (!t[s]) {
          var c = "function" == typeof require && require;
          if (!a && c)
            return c(s, !0);
          if (o)
            return o(s, !0);
          var u = new Error("Cannot find module '" + s + "'");
          throw u.code = "MODULE_NOT_FOUND", u;
        }
        var l = n[s] = {exports: {}};
        t[s][0].call(l.exports, function(e) {
          var n = t[s][1][e];
          return i(n ? n : e);
        }, l, l.exports, e, t, n, r);
      }
      return n[s].exports;
    }
    for (var o = "function" == typeof require && require,
        s = 0; s < r.length; s++)
      i(r[s]);
    return i;
  }({
    1: [function(e, t, n) {
      (function(t) {
        "use strict";
        var n = e("../core"),
            r = e("../microtask"),
            i = e("../patch/browser"),
            o = e("es6-promise");
        t.Zone && console.warn("Zone already exported on window the object!"), t.Zone = r.addMicrotaskSupport(n.Zone), t.zone = new t.Zone, t.Promise = o.Promise, i.apply();
      }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {
      "../core": 2,
      "../microtask": 3,
      "../patch/browser": 4,
      "es6-promise": 15
    }],
    2: [function(e, t, n) {
      (function(n) {
        "use strict";
        function r(e, t) {
          var n = arguments.length ? Object.create(e) : this;
          return n.parent = e || null, Object.keys(t || {}).forEach(function(r) {
            var i = r.substr(1);
            "$" === r[0] ? n[i] = t[r](e[i] || function() {}) : "+" === r[0] ? n[i] = e[i] ? function() {
              var n = e[i].apply(this, arguments);
              return t[r].apply(this, arguments), n;
            } : t[r] : "-" === r[0] ? n[i] = e[i] ? function() {
              return t[r].apply(this, arguments), e[i].apply(this, arguments);
            } : t[r] : n[r] = "object" == typeof t[r] ? JSON.parse(JSON.stringify(t[r])) : t[r];
          }), n.$id = r.nextId++, n;
        }
        r.prototype = {
          constructor: r,
          fork: function(e) {
            return this.onZoneCreated(), new r(this, e);
          },
          bind: function(e, t) {
            if ("function" != typeof e)
              throw new Error("Expecting function got: " + e);
            t || this.enqueueTask(e);
            var n = this.isRootZone() ? this : this.fork();
            return function() {
              return n.run(e, this, arguments);
            };
          },
          bindOnce: function(e) {
            var t = this;
            return this.bind(function() {
              var n = e.apply(this, arguments);
              return t.dequeueTask(e), n;
            });
          },
          isRootZone: function() {
            return null === this.parent;
          },
          run: function(e, t, r) {
            r = r || [];
            var i = n.zone;
            n.zone = this;
            try {
              return this.beforeTask(), e.apply(t, r);
            } catch (o) {
              if (!this.onError)
                throw o;
              this.onError(o);
            } finally {
              this.afterTask(), n.zone = i;
            }
          },
          onError: null,
          beforeTask: function() {},
          onZoneCreated: function() {},
          afterTask: function() {},
          enqueueTask: function() {},
          dequeueTask: function() {}
        }, r.nextId = 1, r.bindPromiseFn = e("./patch/promise").bindPromiseFn, t.exports = {Zone: r};
      }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {"./patch/promise": 10}],
    3: [function(e, t, n) {
      (function(n) {
        "use strict";
        function r(e) {
          o._asap(this.bind(e));
        }
        function i(e) {
          return e.prototype.scheduleMicrotask = r, e;
        }
        var o = e("es6-promise").Promise;
        o._setAsap(function(e, t) {
          n.zone.scheduleMicrotask(function() {
            e(t);
          });
        }), t.exports = {addMicrotaskSupport: i};
        var s = "undefined" != typeof Promise && -1 !== Promise.toString().indexOf("[native code]"),
            a = n.navigator && n.navigator.userAgent.toLowerCase().indexOf("firefox") > -1;
        if (s && !a) {
          var c = Promise.resolve();
          o._setScheduler(function(e) {
            c.then(e);
          });
        }
      }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {"es6-promise": 15}],
    4: [function(e, t, n) {
      (function(n) {
        "use strict";
        function r() {
          i.patchSetClearFunction(n, ["timeout", "interval", "immediate"]), i.patchSetFunction(n, ["requestAnimationFrame", "mozRequestAnimationFrame", "webkitRequestAnimationFrame"]), i.patchFunction(n, ["alert", "prompt"]), u.apply(), l.apply(), o.apply(), s.patchClass("MutationObserver"), s.patchClass("WebKitMutationObserver"), a.apply(), c.apply(), f.apply();
        }
        var i = e("./functions"),
            o = e("./promise"),
            s = e("./mutation-observer"),
            a = e("./define-property"),
            c = e("./register-element"),
            u = (e("./websocket"), e("./event-target")),
            l = e("./property-descriptor"),
            f = e("./geolocation");
        t.exports = {apply: r};
      }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {
      "./define-property": 5,
      "./event-target": 6,
      "./functions": 7,
      "./geolocation": 8,
      "./mutation-observer": 9,
      "./promise": 10,
      "./property-descriptor": 11,
      "./register-element": 12,
      "./websocket": 13
    }],
    5: [function(e, t, n) {
      "use strict";
      function r() {
        Object.defineProperty = function(e, t, n) {
          if (o(e, t))
            throw new TypeError("Cannot assign to read only property '" + t + "' of " + e);
          return "prototype" !== t && (n = s(e, t, n)), a(e, t, n);
        }, Object.defineProperties = function(e, t) {
          return Object.keys(t).forEach(function(n) {
            Object.defineProperty(e, n, t[n]);
          }), e;
        }, Object.create = function(e, t) {
          return "object" == typeof t && Object.keys(t).forEach(function(n) {
            t[n] = s(e, n, t[n]);
          }), u(e, t);
        }, Object.getOwnPropertyDescriptor = function(e, t) {
          var n = c(e, t);
          return o(e, t) && (n.configurable = !1), n;
        };
      }
      function i(e, t, n) {
        return n = s(e, t, n), a(e, t, n);
      }
      function o(e, t) {
        return e && e.__unconfigurables && e.__unconfigurables[t];
      }
      function s(e, t, n) {
        return n.configurable = !0, n.configurable || (e.__unconfigurables || a(e, "__unconfigurables", {
          writable: !0,
          value: {}
        }), e.__unconfigurables[t] = !0), n;
      }
      var a = Object.defineProperty,
          c = Object.getOwnPropertyDescriptor,
          u = Object.create;
      t.exports = {
        apply: r,
        _redefineProperty: i
      };
    }, {}],
    6: [function(e, t, n) {
      (function(n) {
        "use strict";
        function r() {
          if (n.EventTarget)
            i.patchEventTargetMethods(n.EventTarget.prototype);
          else {
            var e = ["ApplicationCache", "EventSource", "FileReader", "InputMethodContext", "MediaController", "MessagePort", "Node", "Performance", "SVGElementInstance", "SharedWorker", "TextTrack", "TextTrackCue", "TextTrackList", "WebKitNamedFlow", "Window", "Worker", "WorkerGlobalScope", "XMLHttpRequest", "XMLHttpRequestEventTarget", "XMLHttpRequestUpload"];
            e.forEach(function(e) {
              n[e] && i.patchEventTargetMethods(n[e].prototype);
            });
          }
        }
        var i = e("../utils");
        t.exports = {apply: r};
      }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {"../utils": 14}],
    7: [function(e, t, n) {
      (function(n) {
        "use strict";
        function r(e, t) {
          t.map(function(e) {
            return e[0].toUpperCase() + e.substr(1);
          }).forEach(function(t) {
            var r = "set" + t,
                i = e[r];
            if (i) {
              var o = "clear" + t,
                  a = {},
                  c = "setInterval" === r ? s.bindArguments : s.bindArgumentsOnce;
              n.zone[r] = function(t) {
                var n,
                    r = t;
                arguments[0] = function() {
                  return delete a[n], r.apply(this, arguments);
                };
                var o = c(arguments);
                return n = i.apply(e, o), a[n] = !0, n;
              }, e[r] = function() {
                return n.zone[r].apply(this, arguments);
              };
              var u = e[o];
              n.zone[o] = function(e) {
                return a[e] && (delete a[e], n.zone.dequeueTask()), u.apply(this, arguments);
              }, e[o] = function() {
                return n.zone[o].apply(this, arguments);
              };
            }
          });
        }
        function i(e, t) {
          t.forEach(function(t) {
            var r = e[t];
            r && (n.zone[t] = function(t) {
              var n = t;
              arguments[0] = function() {
                return n.apply(this, arguments);
              };
              var i = s.bindArgumentsOnce(arguments);
              return r.apply(e, i);
            }, e[t] = function() {
              return zone[t].apply(this, arguments);
            });
          });
        }
        function o(e, t) {
          t.forEach(function(t) {
            var r = e[t];
            n.zone[t] = function() {
              return r.apply(e, arguments);
            }, e[t] = function() {
              return n.zone[t].apply(this, arguments);
            };
          });
        }
        var s = e("../utils");
        t.exports = {
          patchSetClearFunction: r,
          patchSetFunction: i,
          patchFunction: o
        };
      }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {"../utils": 14}],
    8: [function(e, t, n) {
      (function(n) {
        "use strict";
        function r() {
          n.navigator && n.navigator.geolocation && i.patchPrototype(n.navigator.geolocation, ["getCurrentPosition", "watchPosition"]);
        }
        var i = e("../utils");
        t.exports = {apply: r};
      }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {"../utils": 14}],
    9: [function(e, t, n) {
      (function(e) {
        "use strict";
        function n(t) {
          var n = e[t];
          if (n) {
            e[t] = function(t) {
              this._o = new n(e.zone.bind(t, !0)), this._creationZone = e.zone;
            };
            var r = new n(function() {});
            e[t].prototype.disconnect = function() {
              var e = this._o.disconnect.apply(this._o, arguments);
              return this._active && (this._creationZone.dequeueTask(), this._active = !1), e;
            }, e[t].prototype.observe = function() {
              return this._active || (this._creationZone.enqueueTask(), this._active = !0), this._o.observe.apply(this._o, arguments);
            };
            var i;
            for (i in r)
              !function(n) {
                void 0 === typeof e[t].prototype && ("function" == typeof r[n] ? e[t].prototype[n] = function() {
                  return this._o[n].apply(this._o, arguments);
                } : Object.defineProperty(e[t].prototype, n, {
                  set: function(t) {
                    this._o[n] = "function" == typeof t ? e.zone.bind(t) : t;
                  },
                  get: function() {
                    return this._o[n];
                  }
                }));
              }(i);
          }
        }
        t.exports = {patchClass: n};
      }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {}],
    10: [function(e, t, n) {
      (function(n) {
        "use strict";
        function r(e, t) {
          var r = n,
              i = e.every(function(e) {
                return r = r[e];
              });
          i && t.forEach(function(e) {
            var t = r[e];
            t && (r[e] = s(t));
          });
        }
        function i(e) {
          var t = e.then;
          e.then = function() {
            var n = a.bindArguments(arguments),
                r = t.apply(e, n);
            return i(r);
          };
          var n = e["catch"];
          return e["catch"] = function() {
            var t = a.bindArguments(arguments),
                r = n.apply(e, t);
            return i(r);
          }, e;
        }
        function o() {
          if (n.Promise) {
            a.patchPrototype(Promise.prototype, ["then", "catch"]);
            var e = [[[], ["fetch"]], [["Response", "prototype"], ["arrayBuffer", "blob", "json", "text"]]];
            e.forEach(function(e) {
              r(e[0], e[1]);
            });
          }
        }
        var s,
            a = e("../utils");
        s = n.Promise ? function(e) {
          return function() {
            var t = e.apply(this, arguments);
            return t instanceof Promise ? t : new Promise(function(e, n) {
              t.then(e, n);
            });
          };
        } : function(e) {
          return function() {
            return i(e.apply(this, arguments));
          };
        }, t.exports = {
          apply: o,
          bindPromiseFn: s
        };
      }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {"../utils": 14}],
    11: [function(e, t, n) {
      (function(n) {
        "use strict";
        function r() {
          if (i()) {
            var e = c.map(function(e) {
              return "on" + e;
            });
            a.patchProperties(HTMLElement.prototype, e), a.patchProperties(XMLHttpRequest.prototype), "undefined" != typeof WebSocket && a.patchProperties(WebSocket.prototype);
          } else
            o(), a.patchClass("XMLHttpRequest"), s.apply();
        }
        function i() {
          if (!Object.getOwnPropertyDescriptor(HTMLElement.prototype, "onclick") && "undefined" != typeof Element) {
            var e = Object.getOwnPropertyDescriptor(Element.prototype, "onclick");
            if (e && !e.configurable)
              return !1;
          }
          Object.defineProperty(HTMLElement.prototype, "onclick", {get: function() {
              return !0;
            }});
          var t = document.createElement("div"),
              n = !!t.onclick;
          return Object.defineProperty(HTMLElement.prototype, "onclick", {}), n;
        }
        function o() {
          c.forEach(function(e) {
            var t = "on" + e;
            document.addEventListener(e, function(e) {
              for (var r,
                  i = e.target; i; )
                i[t] && !i[t]._unbound && (r = n.zone.bind(i[t]), r._unbound = i[t], i[t] = r), i = i.parentElement;
            }, !0);
          });
        }
        var s = e("./websocket"),
            a = e("../utils"),
            c = "copy cut paste abort blur focus canplay canplaythrough change click contextmenu dblclick drag dragend dragenter dragleave dragover dragstart drop durationchange emptied ended input invalid keydown keypress keyup load loadeddata loadedmetadata loadstart message mousedown mouseenter mouseleave mousemove mouseout mouseover mouseup pause play playing progress ratechange reset scroll seeked seeking select show stalled submit suspend timeupdate volumechange waiting mozfullscreenchange mozfullscreenerror mozpointerlockchange mozpointerlockerror error webglcontextrestored webglcontextlost webglcontextcreationerror".split(" ");
        t.exports = {apply: r};
      }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {
      "../utils": 14,
      "./websocket": 13
    }],
    12: [function(e, t, n) {
      (function(n) {
        "use strict";
        function r() {
          if ("registerElement" in n.document) {
            var e = document.registerElement,
                t = ["createdCallback", "attachedCallback", "detachedCallback", "attributeChangedCallback"];
            document.registerElement = function(r, o) {
              return o && o.prototype && t.forEach(function(e) {
                if (o.prototype.hasOwnProperty(e)) {
                  var t = Object.getOwnPropertyDescriptor(o.prototype, e);
                  t.value ? (t.value = n.zone.bind(t.value), i(o.prototype, e, t)) : o.prototype[e] = n.zone.bind(o.prototype[e]);
                } else
                  o.prototype[e] && (o.prototype[e] = n.zone.bind(o.prototype[e]));
              }), e.apply(document, [r, o]);
            };
          }
        }
        var i = e("./define-property")._redefineProperty;
        t.exports = {apply: r};
      }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {"./define-property": 5}],
    13: [function(e, t, n) {
      (function(n) {
        "use strict";
        function r() {
          var e = n.WebSocket;
          i.patchEventTargetMethods(e.prototype), n.WebSocket = function(t, n) {
            var r,
                o = arguments.length > 1 ? new e(t, n) : new e(t),
                s = Object.getOwnPropertyDescriptor(o, "onmessage");
            return s && s.configurable === !1 ? (r = Object.create(o), ["addEventListener", "removeEventListener", "send", "close"].forEach(function(e) {
              r[e] = function() {
                return o[e].apply(o, arguments);
              };
            })) : r = o, i.patchProperties(r, ["onclose", "onerror", "onmessage", "onopen"]), r;
          };
        }
        var i = e("../utils");
        t.exports = {apply: r};
      }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {"../utils": 14}],
    14: [function(e, t, n) {
      (function(e) {
        "use strict";
        function n(t) {
          for (var n = t.length - 1; n >= 0; n--)
            "function" == typeof t[n] && (t[n] = e.zone.bind(t[n]));
          return t;
        }
        function r(t) {
          for (var n = t.length - 1; n >= 0; n--)
            "function" == typeof t[n] && (t[n] = e.zone.bindOnce(t[n]));
          return t;
        }
        function i(e, t) {
          t.forEach(function(t) {
            var r = e[t];
            r && (e[t] = function() {
              return r.apply(this, n(arguments));
            });
          });
        }
        function o(e, t) {
          var n = Object.getOwnPropertyDescriptor(e, t) || {
            enumerable: !0,
            configurable: !0
          };
          delete n.writable, delete n.value;
          var r = t.substr(2),
              i = "_" + t;
          n.set = function(e) {
            this[i] && this.removeEventListener(r, this[i]), "function" == typeof e ? (this[i] = e, this.addEventListener(r, e, !1)) : this[i] = null;
          }, n.get = function() {
            return this[i];
          }, Object.defineProperty(e, t, n);
        }
        function s(e, t) {
          (t || function() {
            var t = [];
            for (var n in e)
              t.push(n);
            return t;
          }().filter(function(e) {
            return "on" === e.substr(0, 2);
          })).forEach(function(t) {
            o(e, t);
          });
        }
        function a(t) {
          var n = t.addEventListener;
          t.addEventListener = function(e, t) {
            return t._bound = t._bound || {}, arguments[1] = t._bound[e] = zone.bind(t), n.apply(this, arguments);
          };
          var r = t.removeEventListener;
          t.removeEventListener = function(t, n) {
            if (arguments[1]._bound && arguments[1]._bound[t]) {
              var i = arguments[1]._bound;
              arguments[1] = i[t], delete i[t];
            }
            var o = r.apply(this, arguments);
            return e.zone.dequeueTask(n), o;
          };
        }
        function c(t) {
          var r = e[t];
          if (r) {
            e[t] = function() {
              var e = n(arguments);
              switch (e.length) {
                case 0:
                  this._o = new r;
                  break;
                case 1:
                  this._o = new r(e[0]);
                  break;
                case 2:
                  this._o = new r(e[0], e[1]);
                  break;
                case 3:
                  this._o = new r(e[0], e[1], e[2]);
                  break;
                case 4:
                  this._o = new r(e[0], e[1], e[2], e[3]);
                  break;
                default:
                  throw new Error("what are you even doing?");
              }
            };
            var i,
                o = new r;
            for (i in o)
              !function(n) {
                "function" == typeof o[n] ? e[t].prototype[n] = function() {
                  return this._o[n].apply(this._o, arguments);
                } : Object.defineProperty(e[t].prototype, n, {
                  set: function(t) {
                    this._o[n] = "function" == typeof t ? e.zone.bind(t) : t;
                  },
                  get: function() {
                    return this._o[n];
                  }
                });
              }(i);
            for (i in r)
              "prototype" !== i && r.hasOwnProperty(i) && (e[t][i] = r[i]);
          }
        }
        t.exports = {
          bindArguments: n,
          bindArgumentsOnce: r,
          patchPrototype: i,
          patchProperty: o,
          patchProperties: s,
          patchEventTargetMethods: a,
          patchClass: c
        };
      }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {}],
    15: [function(e, t, n) {
      (function(n, r) {
        (function() {
          "use strict";
          function i(e) {
            return "function" == typeof e || "object" == typeof e && null !== e;
          }
          function o(e) {
            return "function" == typeof e;
          }
          function s(e) {
            return "object" == typeof e && null !== e;
          }
          function a(e) {
            q = e;
          }
          function c(e) {
            G = e;
          }
          function u() {
            var e = n.nextTick,
                t = n.versions.node.match(/^(?:(\d+)\.)?(?:(\d+)\.)?(\*|\d+)$/);
            return Array.isArray(t) && "0" === t[1] && "10" === t[2] && (e = setImmediate), function() {
              e(p);
            };
          }
          function l() {
            return function() {
              U(p);
            };
          }
          function f() {
            var e = 0,
                t = new Z(p),
                n = document.createTextNode("");
            return t.observe(n, {characterData: !0}), function() {
              n.data = e = ++e % 2;
            };
          }
          function h() {
            var e = new MessageChannel;
            return e.port1.onmessage = p, function() {
              e.port2.postMessage(0);
            };
          }
          function d() {
            return function() {
              setTimeout(p, 1);
            };
          }
          function p() {
            for (var e = 0; Q > e; e += 2) {
              var t = te[e],
                  n = te[e + 1];
              t(n), te[e] = void 0, te[e + 1] = void 0;
            }
            Q = 0;
          }
          function g() {
            try {
              var t = e,
                  n = t("vertx");
              return U = n.runOnLoop || n.runOnContext, l();
            } catch (r) {
              return d();
            }
          }
          function m() {}
          function v() {
            return new TypeError("You cannot resolve a promise with itself");
          }
          function _() {
            return new TypeError("A promises callback cannot return that same promise.");
          }
          function y(e) {
            try {
              return e.then;
            } catch (t) {
              return oe.error = t, oe;
            }
          }
          function b(e, t, n, r) {
            try {
              e.call(t, n, r);
            } catch (i) {
              return i;
            }
          }
          function w(e, t, n) {
            G(function(e) {
              var r = !1,
                  i = b(n, t, function(n) {
                    r || (r = !0, t !== n ? E(e, n) : S(e, n));
                  }, function(t) {
                    r || (r = !0, D(e, t));
                  }, "Settle: " + (e._label || " unknown promise"));
              !r && i && (r = !0, D(e, i));
            }, e);
          }
          function C(e, t) {
            t._state === re ? S(e, t._result) : t._state === ie ? D(e, t._result) : I(t, void 0, function(t) {
              E(e, t);
            }, function(t) {
              D(e, t);
            });
          }
          function R(e, t) {
            if (t.constructor === e.constructor)
              C(e, t);
            else {
              var n = y(t);
              n === oe ? D(e, oe.error) : void 0 === n ? S(e, t) : o(n) ? w(e, t, n) : S(e, t);
            }
          }
          function E(e, t) {
            e === t ? D(e, v()) : i(t) ? R(e, t) : S(e, t);
          }
          function x(e) {
            e._onerror && e._onerror(e._result), P(e);
          }
          function S(e, t) {
            e._state === ne && (e._result = t, e._state = re, 0 !== e._subscribers.length && G(P, e));
          }
          function D(e, t) {
            e._state === ne && (e._state = ie, e._result = t, G(x, e));
          }
          function I(e, t, n, r) {
            var i = e._subscribers,
                o = i.length;
            e._onerror = null, i[o] = t, i[o + re] = n, i[o + ie] = r, 0 === o && e._state && G(P, e);
          }
          function P(e) {
            var t = e._subscribers,
                n = e._state;
            if (0 !== t.length) {
              for (var r,
                  i,
                  o = e._result,
                  s = 0; s < t.length; s += 3)
                r = t[s], i = t[s + n], r ? T(n, r, i, o) : i(o);
              e._subscribers.length = 0;
            }
          }
          function A() {
            this.error = null;
          }
          function O(e, t) {
            try {
              return e(t);
            } catch (n) {
              return se.error = n, se;
            }
          }
          function T(e, t, n, r) {
            var i,
                s,
                a,
                c,
                u = o(n);
            if (u) {
              if (i = O(n, r), i === se ? (c = !0, s = i.error, i = null) : a = !0, t === i)
                return void D(t, _());
            } else
              i = r, a = !0;
            t._state !== ne || (u && a ? E(t, i) : c ? D(t, s) : e === re ? S(t, i) : e === ie && D(t, i));
          }
          function j(e, t) {
            try {
              t(function(t) {
                E(e, t);
              }, function(t) {
                D(e, t);
              });
            } catch (n) {
              D(e, n);
            }
          }
          function N(e, t) {
            var n = this;
            n._instanceConstructor = e, n.promise = new e(m), n._validateInput(t) ? (n._input = t, n.length = t.length, n._remaining = t.length, n._init(), 0 === n.length ? S(n.promise, n._result) : (n.length = n.length || 0, n._enumerate(), 0 === n._remaining && S(n.promise, n._result))) : D(n.promise, n._validationError());
          }
          function V(e) {
            return new ae(this, e).promise;
          }
          function k(e) {
            function t(e) {
              E(i, e);
            }
            function n(e) {
              D(i, e);
            }
            var r = this,
                i = new r(m);
            if (!z(e))
              return D(i, new TypeError("You must pass an array to race.")), i;
            for (var o = e.length,
                s = 0; i._state === ne && o > s; s++)
              I(r.resolve(e[s]), void 0, t, n);
            return i;
          }
          function M(e) {
            var t = this;
            if (e && "object" == typeof e && e.constructor === t)
              return e;
            var n = new t(m);
            return E(n, e), n;
          }
          function B(e) {
            var t = this,
                n = new t(m);
            return D(n, e), n;
          }
          function L() {
            throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");
          }
          function F() {
            throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
          }
          function $(e) {
            this._id = he++, this._state = void 0, this._result = void 0, this._subscribers = [], m !== e && (o(e) || L(), this instanceof $ || F(), j(this, e));
          }
          function H() {
            var e;
            if ("undefined" != typeof r)
              e = r;
            else if ("undefined" != typeof self)
              e = self;
            else
              try {
                e = Function("return this")();
              } catch (t) {
                throw new Error("polyfill failed because global object is unavailable in this environment");
              }
            var n = e.Promise;
            (!n || "[object Promise]" !== Object.prototype.toString.call(n.resolve()) || n.cast) && (e.Promise = de);
          }
          var W;
          W = Array.isArray ? Array.isArray : function(e) {
            return "[object Array]" === Object.prototype.toString.call(e);
          };
          var U,
              q,
              K,
              z = W,
              Q = 0,
              G = ({}.toString, function(e, t) {
                te[Q] = e, te[Q + 1] = t, Q += 2, 2 === Q && (q ? q(p) : K());
              }),
              Y = "undefined" != typeof window ? window : void 0,
              X = Y || {},
              Z = X.MutationObserver || X.WebKitMutationObserver,
              J = "undefined" != typeof n && "[object process]" === {}.toString.call(n),
              ee = "undefined" != typeof Uint8ClampedArray && "undefined" != typeof importScripts && "undefined" != typeof MessageChannel,
              te = new Array(1e3);
          K = J ? u() : Z ? f() : ee ? h() : void 0 === Y && "function" == typeof e ? g() : d();
          var ne = void 0,
              re = 1,
              ie = 2,
              oe = new A,
              se = new A;
          N.prototype._validateInput = function(e) {
            return z(e);
          }, N.prototype._validationError = function() {
            return new Error("Array Methods must be provided an Array");
          }, N.prototype._init = function() {
            this._result = new Array(this.length);
          };
          var ae = N;
          N.prototype._enumerate = function() {
            for (var e = this,
                t = e.length,
                n = e.promise,
                r = e._input,
                i = 0; n._state === ne && t > i; i++)
              e._eachEntry(r[i], i);
          }, N.prototype._eachEntry = function(e, t) {
            var n = this,
                r = n._instanceConstructor;
            s(e) ? e.constructor === r && e._state !== ne ? (e._onerror = null, n._settledAt(e._state, t, e._result)) : n._willSettleAt(r.resolve(e), t) : (n._remaining--, n._result[t] = e);
          }, N.prototype._settledAt = function(e, t, n) {
            var r = this,
                i = r.promise;
            i._state === ne && (r._remaining--, e === ie ? D(i, n) : r._result[t] = n), 0 === r._remaining && S(i, r._result);
          }, N.prototype._willSettleAt = function(e, t) {
            var n = this;
            I(e, void 0, function(e) {
              n._settledAt(re, t, e);
            }, function(e) {
              n._settledAt(ie, t, e);
            });
          };
          var ce = V,
              ue = k,
              le = M,
              fe = B,
              he = 0,
              de = $;
          $.all = ce, $.race = ue, $.resolve = le, $.reject = fe, $._setScheduler = a, $._setAsap = c, $._asap = G, $.prototype = {
            constructor: $,
            then: function(e, t) {
              var n = this,
                  r = n._state;
              if (r === re && !e || r === ie && !t)
                return this;
              var i = new this.constructor(m),
                  o = n._result;
              if (r) {
                var s = arguments[r - 1];
                G(function() {
                  T(r, i, s, o);
                });
              } else
                I(n, i, e, t);
              return i;
            },
            "catch": function(e) {
              return this.then(null, e);
            }
          };
          var pe = H,
              ge = {
                Promise: de,
                polyfill: pe
              };
          "function" == typeof define && define.amd ? define(function() {
            return ge;
          }) : "undefined" != typeof t && t.exports ? t.exports = ge : "undefined" != typeof this && (this.ES6Promise = ge), pe();
        }).call(this);
      }).call(this, {}, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }, {}]
  }, {}, [1]);
  var Reflect;
  !function(e) {
    function t(e, t, n, r) {
      if (C(r)) {
        if (C(n)) {
          if (!R(e))
            throw new TypeError;
          if (!x(t))
            throw new TypeError;
          return f(e, t);
        }
        if (!R(e))
          throw new TypeError;
        if (!E(t))
          throw new TypeError;
        return n = D(n), d(e, t, n);
      }
      if (!R(e))
        throw new TypeError;
      if (!E(t))
        throw new TypeError;
      if (C(n))
        throw new TypeError;
      if (!E(r))
        throw new TypeError;
      return n = D(n), h(e, t, n, r);
    }
    function n(e, t) {
      function n(n, r) {
        if (C(r)) {
          if (!x(n))
            throw new TypeError;
          y(e, t, n, void 0);
        } else {
          if (!E(n))
            throw new TypeError;
          r = D(r), y(e, t, n, r);
        }
      }
      return n;
    }
    function r(e, t, n, r) {
      if (!E(n))
        throw new TypeError;
      return C(r) || (r = D(r)), y(e, t, n, r);
    }
    function i(e, t, n) {
      if (!E(t))
        throw new TypeError;
      return C(n) || (n = D(n)), g(e, t, n);
    }
    function o(e, t, n) {
      if (!E(t))
        throw new TypeError;
      return C(n) || (n = D(n)), m(e, t, n);
    }
    function s(e, t, n) {
      if (!E(t))
        throw new TypeError;
      return C(n) || (n = D(n)), v(e, t, n);
    }
    function a(e, t, n) {
      if (!E(t))
        throw new TypeError;
      return C(n) || (n = D(n)), _(e, t, n);
    }
    function c(e, t) {
      if (!E(e))
        throw new TypeError;
      return C(t) || (t = D(t)), b(e, t);
    }
    function u(e, t) {
      if (!E(e))
        throw new TypeError;
      return C(t) || (t = D(t)), w(e, t);
    }
    function l(e, t, n) {
      if (!E(t))
        throw new TypeError;
      C(n) || (n = D(n));
      var r = p(t, n, !1);
      if (C(r))
        return !1;
      if (!r["delete"](e))
        return !1;
      if (r.size > 0)
        return !0;
      var i = k.get(t);
      return i["delete"](n), i.size > 0 ? !0 : (k["delete"](t), !0);
    }
    function f(e, t) {
      for (var n = e.length - 1; n >= 0; --n) {
        var r = e[n],
            i = r(t);
        if (!C(i)) {
          if (!x(i))
            throw new TypeError;
          t = i;
        }
      }
      return t;
    }
    function h(e, t, n, r) {
      for (var i = e.length - 1; i >= 0; --i) {
        var o = e[i],
            s = o(t, n, r);
        if (!C(s)) {
          if (!E(s))
            throw new TypeError;
          r = s;
        }
      }
      return r;
    }
    function d(e, t, n) {
      for (var r = e.length - 1; r >= 0; --r) {
        var i = e[r];
        i(t, n);
      }
    }
    function p(e, t, n) {
      var r = k.get(e);
      if (!r) {
        if (!n)
          return void 0;
        r = new j, k.set(e, r);
      }
      var i = r.get(t);
      if (!i) {
        if (!n)
          return void 0;
        i = new j, r.set(t, i);
      }
      return i;
    }
    function g(e, t, n) {
      var r = m(e, t, n);
      if (r)
        return !0;
      var i = I(t);
      return null !== i ? g(e, i, n) : !1;
    }
    function m(e, t, n) {
      var r = p(t, n, !1);
      return void 0 === r ? !1 : Boolean(r.has(e));
    }
    function v(e, t, n) {
      var r = m(e, t, n);
      if (r)
        return _(e, t, n);
      var i = I(t);
      return null !== i ? v(e, i, n) : void 0;
    }
    function _(e, t, n) {
      var r = p(t, n, !1);
      return void 0 === r ? void 0 : r.get(e);
    }
    function y(e, t, n, r) {
      var i = p(n, r, !0);
      i.set(e, t);
    }
    function b(e, t) {
      var n = w(e, t),
          r = I(e);
      if (null === r)
        return n;
      var i = b(r, t);
      if (i.length <= 0)
        return n;
      if (n.length <= 0)
        return i;
      for (var o = new N,
          s = [],
          a = 0; a < n.length; a++) {
        var c = n[a],
            u = o.has(c);
        u || (o.add(c), s.push(c));
      }
      for (var l = 0; l < i.length; l++) {
        var c = i[l],
            u = o.has(c);
        u || (o.add(c), s.push(c));
      }
      return s;
    }
    function w(e, t) {
      var n = p(e, t, !1),
          r = [];
      return n && n.forEach(function(e, t) {
        return r.push(t);
      }), r;
    }
    function C(e) {
      return void 0 === e;
    }
    function R(e) {
      return Array.isArray(e);
    }
    function E(e) {
      return "object" == typeof e ? null !== e : "function" == typeof e;
    }
    function x(e) {
      return "function" == typeof e;
    }
    function S(e) {
      return "symbol" == typeof e;
    }
    function D(e) {
      return S(e) ? e : String(e);
    }
    function I(e) {
      var t = Object.getPrototypeOf(e);
      if ("function" != typeof e || e === T)
        return t;
      if (t !== T)
        return t;
      var n = e.prototype,
          r = Object.getPrototypeOf(n);
      if (null == r || r === Object.prototype)
        return t;
      var i = r.constructor;
      return "function" != typeof i ? t : i === e ? t : i;
    }
    function P() {
      function e() {
        this._keys = [], this._values = [], this._cache = t;
      }
      var t = {};
      return e.prototype = {
        get size() {
          return this._keys.length;
        },
        has: function(e) {
          return e === this._cache ? !0 : this._find(e) >= 0 ? (this._cache = e, !0) : !1;
        },
        get: function(e) {
          var t = this._find(e);
          return t >= 0 ? (this._cache = e, this._values[t]) : void 0;
        },
        set: function(e, t) {
          return this["delete"](e), this._keys.push(e), this._values.push(t), this._cache = e, this;
        },
        "delete": function(e) {
          var n = this._find(e);
          return n >= 0 ? (this._keys.splice(n, 1), this._values.splice(n, 1), this._cache = t, !0) : !1;
        },
        clear: function() {
          this._keys.length = 0, this._values.length = 0, this._cache = t;
        },
        forEach: function(e, t) {
          for (var n = this.size,
              r = 0; n > r; ++r) {
            var i = this._keys[r],
                o = this._values[r];
            this._cache = i, e.call(this, o, i, this);
          }
        },
        _find: function(e) {
          for (var t = this._keys,
              n = t.length,
              r = 0; n > r; ++r)
            if (t[r] === e)
              return r;
          return -1;
        }
      }, e;
    }
    function A() {
      function e() {
        this._map = new j;
      }
      return e.prototype = {
        get size() {
          return this._map.length;
        },
        has: function(e) {
          return this._map.has(e);
        },
        add: function(e) {
          return this._map.set(e, e), this;
        },
        "delete": function(e) {
          return this._map["delete"](e);
        },
        clear: function() {
          this._map.clear();
        },
        forEach: function(e, t) {
          this._map.forEach(e, t);
        }
      }, e;
    }
    function O() {
      function e() {
        this._key = i();
      }
      function t(e, t) {
        for (var n = 0; t > n; ++n)
          e[n] = 255 * Math.random() | 0;
      }
      function n(e) {
        if (c) {
          var n = c.randomBytes(e);
          return n;
        }
        if ("function" == typeof Uint8Array) {
          var n = new Uint8Array(e);
          return "undefined" != typeof crypto ? crypto.getRandomValues(n) : "undefined" != typeof msCrypto ? msCrypto.getRandomValues(n) : t(n, e), n;
        }
        var n = new Array(e);
        return t(n, e), n;
      }
      function r() {
        var e = n(s);
        e[6] = 79 & e[6] | 64, e[8] = 191 & e[8] | 128;
        for (var t = "",
            r = 0; s > r; ++r) {
          var i = e[r];
          (4 === r || 6 === r || 8 === r) && (t += "-"), 16 > i && (t += "0"), t += i.toString(16).toLowerCase();
        }
        return t;
      }
      function i() {
        var e;
        do
          e = "@@WeakMap@@" + r();
 while (u.call(l, e));
        return l[e] = !0, e;
      }
      function o(e, t) {
        if (!u.call(e, f)) {
          if (!t)
            return void 0;
          Object.defineProperty(e, f, {value: Object.create(null)});
        }
        return e[f];
      }
      var s = 16,
          a = "undefined" != typeof global && "object" == typeof module && "object" == typeof module.exports && "function" == typeof require,
          c = a && require("crypto"),
          u = Object.prototype.hasOwnProperty,
          l = {},
          f = i();
      return e.prototype = {
        has: function(e) {
          var t = o(e, !1);
          return t ? this._key in t : !1;
        },
        get: function(e) {
          var t = o(e, !1);
          return t ? t[this._key] : void 0;
        },
        set: function(e, t) {
          var n = o(e, !0);
          return n[this._key] = t, this;
        },
        "delete": function(e) {
          var t = o(e, !1);
          return t && this._key in t ? delete t[this._key] : !1;
        },
        clear: function() {
          this._key = i();
        }
      }, e;
    }
    var T = Object.getPrototypeOf(Function),
        j = "function" == typeof Map ? Map : P(),
        N = "function" == typeof Set ? Set : A(),
        V = "function" == typeof WeakMap ? WeakMap : O(),
        k = new V;
    e.decorate = t, e.metadata = n, e.defineMetadata = r, e.hasMetadata = i, e.hasOwnMetadata = o, e.getMetadata = s, e.getOwnMetadata = a, e.getMetadataKeys = c, e.getOwnMetadataKeys = u, e.deleteMetadata = l, function(t) {
      if ("undefined" != typeof t.Reflect) {
        if (t.Reflect !== e)
          for (var n in e)
            t.Reflect[n] = e[n];
      } else
        t.Reflect = e;
    }("undefined" != typeof window ? window : "undefined" != typeof WorkerGlobalScope ? self : "undefined" != typeof global ? global : Function("return this;")());
  }(Reflect || (Reflect = {})), System.register("rx", [], !0, function(e, t, n) {
    var r = System.global,
        i = r.define;
    return r.define = void 0, function(e) {
      function i(e) {
        for (var t = [],
            n = 0,
            r = e.length; r > n; n++)
          t.push(e[n]);
        return t;
      }
      function o(e, t) {
        if (ae && t.stack && "object" == typeof e && null !== e && e.stack && -1 === e.stack.indexOf(fe)) {
          for (var n = [],
              r = t; r; r = r.source)
            r.stack && n.unshift(r.stack);
          n.unshift(e.stack);
          var i = n.join("\n" + fe + "\n");
          e.stack = a(i);
        }
      }
      function a(e) {
        for (var t = e.split("\n"),
            n = [],
            r = 0,
            i = t.length; i > r; r++) {
          var o = t[r];
          c(o) || u(o) || !o || n.push(o);
        }
        return n.join("\n");
      }
      function c(e) {
        var t = f(e);
        if (!t)
          return !1;
        var n = t[0],
            r = t[1];
        return n === ue && r >= le && wn >= r;
      }
      function u(e) {
        return -1 !== e.indexOf("(module.js:") || -1 !== e.indexOf("(node.js:");
      }
      function l() {
        if (ae)
          try {
            throw new Error;
          } catch (e) {
            var t = e.stack.split("\n"),
                n = t[0].indexOf("@") > 0 ? t[1] : t[2],
                r = f(n);
            if (!r)
              return;
            return ue = r[0], r[1];
          }
      }
      function f(e) {
        var t = /at .+ \((.+):(\d+):(?:\d+)\)$/.exec(e);
        if (t)
          return [t[1], Number(t[2])];
        var n = /at ([^ ]+):(\d+):(?:\d+)$/.exec(e);
        if (n)
          return [n[1], Number(n[2])];
        var r = /.*@(.+):(\d+)$/.exec(e);
        return r ? [r[1], Number(r[2])] : void 0;
      }
      function h(e) {
        var t = [];
        if (!Ke(e))
          return t;
        qe.nonEnumArgs && e.length && ze(e) && (e = Ye.call(e));
        var n = qe.enumPrototypes && "function" == typeof e,
            r = qe.enumErrorProps && (e === Fe || e instanceof Error);
        for (var i in e)
          n && "prototype" == i || r && ("message" == i || "name" == i) || t.push(i);
        if (qe.nonEnumShadows && e !== $e) {
          var o = e.constructor,
              s = -1,
              a = Se;
          if (e === (o && o.prototype))
            var c = e === He ? ke : e === Fe ? Oe : Me.call(e),
                u = Ue[c];
          for (; ++s < a; )
            i = xe[s], u && u[i] || !Be.call(e, i) || t.push(i);
        }
        return t;
      }
      function d(e, t, n) {
        for (var r = -1,
            i = n(e),
            o = i.length; ++r < o; ) {
          var s = i[r];
          if (t(e[s], s, e) === !1)
            break;
        }
        return e;
      }
      function p(e, t) {
        return d(e, t, h);
      }
      function g(e) {
        return "function" != typeof e.toString && "string" == typeof(e + "");
      }
      function m(e, t, n, r) {
        if (e === t)
          return 0 !== e || 1 / e == 1 / t;
        var i = typeof e,
            o = typeof t;
        if (e === e && (null == e || null == t || "function" != i && "object" != i && "function" != o && "object" != o))
          return !1;
        var s = Me.call(e),
            a = Me.call(t);
        if (s == De && (s = Ne), a == De && (a = Ne), s != a)
          return !1;
        switch (s) {
          case Pe:
          case Ae:
            return +e == +t;
          case je:
            return e != +e ? t != +t : 0 == e ? 1 / e == 1 / t : e == +t;
          case Ve:
          case ke:
            return e == String(t);
        }
        var c = s == Ie;
        if (!c) {
          if (s != Ne || !qe.nodeClass && (g(e) || g(t)))
            return !1;
          var u = !qe.argsObject && ze(e) ? Object : e.constructor,
              l = !qe.argsObject && ze(t) ? Object : t.constructor;
          if (!(u == l || Be.call(e, "constructor") && Be.call(t, "constructor") || se(u) && u instanceof u && se(l) && l instanceof l) && ("constructor" in e && "constructor" in t))
            return !1;
        }
        n || (n = []), r || (r = []);
        for (var f = n.length; f--; )
          if (n[f] == e)
            return r[f] == t;
        var h = 0,
            d = !0;
        if (n.push(e), r.push(t), c) {
          if (f = e.length, h = t.length, d = h == f)
            for (; h--; ) {
              var v = t[h];
              if (!(d = m(e[h], v, n, r)))
                break;
            }
        } else
          p(t, function(t, i, o) {
            return Be.call(o, i) ? (h++, d = Be.call(e, i) && m(e[i], t, n, r)) : void 0;
          }), d && p(e, function(e, t, n) {
            return Be.call(n, t) ? d = --h > -1 : void 0;
          });
        return n.pop(), r.pop(), d;
      }
      function v(e, t) {
        for (var n = new Array(e),
            r = 0; e > r; r++)
          n[r] = t();
        return n;
      }
      function _() {
        try {
          return Qe.apply(this, arguments);
        } catch (e) {
          return et.e = e, et;
        }
      }
      function y(e) {
        if (!se(e))
          throw new TypeError("fn must be a function");
        return Qe = e, _;
      }
      function b(e) {
        throw e;
      }
      function w(e, t) {
        this.id = e, this.value = t;
      }
      function C(e, t) {
        this.scheduler = e, this.disposable = t, this.isDisposed = !1;
      }
      function R(e, t) {
        t.isDisposed || (t.isDisposed = !0, t.disposable.dispose());
      }
      function E(e) {
        this.observer = e, this.a = [], this.isStopped = !1;
      }
      function x(e) {
        this._s = s;
      }
      function S(e) {
        this._s = s, this._l = s.length, this._i = 0;
      }
      function D(e) {
        this._a = e;
      }
      function I(e) {
        this._a = e, this._l = T(e), this._i = 0;
      }
      function P(e) {
        return "number" == typeof e && K.isFinite(e);
      }
      function A(t) {
        var n,
            r = t[ye];
        if (!r && "string" == typeof t)
          return n = new x(t), n[ye]();
        if (!r && t.length !== e)
          return n = new D(t), n[ye]();
        if (!r)
          throw new TypeError("Object is not iterable");
        return t[ye]();
      }
      function O(e) {
        var t = +e;
        return 0 === t ? t : isNaN(t) ? t : 0 > t ? -1 : 1;
      }
      function T(e) {
        var t = +e.length;
        return isNaN(t) ? 0 : 0 !== t && P(t) ? (t = O(t) * Math.floor(Math.abs(t)), 0 >= t ? 0 : t > Qt ? Qt : t) : t;
      }
      function j(e, t) {
        this.observer = e, this.parent = t;
      }
      function N(e, t) {
        return J(e) || (e = yt), new Yt(t, e);
      }
      function V(e, t) {
        return new mn(function(n) {
          var r = new lt,
              i = new ft;
          return i.setDisposable(r), r.setDisposable(e.subscribe(function(e) {
            n.onNext(e);
          }, function(e) {
            try {
              var r = t(e);
            } catch (o) {
              return n.onError(o);
            }
            oe(r) && (r = Ht(r));
            var s = new lt;
            i.setDisposable(s), s.setDisposable(r.subscribe(n));
          }, function(e) {
            n.onCompleted(e);
          })), i;
        }, e);
      }
      function k(e, t) {
        var n = this;
        return new mn(function(r) {
          var i = 0,
              o = e.length;
          return n.subscribe(function(n) {
            if (o > i) {
              var s,
                  a = e[i++];
              try {
                s = t(n, a);
              } catch (c) {
                return r.onError(c);
              }
              r.onNext(s);
            } else
              r.onCompleted();
          }, function(e) {
            r.onError(e);
          }, function() {
            r.onCompleted();
          });
        }, n);
      }
      function M() {
        return !1;
      }
      function B() {
        return [];
      }
      function L(e, t, n) {
        var r = Ee(t, n, 3);
        return e.map(function(t, n) {
          var i = r(t, n, e);
          return oe(i) && (i = Ht(i)), (Ce(i) || we(i)) && (i = Gt(i)), i;
        }).concatAll();
      }
      function F(e, t, n) {
        for (var r = 0,
            i = e.length; i > r; r++)
          if (n(e[r], t))
            return r;
        return -1;
      }
      function $(e) {
        this.comparer = e, this.set = [];
      }
      function H(e, t, n) {
        this.observer = e, this.selector = t, this.source = n, this.i = 0, this.isStopped = !1;
      }
      function W(e, t, n) {
        var r = Ee(t, n, 3);
        return e.map(function(t, n) {
          var i = r(t, n, e);
          return oe(i) && (i = Ht(i)), (Ce(i) || we(i)) && (i = Gt(i)), i;
        }).mergeAll();
      }
      function U(e, t, n) {
        this.observer = e, this.predicate = t, this.source = n, this.i = 0, this.isStopped = !1;
      }
      var q = {
        "boolean": !1,
        "function": !0,
        object: !0,
        number: !1,
        string: !1,
        undefined: !1
      },
          K = q[typeof window] && window || this,
          z = q[typeof t] && t && !t.nodeType && t,
          Q = q[typeof n] && n && !n.nodeType && n,
          G = Q && Q.exports === z && z,
          Y = q[typeof r] && r;
      !Y || Y.global !== Y && Y.window !== Y || (K = Y);
      var X = {
        internals: {},
        config: {Promise: K.Promise},
        helpers: {}
      },
          Z = X.helpers.noop = function() {},
          J = (X.helpers.notDefined = function(e) {
            return "undefined" == typeof e;
          }, X.helpers.isScheduler = function(e) {
            return e instanceof X.Scheduler;
          }),
          ee = X.helpers.identity = function(e) {
            return e;
          },
          te = (X.helpers.pluck = function(e) {
            return function(t) {
              return t[e];
            };
          }, X.helpers.just = function(e) {
            return function() {
              return e;
            };
          }, X.helpers.defaultNow = Date.now),
          ne = X.helpers.defaultComparer = function(e, t) {
            return Ge(e, t);
          },
          re = X.helpers.defaultSubComparer = function(e, t) {
            return e > t ? 1 : t > e ? -1 : 0;
          },
          ie = (X.helpers.defaultKeySerializer = function(e) {
            return e.toString();
          }, X.helpers.defaultError = function(e) {
            throw e;
          }),
          oe = X.helpers.isPromise = function(e) {
            return !!e && "function" == typeof e.then;
          },
          se = (X.helpers.asArray = function() {
            return Array.prototype.slice.call(arguments);
          }, X.helpers.not = function(e) {
            return !e;
          }, X.helpers.isFunction = function() {
            var e = function(e) {
              return "function" == typeof e || !1;
            };
            return e(/x/) && (e = function(e) {
              return "function" == typeof e && "[object Function]" == Me.call(e);
            }), e;
          }());
      X.config.longStackSupport = !1;
      var ae = !1;
      try {
        throw new Error;
      } catch (ce) {
        ae = !!ce.stack;
      }
      var ue,
          le = l(),
          fe = "From previous event:",
          he = X.EmptyError = function() {
            this.message = "Sequence contains no elements.", Error.call(this);
          };
      he.prototype = Error.prototype;
      var de = X.ObjectDisposedError = function() {
        this.message = "Object has been disposed", Error.call(this);
      };
      de.prototype = Error.prototype;
      var pe = X.ArgumentOutOfRangeError = function() {
        this.message = "Argument out of range", Error.call(this);
      };
      pe.prototype = Error.prototype;
      var ge = X.NotSupportedError = function(e) {
        this.message = e || "This operation is not supported", Error.call(this);
      };
      ge.prototype = Error.prototype;
      var me = X.NotImplementedError = function(e) {
        this.message = e || "This operation is not implemented", Error.call(this);
      };
      me.prototype = Error.prototype;
      var ve = X.helpers.notImplemented = function() {
        throw new me;
      },
          _e = X.helpers.notSupported = function() {
            throw new ge;
          },
          ye = "function" == typeof Symbol && Symbol.iterator || "_es6shim_iterator_";
      K.Set && "function" == typeof(new K.Set)["@@iterator"] && (ye = "@@iterator");
      var be = X.doneEnumerator = {
        done: !0,
        value: e
      },
          we = X.helpers.isIterable = function(t) {
            return t[ye] !== e;
          },
          Ce = X.helpers.isArrayLike = function(t) {
            return t && t.length !== e;
          };
      X.helpers.iterator = ye;
      var Re,
          Ee = X.internals.bindCallback = function(e, t, n) {
            if ("undefined" == typeof t)
              return e;
            switch (n) {
              case 0:
                return function() {
                  return e.call(t);
                };
              case 1:
                return function(n) {
                  return e.call(t, n);
                };
              case 2:
                return function(n, r) {
                  return e.call(t, n, r);
                };
              case 3:
                return function(n, r, i) {
                  return e.call(t, n, r, i);
                };
            }
            return function() {
              return e.apply(t, arguments);
            };
          },
          xe = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"],
          Se = xe.length,
          De = "[object Arguments]",
          Ie = "[object Array]",
          Pe = "[object Boolean]",
          Ae = "[object Date]",
          Oe = "[object Error]",
          Te = "[object Function]",
          je = "[object Number]",
          Ne = "[object Object]",
          Ve = "[object RegExp]",
          ke = "[object String]",
          Me = Object.prototype.toString,
          Be = Object.prototype.hasOwnProperty,
          Le = Me.call(arguments) == De,
          Fe = Error.prototype,
          $e = Object.prototype,
          He = String.prototype,
          We = $e.propertyIsEnumerable;
      try {
        Re = !(Me.call(document) == Ne && !({toString: 0} + ""));
      } catch (ce) {
        Re = !0;
      }
      var Ue = {};
      Ue[Ie] = Ue[Ae] = Ue[je] = {
        constructor: !0,
        toLocaleString: !0,
        toString: !0,
        valueOf: !0
      }, Ue[Pe] = Ue[ke] = {
        constructor: !0,
        toString: !0,
        valueOf: !0
      }, Ue[Oe] = Ue[Te] = Ue[Ve] = {
        constructor: !0,
        toString: !0
      }, Ue[Ne] = {constructor: !0};
      var qe = {};
      !function() {
        var e = function() {
          this.x = 1;
        },
            t = [];
        e.prototype = {
          valueOf: 1,
          y: 1
        };
        for (var n in new e)
          t.push(n);
        for (n in arguments)
          ;
        qe.enumErrorProps = We.call(Fe, "message") || We.call(Fe, "name"), qe.enumPrototypes = We.call(e, "prototype"), qe.nonEnumArgs = 0 != n, qe.nonEnumShadows = !/valueOf/.test(t);
      }(1);
      var Ke = X.internals.isObject = function(e) {
        var t = typeof e;
        return e && ("function" == t || "object" == t) || !1;
      },
          ze = function(e) {
            return e && "object" == typeof e ? Me.call(e) == De : !1;
          };
      Le || (ze = function(e) {
        return e && "object" == typeof e ? Be.call(e, "callee") : !1;
      });
      var Qe,
          Ge = X.internals.isEqual = function(e, t) {
            return m(e, t, [], []);
          },
          Ye = ({}.hasOwnProperty, Array.prototype.slice),
          Xe = this.inherits = X.internals.inherits = function(e, t) {
            function n() {
              this.constructor = e;
            }
            n.prototype = t.prototype, e.prototype = new n;
          },
          Ze = X.internals.addProperties = function(e) {
            for (var t = [],
                n = 1,
                r = arguments.length; r > n; n++)
              t.push(arguments[n]);
            for (var i = 0,
                o = t.length; o > i; i++) {
              var s = t[i];
              for (var a in s)
                e[a] = s[a];
            }
          },
          Je = X.internals.addRef = function(e, t) {
            return new mn(function(n) {
              return new rt(t.getDisposable(), e.subscribe(n));
            });
          },
          et = {e: {}};
      w.prototype.compareTo = function(e) {
        var t = this.value.compareTo(e.value);
        return 0 === t && (t = this.id - e.id), t;
      };
      var tt = X.internals.PriorityQueue = function(e) {
        this.items = new Array(e), this.length = 0;
      },
          nt = tt.prototype;
      nt.isHigherPriority = function(e, t) {
        return this.items[e].compareTo(this.items[t]) < 0;
      }, nt.percolate = function(e) {
        if (!(e >= this.length || 0 > e)) {
          var t = e - 1 >> 1;
          if (!(0 > t || t === e) && this.isHigherPriority(e, t)) {
            var n = this.items[e];
            this.items[e] = this.items[t], this.items[t] = n, this.percolate(t);
          }
        }
      }, nt.heapify = function(e) {
        if (+e || (e = 0), !(e >= this.length || 0 > e)) {
          var t = 2 * e + 1,
              n = 2 * e + 2,
              r = e;
          if (t < this.length && this.isHigherPriority(t, r) && (r = t), n < this.length && this.isHigherPriority(n, r) && (r = n), r !== e) {
            var i = this.items[e];
            this.items[e] = this.items[r], this.items[r] = i, this.heapify(r);
          }
        }
      }, nt.peek = function() {
        return this.items[0].value;
      }, nt.removeAt = function(t) {
        this.items[t] = this.items[--this.length], this.items[this.length] = e, this.heapify();
      }, nt.dequeue = function() {
        var e = this.peek();
        return this.removeAt(0), e;
      }, nt.enqueue = function(e) {
        var t = this.length++;
        this.items[t] = new w(tt.count++, e), this.percolate(t);
      }, nt.remove = function(e) {
        for (var t = 0; t < this.length; t++)
          if (this.items[t].value === e)
            return this.removeAt(t), !0;
        return !1;
      }, tt.count = 0;
      var rt = X.CompositeDisposable = function() {
        var e,
            t,
            n = [];
        if (Array.isArray(arguments[0]))
          n = arguments[0], t = n.length;
        else
          for (t = arguments.length, n = new Array(t), e = 0; t > e; e++)
            n[e] = arguments[e];
        for (e = 0; t > e; e++)
          if (!ct(n[e]))
            throw new TypeError("Not a disposable");
        this.disposables = n, this.isDisposed = !1, this.length = n.length;
      },
          it = rt.prototype;
      it.add = function(e) {
        this.isDisposed ? e.dispose() : (this.disposables.push(e), this.length++);
      }, it.remove = function(e) {
        var t = !1;
        if (!this.isDisposed) {
          var n = this.disposables.indexOf(e);
          -1 !== n && (t = !0, this.disposables.splice(n, 1), this.length--, e.dispose());
        }
        return t;
      }, it.dispose = function() {
        if (!this.isDisposed) {
          this.isDisposed = !0;
          for (var e = this.disposables.length,
              t = new Array(e),
              n = 0; e > n; n++)
            t[n] = this.disposables[n];
          for (this.disposables = [], this.length = 0, n = 0; e > n; n++)
            t[n].dispose();
        }
      };
      var ot = X.Disposable = function(e) {
        this.isDisposed = !1, this.action = e || Z;
      };
      ot.prototype.dispose = function() {
        this.isDisposed || (this.action(), this.isDisposed = !0);
      };
      var st = ot.create = function(e) {
        return new ot(e);
      },
          at = ot.empty = {dispose: Z},
          ct = ot.isDisposable = function(e) {
            return e && se(e.dispose);
          },
          ut = ot.checkDisposed = function(e) {
            if (e.isDisposed)
              throw new de;
          },
          lt = X.SingleAssignmentDisposable = function() {
            function e() {
              this.isDisposed = !1, this.current = null;
            }
            var t = e.prototype;
            return t.getDisposable = function() {
              return this.current;
            }, t.setDisposable = function(e) {
              var t = this.isDisposed;
              if (!t) {
                var n = this.current;
                this.current = e;
              }
              n && n.dispose(), t && e && e.dispose();
            }, t.dispose = function() {
              if (!this.isDisposed) {
                this.isDisposed = !0;
                var e = this.current;
                this.current = null;
              }
              e && e.dispose();
            }, e;
          }(),
          ft = X.SerialDisposable = lt,
          ht = X.RefCountDisposable = function() {
            function e(e) {
              this.disposable = e, this.disposable.count++, this.isInnerDisposed = !1;
            }
            function t(e) {
              this.underlyingDisposable = e, this.isDisposed = !1, this.isPrimaryDisposed = !1, this.count = 0;
            }
            return e.prototype.dispose = function() {
              this.disposable.isDisposed || this.isInnerDisposed || (this.isInnerDisposed = !0, this.disposable.count--, 0 === this.disposable.count && this.disposable.isPrimaryDisposed && (this.disposable.isDisposed = !0, this.disposable.underlyingDisposable.dispose()));
            }, t.prototype.dispose = function() {
              this.isDisposed || this.isPrimaryDisposed || (this.isPrimaryDisposed = !0, 0 === this.count && (this.isDisposed = !0, this.underlyingDisposable.dispose()));
            }, t.prototype.getDisposable = function() {
              return this.isDisposed ? at : new e(this);
            }, t;
          }();
      C.prototype.dispose = function() {
        this.scheduler.scheduleWithState(this, R);
      };
      var dt = X.internals.ScheduledItem = function(e, t, n, r, i) {
        this.scheduler = e, this.state = t, this.action = n, this.dueTime = r, this.comparer = i || re, this.disposable = new lt;
      };
      dt.prototype.invoke = function() {
        this.disposable.setDisposable(this.invokeCore());
      }, dt.prototype.compareTo = function(e) {
        return this.comparer(this.dueTime, e.dueTime);
      }, dt.prototype.isCancelled = function() {
        return this.disposable.isDisposed;
      }, dt.prototype.invokeCore = function() {
        return this.action(this.scheduler, this.state);
      };
      var pt = X.Scheduler = function() {
        function e(e, t, n, r) {
          this.now = e, this._schedule = t, this._scheduleRelative = n, this._scheduleAbsolute = r;
        }
        function t(e, t) {
          return t(), at;
        }
        var n = e.prototype;
        return n.schedule = function(e) {
          return this._schedule(e, t);
        }, n.scheduleWithState = function(e, t) {
          return this._schedule(e, t);
        }, n.scheduleWithRelative = function(e, n) {
          return this._scheduleRelative(n, e, t);
        }, n.scheduleWithRelativeAndState = function(e, t, n) {
          return this._scheduleRelative(e, t, n);
        }, n.scheduleWithAbsolute = function(e, n) {
          return this._scheduleAbsolute(n, e, t);
        }, n.scheduleWithAbsoluteAndState = function(e, t, n) {
          return this._scheduleAbsolute(e, t, n);
        }, e.now = te, e.normalize = function(e) {
          return 0 > e && (e = 0), e;
        }, e;
      }(),
          gt = pt.normalize;
      !function(e) {
        function t(e, t) {
          function n(t) {
            i(t, function(t) {
              var r = !1,
                  i = !1,
                  s = e.scheduleWithState(t, function(e, t) {
                    return r ? o.remove(s) : i = !0, n(t), at;
                  });
              i || (o.add(s), r = !0);
            });
          }
          var r = t[0],
              i = t[1],
              o = new rt;
          return n(r), o;
        }
        function n(e, t, n) {
          function r(t) {
            o(t, function(t, i) {
              var o = !1,
                  a = !1,
                  c = e[n](t, i, function(e, t) {
                    return o ? s.remove(c) : a = !0, r(t), at;
                  });
              a || (s.add(c), o = !0);
            });
          }
          var i = t[0],
              o = t[1],
              s = new rt;
          return r(i), s;
        }
        function r(e, t) {
          e(function(n) {
            t(e, n);
          });
        }
        e.scheduleRecursive = function(e) {
          return this.scheduleRecursiveWithState(e, function(e, t) {
            e(function() {
              t(e);
            });
          });
        }, e.scheduleRecursiveWithState = function(e, n) {
          return this.scheduleWithState([e, n], t);
        }, e.scheduleRecursiveWithRelative = function(e, t) {
          return this.scheduleRecursiveWithRelativeAndState(t, e, r);
        }, e.scheduleRecursiveWithRelativeAndState = function(e, t, r) {
          return this._scheduleRelative([e, r], t, function(e, t) {
            return n(e, t, "scheduleWithRelativeAndState");
          });
        }, e.scheduleRecursiveWithAbsolute = function(e, t) {
          return this.scheduleRecursiveWithAbsoluteAndState(t, e, r);
        }, e.scheduleRecursiveWithAbsoluteAndState = function(e, t, r) {
          return this._scheduleAbsolute([e, r], t, function(e, t) {
            return n(e, t, "scheduleWithAbsoluteAndState");
          });
        };
      }(pt.prototype), function(e) {
        pt.prototype.schedulePeriodic = function(e, t) {
          return this.schedulePeriodicWithState(null, e, t);
        }, pt.prototype.schedulePeriodicWithState = function(e, t, n) {
          if ("undefined" == typeof K.setInterval)
            throw new ge;
          t = gt(t);
          var r = e,
              i = K.setInterval(function() {
                r = n(r);
              }, t);
          return st(function() {
            K.clearInterval(i);
          });
        };
      }(pt.prototype), function(e) {
        e.catchError = e["catch"] = function(e) {
          return new Rt(this, e);
        };
      }(pt.prototype);
      var mt,
          vt,
          _t = (X.internals.SchedulePeriodicRecursive = function() {
            function e(e, t) {
              t(0, this._period);
              try {
                this._state = this._action(this._state);
              } catch (n) {
                throw this._cancel.dispose(), n;
              }
            }
            function t(e, t, n, r) {
              this._scheduler = e, this._state = t, this._period = n, this._action = r;
            }
            return t.prototype.start = function() {
              var t = new lt;
              return this._cancel = t, t.setDisposable(this._scheduler.scheduleRecursiveWithRelativeAndState(0, this._period, e.bind(this))), t;
            }, t;
          }(), pt.immediate = function() {
            function e(e, t) {
              return t(this, e);
            }
            return new pt(te, e, _e, _e);
          }()),
          yt = pt.currentThread = function() {
            function e() {
              for (; n.length > 0; ) {
                var e = n.dequeue();
                !e.isCancelled() && e.invoke();
              }
            }
            function t(t, r) {
              var i = new dt(this, t, r, this.now());
              if (n)
                n.enqueue(i);
              else {
                n = new tt(4), n.enqueue(i);
                var o = y(e)();
                if (n = null, o === et)
                  return b(o.e);
              }
              return i.disposable;
            }
            var n,
                r = new pt(te, t, _e, _e);
            return r.scheduleRequired = function() {
              return !n;
            }, r;
          }(),
          bt = function() {
            var e,
                t = Z;
            if (K.WScript)
              e = function(e, t) {
                K.WScript.Sleep(t), e();
              };
            else {
              if (!K.setTimeout)
                throw new ge;
              e = K.setTimeout, t = K.clearTimeout;
            }
            return {
              setTimeout: e,
              clearTimeout: t
            };
          }(),
          wt = bt.setTimeout,
          Ct = bt.clearTimeout;
      !function() {
        function e(t) {
          if (o)
            wt(function() {
              e(t);
            }, 0);
          else {
            var n = i[t];
            if (n) {
              o = !0;
              var r = y(n)();
              if (vt(t), o = !1, r === et)
                return b(r.e);
            }
          }
        }
        function t() {
          if (!K.postMessage || K.importScripts)
            return !1;
          var e = !1,
              t = K.onmessage;
          return K.onmessage = function() {
            e = !0;
          }, K.postMessage("", "*"), K.onmessage = t, e;
        }
        function n(t) {
          "string" == typeof t.data && t.data.substring(0, c.length) === c && e(t.data.substring(c.length));
        }
        var r = 1,
            i = {},
            o = !1;
        vt = function(e) {
          delete i[e];
        };
        var s = RegExp("^" + String(Me).replace(/[.*+?^${}()|[\]\\]/g, "\\$&").replace(/toString| for [^\]]+/g, ".*?") + "$"),
            a = "function" == typeof(a = Y && G && Y.setImmediate) && !s.test(a) && a;
        if (se(a))
          mt = function(t) {
            var n = r++;
            return i[n] = t, a(function() {
              e(n);
            }), n;
          };
        else if ("undefined" != typeof process && "[object process]" === {}.toString.call(process))
          mt = function(t) {
            var n = r++;
            return i[n] = t, process.nextTick(function() {
              e(n);
            }), n;
          };
        else if (t()) {
          var c = "ms.rx.schedule" + Math.random();
          K.addEventListener ? K.addEventListener("message", n, !1) : K.attachEvent("onmessage", n, !1), mt = function(e) {
            var t = r++;
            return i[t] = e, K.postMessage(c + currentId, "*"), t;
          };
        } else if (K.MessageChannel) {
          var u = new K.MessageChannel;
          u.port1.onmessage = function(t) {
            e(t.data);
          }, mt = function(e) {
            var t = r++;
            return i[t] = e, u.port2.postMessage(t), t;
          };
        } else
          mt = "document" in K && "onreadystatechange" in K.document.createElement("script") ? function(t) {
            var n = K.document.createElement("script"),
                o = r++;
            return i[o] = t, n.onreadystatechange = function() {
              e(o), n.onreadystatechange = null, n.parentNode.removeChild(n), n = null;
            }, K.document.documentElement.appendChild(n), o;
          } : function(t) {
            var n = r++;
            return i[n] = t, wt(function() {
              e(n);
            }, 0), n;
          };
      }();
      var Rt = (pt.timeout = pt["default"] = function() {
        function e(e, t) {
          var n = this,
              r = new lt,
              i = mt(function() {
                r.isDisposed || r.setDisposable(t(n, e));
              });
          return new rt(r, st(function() {
            vt(i);
          }));
        }
        function t(e, t, n) {
          var r = this,
              i = pt.normalize(t);
          if (0 === i)
            return r.scheduleWithState(e, n);
          var o = new lt,
              s = wt(function() {
                o.isDisposed || o.setDisposable(n(r, e));
              }, i);
          return new rt(o, st(function() {
            Ct(s);
          }));
        }
        function n(e, t, n) {
          return this.scheduleWithRelativeAndState(e, t - this.now(), n);
        }
        return new pt(te, e, t, n);
      }(), function(e) {
        function t(e, t) {
          return this._scheduler.scheduleWithState(e, this._wrap(t));
        }
        function n(e, t, n) {
          return this._scheduler.scheduleWithRelativeAndState(e, t, this._wrap(n));
        }
        function r(e, t, n) {
          return this._scheduler.scheduleWithAbsoluteAndState(e, t, this._wrap(n));
        }
        function i(i, o) {
          this._scheduler = i, this._handler = o, this._recursiveOriginal = null, this._recursiveWrapper = null, e.call(this, this._scheduler.now.bind(this._scheduler), t, n, r);
        }
        return Xe(i, e), i.prototype._clone = function(e) {
          return new i(e, this._handler);
        }, i.prototype._wrap = function(e) {
          var t = this;
          return function(n, r) {
            try {
              return e(t._getRecursiveWrapper(n), r);
            } catch (i) {
              if (!t._handler(i))
                throw i;
              return at;
            }
          };
        }, i.prototype._getRecursiveWrapper = function(e) {
          if (this._recursiveOriginal !== e) {
            this._recursiveOriginal = e;
            var t = this._clone(e);
            t._recursiveOriginal = e, t._recursiveWrapper = t, this._recursiveWrapper = t;
          }
          return this._recursiveWrapper;
        }, i.prototype.schedulePeriodicWithState = function(e, t, n) {
          var r = this,
              i = !1,
              o = new lt;
          return o.setDisposable(this._scheduler.schedulePeriodicWithState(e, t, function(e) {
            if (i)
              return null;
            try {
              return n(e);
            } catch (t) {
              if (i = !0, !r._handler(t))
                throw t;
              return o.dispose(), null;
            }
          })), o;
        }, i;
      }(pt)),
          Et = X.Notification = function() {
            function e(e, t, n, r, i, o) {
              this.kind = e, this.value = t, this.exception = n, this._accept = r, this._acceptObservable = i, this.toString = o;
            }
            return e.prototype.accept = function(e, t, n) {
              return e && "object" == typeof e ? this._acceptObservable(e) : this._accept(e, t, n);
            }, e.prototype.toObservable = function(e) {
              var t = this;
              return J(e) || (e = _t), new mn(function(n) {
                return e.scheduleWithState(t, function(e, t) {
                  t._acceptObservable(n), "N" === t.kind && n.onCompleted();
                });
              });
            }, e;
          }(),
          xt = Et.createOnNext = function() {
            function e(e) {
              return e(this.value);
            }
            function t(e) {
              return e.onNext(this.value);
            }
            function n() {
              return "OnNext(" + this.value + ")";
            }
            return function(r) {
              return new Et("N", r, null, e, t, n);
            };
          }(),
          St = Et.createOnError = function() {
            function e(e, t) {
              return t(this.exception);
            }
            function t(e) {
              return e.onError(this.exception);
            }
            function n() {
              return "OnError(" + this.exception + ")";
            }
            return function(r) {
              return new Et("E", null, r, e, t, n);
            };
          }(),
          Dt = Et.createOnCompleted = function() {
            function e(e, t, n) {
              return n();
            }
            function t(e) {
              return e.onCompleted();
            }
            function n() {
              return "OnCompleted()";
            }
            return function() {
              return new Et("C", null, null, e, t, n);
            };
          }(),
          It = X.internals.Enumerator = function(e) {
            this._next = e;
          };
      It.prototype.next = function() {
        return this._next();
      }, It.prototype[ye] = function() {
        return this;
      };
      var Pt = X.internals.Enumerable = function(e) {
        this._iterator = e;
      };
      Pt.prototype[ye] = function() {
        return this._iterator();
      }, Pt.prototype.concat = function() {
        var e = this;
        return new mn(function(t) {
          var n,
              r = e[ye](),
              i = new ft,
              o = _t.scheduleRecursive(function(e) {
                if (!n) {
                  try {
                    var o = r.next();
                  } catch (s) {
                    return t.onError(s);
                  }
                  if (o.done)
                    return t.onCompleted();
                  var a = o.value;
                  oe(a) && (a = Ht(a));
                  var c = new lt;
                  i.setDisposable(c), c.setDisposable(a.subscribe(function(e) {
                    t.onNext(e);
                  }, function(e) {
                    t.onError(e);
                  }, e));
                }
              });
          return new rt(i, o, st(function() {
            n = !0;
          }));
        });
      }, Pt.prototype.catchError = function() {
        var e = this;
        return new mn(function(t) {
          var n,
              r = e[ye](),
              i = new ft,
              o = _t.scheduleRecursiveWithState(null, function(e, o) {
                if (!n) {
                  try {
                    var s = r.next();
                  } catch (a) {
                    return observer.onError(a);
                  }
                  if (s.done)
                    return void(null !== e ? t.onError(e) : t.onCompleted());
                  var c = s.value;
                  oe(c) && (c = Ht(c));
                  var u = new lt;
                  i.setDisposable(u), u.setDisposable(c.subscribe(function(e) {
                    t.onNext(e);
                  }, o, function() {
                    t.onCompleted();
                  }));
                }
              });
          return new rt(i, o, st(function() {
            n = !0;
          }));
        });
      }, Pt.prototype.catchErrorWhen = function(e) {
        var t = this;
        return new mn(function(n) {
          var r,
              i,
              o = new yn,
              s = new yn,
              a = e(o),
              c = a.subscribe(s),
              u = t[ye](),
              l = new ft,
              f = _t.scheduleRecursive(function(e) {
                if (!r) {
                  try {
                    var t = u.next();
                  } catch (a) {
                    return n.onError(a);
                  }
                  if (t.done)
                    return void(i ? n.onError(i) : n.onCompleted());
                  var c = t.value;
                  oe(c) && (c = Ht(c));
                  var f = new lt,
                      h = new lt;
                  l.setDisposable(new rt(h, f)), f.setDisposable(c.subscribe(function(e) {
                    n.onNext(e);
                  }, function(t) {
                    h.setDisposable(s.subscribe(e, function(e) {
                      n.onError(e);
                    }, function() {
                      n.onCompleted();
                    })), o.onNext(t);
                  }, function() {
                    n.onCompleted();
                  }));
                }
              });
          return new rt(c, l, f, st(function() {
            r = !0;
          }));
        });
      };
      var At = Pt.repeat = function(e, t) {
        return null == t && (t = -1), new Pt(function() {
          var n = t;
          return new It(function() {
            return 0 === n ? be : (n > 0 && n--, {
              done: !1,
              value: e
            });
          });
        });
      },
          Ot = Pt.of = function(e, t, n) {
            if (t)
              var r = Ee(t, n, 3);
            return new Pt(function() {
              var n = -1;
              return new It(function() {
                return ++n < e.length ? {
                  done: !1,
                  value: t ? r(e[n], n, e) : e[n]
                } : be;
              });
            });
          },
          Tt = X.Observer = function() {};
      Tt.prototype.toNotifier = function() {
        var e = this;
        return function(t) {
          return t.accept(e);
        };
      }, Tt.prototype.asObserver = function() {
        return new kt(this.onNext.bind(this), this.onError.bind(this), this.onCompleted.bind(this));
      }, Tt.prototype.checked = function() {
        return new Mt(this);
      };
      var jt = Tt.create = function(e, t, n) {
        return e || (e = Z), t || (t = ie), n || (n = Z), new kt(e, t, n);
      };
      Tt.fromNotifier = function(e, t) {
        return new kt(function(n) {
          return e.call(t, xt(n));
        }, function(n) {
          return e.call(t, St(n));
        }, function() {
          return e.call(t, Dt());
        });
      }, Tt.prototype.notifyOn = function(e) {
        return new Lt(e, this);
      }, Tt.prototype.makeSafe = function(e) {
        return new AnonymousSafeObserver(this._onNext, this._onError, this._onCompleted, e);
      };
      var Nt,
          Vt = X.internals.AbstractObserver = function(e) {
            function t() {
              this.isStopped = !1, e.call(this);
            }
            return Xe(t, e), t.prototype.next = ve, t.prototype.error = ve, t.prototype.completed = ve, t.prototype.onNext = function(e) {
              this.isStopped || this.next(e);
            }, t.prototype.onError = function(e) {
              this.isStopped || (this.isStopped = !0, this.error(e));
            }, t.prototype.onCompleted = function() {
              this.isStopped || (this.isStopped = !0, this.completed());
            }, t.prototype.dispose = function() {
              this.isStopped = !0;
            }, t.prototype.fail = function(e) {
              return this.isStopped ? !1 : (this.isStopped = !0, this.error(e), !0);
            }, t;
          }(Tt),
          kt = X.AnonymousObserver = function(e) {
            function t(t, n, r) {
              e.call(this), this._onNext = t, this._onError = n, this._onCompleted = r;
            }
            return Xe(t, e), t.prototype.next = function(e) {
              this._onNext(e);
            }, t.prototype.error = function(e) {
              this._onError(e);
            }, t.prototype.completed = function() {
              this._onCompleted();
            }, t;
          }(Vt),
          Mt = function(e) {
            function t(t) {
              e.call(this), this._observer = t, this._state = 0;
            }
            Xe(t, e);
            var n = t.prototype;
            return n.onNext = function(e) {
              this.checkAccess();
              var t = y(this._observer.onNext).call(this._observer, e);
              this._state = 0, t === et && b(t.e);
            }, n.onError = function(e) {
              this.checkAccess();
              var t = y(this._observer.onError).call(this._observer, e);
              this._state = 2, t === et && b(t.e);
            }, n.onCompleted = function() {
              this.checkAccess();
              var e = y(this._observer.onCompleted).call(this._observer);
              this._state = 2, e === et && b(e.e);
            }, n.checkAccess = function() {
              if (1 === this._state)
                throw new Error("Re-entrancy detected");
              if (2 === this._state)
                throw new Error("Observer completed");
              0 === this._state && (this._state = 1);
            }, t;
          }(Tt),
          Bt = X.internals.ScheduledObserver = function(e) {
            function t(t, n) {
              e.call(this), this.scheduler = t, this.observer = n, this.isAcquired = !1, this.hasFaulted = !1, this.queue = [], this.disposable = new ft;
            }
            return Xe(t, e), t.prototype.next = function(e) {
              var t = this;
              this.queue.push(function() {
                t.observer.onNext(e);
              });
            }, t.prototype.error = function(e) {
              var t = this;
              this.queue.push(function() {
                t.observer.onError(e);
              });
            }, t.prototype.completed = function() {
              var e = this;
              this.queue.push(function() {
                e.observer.onCompleted();
              });
            }, t.prototype.ensureActive = function() {
              var e = !1,
                  t = this;
              !this.hasFaulted && this.queue.length > 0 && (e = !this.isAcquired, this.isAcquired = !0), e && this.disposable.setDisposable(this.scheduler.scheduleRecursive(function(e) {
                var n;
                if (!(t.queue.length > 0))
                  return void(t.isAcquired = !1);
                n = t.queue.shift();
                try {
                  n();
                } catch (r) {
                  throw t.queue = [], t.hasFaulted = !0, r;
                }
                e();
              }));
            }, t.prototype.dispose = function() {
              e.prototype.dispose.call(this), this.disposable.dispose();
            }, t;
          }(Vt),
          Lt = function(e) {
            function t(t, n, r) {
              e.call(this, t, n), this._cancel = r;
            }
            return Xe(t, e), t.prototype.next = function(t) {
              e.prototype.next.call(this, t), this.ensureActive();
            }, t.prototype.error = function(t) {
              e.prototype.error.call(this, t), this.ensureActive();
            }, t.prototype.completed = function() {
              e.prototype.completed.call(this), this.ensureActive();
            }, t.prototype.dispose = function() {
              e.prototype.dispose.call(this), this._cancel && this._cancel.dispose(), this._cancel = null;
            }, t;
          }(Bt),
          Ft = X.Observable = function() {
            function e(e) {
              if (X.config.longStackSupport && ae) {
                try {
                  throw new Error;
                } catch (t) {
                  this.stack = t.stack.substring(t.stack.indexOf("\n") + 1);
                }
                var n = this;
                this._subscribe = function(t) {
                  var r = t.onError.bind(t);
                  return t.onError = function(e) {
                    o(e, n), r(e);
                  }, e.call(n, t);
                };
              } else
                this._subscribe = e;
            }
            return Nt = e.prototype, Nt.subscribe = Nt.forEach = function(e, t, n) {
              return this._subscribe("object" == typeof e ? e : jt(e, t, n));
            }, Nt.subscribeOnNext = function(e, t) {
              return this._subscribe(jt("undefined" != typeof t ? function(n) {
                e.call(t, n);
              } : e));
            }, Nt.subscribeOnError = function(e, t) {
              return this._subscribe(jt(null, "undefined" != typeof t ? function(n) {
                e.call(t, n);
              } : e));
            }, Nt.subscribeOnCompleted = function(e, t) {
              return this._subscribe(jt(null, null, "undefined" != typeof t ? function() {
                e.call(t);
              } : e));
            }, e;
          }(),
          $t = X.ObservableBase = function(e) {
            function t(e) {
              return e && se(e.dispose) ? e : se(e) ? st(e) : at;
            }
            function n(e, n) {
              var r = n[0],
                  i = n[1],
                  o = y(i.subscribeCore).call(i, r);
              return o !== et || r.fail(et.e) ? void r.setDisposable(t(o)) : b(et.e);
            }
            function r(e) {
              var t = new vn(e),
                  r = [t, this];
              return yt.scheduleRequired() ? yt.scheduleWithState(r, n) : n(null, r), t;
            }
            function i() {
              e.call(this, r);
            }
            return Xe(i, e), i.prototype.subscribeCore = ve, i;
          }(Ft);
      Nt.observeOn = function(e) {
        var t = this;
        return new mn(function(n) {
          return t.subscribe(new Lt(e, n));
        }, t);
      }, Nt.subscribeOn = function(e) {
        var t = this;
        return new mn(function(n) {
          var r = new lt,
              i = new ft;
          return i.setDisposable(r), r.setDisposable(e.schedule(function() {
            i.setDisposable(new C(e, t.subscribe(n)));
          })), i;
        }, t);
      };
      var Ht = Ft.fromPromise = function(e) {
        return Ut(function() {
          var t = new X.AsyncSubject;
          return e.then(function(e) {
            t.onNext(e), t.onCompleted();
          }, t.onError.bind(t)), t;
        });
      };
      Nt.toPromise = function(e) {
        if (e || (e = X.config.Promise), !e)
          throw new ge("Promise type not provided nor in Rx.config.Promise");
        var t = this;
        return new e(function(e, n) {
          var r,
              i = !1;
          t.subscribe(function(e) {
            r = e, i = !0;
          }, n, function() {
            i && e(r);
          });
        });
      };
      var Wt = function(e) {
        function t(t) {
          this.source = t, e.call(this);
        }
        return Xe(t, e), t.prototype.subscribeCore = function(e) {
          return this.source.subscribe(new E(e));
        }, t;
      }($t);
      E.prototype.onNext = function(e) {
        this.isStopped || this.a.push(e);
      }, E.prototype.onError = function(e) {
        this.isStopped || (this.isStopped = !0, this.observer.onError(e));
      }, E.prototype.onCompleted = function() {
        this.isStopped || (this.isStopped = !0, this.observer.onNext(this.a), this.observer.onCompleted());
      }, E.prototype.dispose = function() {
        this.isStopped = !0;
      }, E.prototype.fail = function(e) {
        return this.isStopped ? !1 : (this.isStopped = !0, this.observer.onError(e), !0);
      }, Nt.toArray = function() {
        return new Wt(this);
      }, Ft.create = Ft.createWithDisposable = function(e, t) {
        return new mn(e, t);
      };
      var Ut = Ft.defer = function(e) {
        return new mn(function(t) {
          var n;
          try {
            n = e();
          } catch (r) {
            return nn(r).subscribe(t);
          }
          return oe(n) && (n = Ht(n)), n.subscribe(t);
        });
      },
          qt = Ft.empty = function(e) {
            return J(e) || (e = _t), new mn(function(t) {
              return e.scheduleWithState(null, function() {
                t.onCompleted();
              });
            });
          },
          Kt = function(e) {
            function t(t, n, r) {
              this.iterable = t, this.mapper = n, this.scheduler = r, e.call(this);
            }
            return Xe(t, e), t.prototype.subscribeCore = function(e) {
              var t = new zt(e, this);
              return t.run();
            }, t;
          }($t),
          zt = function() {
            function e(e, t) {
              this.observer = e, this.parent = t;
            }
            return e.prototype.run = function() {
              function e(e, t) {
                try {
                  var o = n.next();
                } catch (s) {
                  return r.onError(s);
                }
                if (o.done)
                  return r.onCompleted();
                var a = o.value;
                if (i)
                  try {
                    a = i(a, e);
                  } catch (s) {
                    return r.onError(s);
                  }
                r.onNext(a), t(e + 1);
              }
              var t = Object(this.parent.iterable),
                  n = A(t),
                  r = this.observer,
                  i = this.parent.mapper;
              return this.parent.scheduler.scheduleRecursiveWithState(0, e);
            }, e;
          }(),
          Qt = Math.pow(2, 53) - 1;
      x.prototype[ye] = function() {
        return new S(this._s);
      }, S.prototype[ye] = function() {
        return this;
      }, S.prototype.next = function() {
        return this._i < this._l ? {
          done: !1,
          value: this._s.charAt(this._i++)
        } : be;
      }, D.prototype[ye] = function() {
        return new I(this._a);
      }, I.prototype[ye] = function() {
        return this;
      }, I.prototype.next = function() {
        return this._i < this._l ? {
          done: !1,
          value: this._a[this._i++]
        } : be;
      };
      var Gt = Ft.from = function(e, t, n, r) {
        if (null == e)
          throw new Error("iterable cannot be null.");
        if (t && !se(t))
          throw new Error("mapFn when provided must be a function");
        if (t)
          var i = Ee(t, n, 2);
        return J(r) || (r = yt), new Kt(e, i, r);
      },
          Yt = function(e) {
            function t(t, n) {
              this.args = t, this.scheduler = n, e.call(this);
            }
            return Xe(t, e), t.prototype.subscribeCore = function(e) {
              var t = new j(e, this);
              return t.run();
            }, t;
          }($t);
      j.prototype.run = function() {
        function e(e, i) {
          r > e ? (t.onNext(n[e]), i(e + 1)) : t.onCompleted();
        }
        var t = this.observer,
            n = this.parent.args,
            r = n.length;
        return this.parent.scheduler.scheduleRecursiveWithState(0, e);
      };
      var Xt = Ft.fromArray = function(e, t) {
        return J(t) || (t = yt), new Yt(e, t);
      };
      Ft.generate = function(e, t, n, r, i) {
        return J(i) || (i = yt), new mn(function(o) {
          var s = !0;
          return i.scheduleRecursiveWithState(e, function(e, i) {
            var a,
                c;
            try {
              s ? s = !1 : e = n(e), a = t(e), a && (c = r(e));
            } catch (u) {
              return o.onError(u);
            }
            a ? (o.onNext(c), i(e)) : o.onCompleted();
          });
        });
      };
      var Zt = Ft.never = function() {
        return new mn(function() {
          return at;
        });
      };
      Ft.of = function() {
        for (var e = arguments.length,
            t = new Array(e),
            n = 0; e > n; n++)
          t[n] = arguments[n];
        return new Yt(t, yt);
      }, Ft.ofWithScheduler = function(e) {
        for (var t = arguments.length,
            n = new Array(t - 1),
            r = 1; t > r; r++)
          n[r - 1] = arguments[r];
        return new Yt(n, e);
      }, Ft.pairs = function(e, t) {
        return t || (t = X.Scheduler.currentThread), new mn(function(n) {
          var r = Object.keys(e),
              i = r.length;
          return t.scheduleRecursiveWithState(0, function(t, o) {
            if (i > t) {
              var s = r[t];
              n.onNext([s, e[s]]), o(t + 1);
            } else
              n.onCompleted();
          });
        });
      };
      var Jt = function(e) {
        function t(t, n, r) {
          this.start = t, this.count = n, this.scheduler = r, e.call(this);
        }
        return Xe(t, e), t.prototype.subscribeCore = function(e) {
          var t = new en(e, this);
          return t.run();
        }, t;
      }($t),
          en = function() {
            function e(e, t) {
              this.observer = e, this.parent = t;
            }
            return e.prototype.run = function() {
              function e(e, i) {
                n > e ? (r.onNext(t + e), i(e + 1)) : r.onCompleted();
              }
              var t = this.parent.start,
                  n = this.parent.count,
                  r = this.observer;
              return this.parent.scheduler.scheduleRecursiveWithState(0, e);
            }, e;
          }();
      Ft.range = function(e, t, n) {
        return J(n) || (n = yt), new Jt(e, t, n);
      }, Ft.repeat = function(e, t, n) {
        return J(n) || (n = yt), tn(e, n).repeat(null == t ? -1 : t);
      };
      var tn = Ft["return"] = Ft.just = Ft.returnValue = function(e, t) {
        return J(t) || (t = _t), new mn(function(n) {
          return t.scheduleWithState(e, function(e, t) {
            n.onNext(t), n.onCompleted();
          });
        });
      },
          nn = Ft["throw"] = Ft.throwError = function(e, t) {
            return J(t) || (t = _t), new mn(function(n) {
              return t.schedule(function() {
                n.onError(e);
              });
            });
          };
      Ft.throwException = function() {
        return Ft.throwError.apply(null, arguments);
      }, Ft.using = function(e, t) {
        return new mn(function(n) {
          var r,
              i,
              o = at;
          try {
            r = e(), r && (o = r), i = t(r);
          } catch (s) {
            return new rt(nn(s).subscribe(n), o);
          }
          return new rt(i.subscribe(n), o);
        });
      }, Nt.amb = function(e) {
        var t = this;
        return new mn(function(n) {
          function r() {
            o || (o = s, u.dispose());
          }
          function i() {
            o || (o = a, c.dispose());
          }
          var o,
              s = "L",
              a = "R",
              c = new lt,
              u = new lt;
          return oe(e) && (e = Ht(e)), c.setDisposable(t.subscribe(function(e) {
            r(), o === s && n.onNext(e);
          }, function(e) {
            r(), o === s && n.onError(e);
          }, function() {
            r(), o === s && n.onCompleted();
          })), u.setDisposable(e.subscribe(function(e) {
            i(), o === a && n.onNext(e);
          }, function(e) {
            i(), o === a && n.onError(e);
          }, function() {
            i(), o === a && n.onCompleted();
          })), new rt(c, u);
        });
      }, Ft.amb = function() {
        function e(e, t) {
          return e.amb(t);
        }
        var t = Zt(),
            n = [];
        if (Array.isArray(arguments[0]))
          n = arguments[0];
        else
          for (var r = 0,
              i = arguments.length; i > r; r++)
            n.push(arguments[r]);
        for (var r = 0,
            i = n.length; i > r; r++)
          t = e(t, n[r]);
        return t;
      }, Nt["catch"] = Nt.catchError = Nt.catchException = function(e) {
        return "function" == typeof e ? V(this, e) : rn([this, e]);
      };
      var rn = Ft.catchError = Ft["catch"] = Ft.catchException = function() {
        var e = [];
        if (Array.isArray(arguments[0]))
          e = arguments[0];
        else
          for (var t = 0,
              n = arguments.length; n > t; t++)
            e.push(arguments[t]);
        return Ot(e).catchError();
      };
      Nt.combineLatest = function() {
        for (var e = arguments.length,
            t = new Array(e),
            n = 0; e > n; n++)
          t[n] = arguments[n];
        return Array.isArray(t[0]) ? t[0].unshift(this) : t.unshift(this), on.apply(this, t);
      };
      var on = Ft.combineLatest = function() {
        for (var e = arguments.length,
            t = new Array(e),
            n = 0; e > n; n++)
          t[n] = arguments[n];
        var r = t.pop();
        return Array.isArray(t[0]) && (t = t[0]), new mn(function(e) {
          function n(t) {
            if (a[t] = !0, c || (c = a.every(ee))) {
              try {
                var n = r.apply(null, l);
              } catch (i) {
                return e.onError(i);
              }
              e.onNext(n);
            } else
              u.filter(function(e, n) {
                return n !== t;
              }).every(ee) && e.onCompleted();
          }
          function i(t) {
            u[t] = !0, u.every(ee) && e.onCompleted();
          }
          for (var o = t.length,
              s = function() {
                return !1;
              },
              a = v(o, s),
              c = !1,
              u = v(o, s),
              l = new Array(o),
              f = new Array(o),
              h = 0; o > h; h++)
            !function(r) {
              var o = t[r],
                  s = new lt;
              oe(o) && (o = Ht(o)), s.setDisposable(o.subscribe(function(e) {
                l[r] = e, n(r);
              }, function(t) {
                e.onError(t);
              }, function() {
                i(r);
              })), f[r] = s;
            }(h);
          return new rt(f);
        }, this);
      };
      Nt.concat = function() {
        for (var e = [],
            t = 0,
            n = arguments.length; n > t; t++)
          e.push(arguments[t]);
        return e.unshift(this), sn.apply(null, e);
      };
      var sn = Ft.concat = function() {
        var e;
        if (Array.isArray(arguments[0]))
          e = arguments[0];
        else {
          e = new Array(arguments.length);
          for (var t = 0,
              n = arguments.length; n > t; t++)
            e[t] = arguments[t];
        }
        return Ot(e).concat();
      };
      Nt.concatAll = Nt.concatObservable = function() {
        return this.merge(1);
      };
      var an = function(e) {
        function t(t, n) {
          this.source = t, this.maxConcurrent = n, e.call(this);
        }
        return Xe(t, e), t.prototype.subscribeCore = function(e) {
          var t = new rt;
          return t.add(this.source.subscribe(new cn(e, this.maxConcurrent, t))), t;
        }, t;
      }($t),
          cn = function() {
            function e(e, t, n) {
              this.o = e, this.max = t, this.g = n, this.done = !1, this.q = [], this.activeCount = 0, this.isStopped = !1;
            }
            function t(e, t) {
              this.parent = e, this.sad = t, this.isStopped = !1;
            }
            return e.prototype.handleSubscribe = function(e) {
              var n = new lt;
              this.g.add(n), oe(e) && (e = Ht(e)), n.setDisposable(e.subscribe(new t(this, n)));
            }, e.prototype.onNext = function(e) {
              this.isStopped || (this.activeCount < this.max ? (this.activeCount++, this.handleSubscribe(e)) : this.q.push(e));
            }, e.prototype.onError = function(e) {
              this.isStopped || (this.isStopped = !0, this.o.onError(e));
            }, e.prototype.onCompleted = function() {
              this.isStopped || (this.isStopped = !0, this.done = !0, 0 === this.activeCount && this.o.onCompleted());
            }, e.prototype.dispose = function() {
              this.isStopped = !0;
            }, e.prototype.fail = function(e) {
              return this.isStopped ? !1 : (this.isStopped = !0, this.o.onError(e), !0);
            }, t.prototype.onNext = function(e) {
              this.isStopped || this.parent.o.onNext(e);
            }, t.prototype.onError = function(e) {
              this.isStopped || (this.isStopped = !0, this.parent.o.onError(e));
            }, t.prototype.onCompleted = function() {
              if (!this.isStopped) {
                this.isStopped = !0;
                var e = this.parent;
                e.g.remove(this.sad), e.q.length > 0 ? e.handleSubscribe(e.q.shift()) : (e.activeCount--, e.done && 0 === e.activeCount && e.o.onCompleted());
              }
            }, t.prototype.dispose = function() {
              this.isStopped = !0;
            }, t.prototype.fail = function(e) {
              return this.isStopped ? !1 : (this.isStopped = !0, this.parent.o.onError(e), !0);
            }, e;
          }();
      Nt.merge = function(e) {
        return "number" != typeof e ? un(this, e) : new an(this, e);
      };
      var un = Ft.merge = function() {
        var e,
            t,
            n = [],
            r = arguments.length;
        if (arguments[0])
          if (J(arguments[0]))
            for (e = arguments[0], t = 1; r > t; t++)
              n.push(arguments[t]);
          else
            for (e = _t, t = 0; r > t; t++)
              n.push(arguments[t]);
        else
          for (e = _t, t = 1; r > t; t++)
            n.push(arguments[t]);
        return Array.isArray(n[0]) && (n = n[0]), N(e, n).mergeAll();
      },
          ln = X.CompositeError = function(e) {
            this.name = "NotImplementedError", this.innerErrors = e, this.message = "This contains multiple errors. Check the innerErrors", Error.call(this);
          };
      ln.prototype = Error.prototype, Ft.mergeDelayError = function() {
        var e;
        if (Array.isArray(arguments[0]))
          e = arguments[0];
        else {
          var t = arguments.length;
          e = new Array(t);
          for (var n = 0; t > n; n++)
            e[n] = arguments[n];
        }
        var r = N(null, e);
        return new mn(function(e) {
          function t() {
            0 === s.length ? e.onCompleted() : e.onError(1 === s.length ? s[0] : new ln(s));
          }
          var n = new rt,
              i = new lt,
              o = !1,
              s = [];
          return n.add(i), i.setDisposable(r.subscribe(function(r) {
            var i = new lt;
            n.add(i), oe(r) && (r = Ht(r)), i.setDisposable(r.subscribe(function(t) {
              e.onNext(t);
            }, function(e) {
              s.push(e), n.remove(i), o && 1 === n.length && t();
            }, function() {
              n.remove(i), o && 1 === n.length && t();
            }));
          }, function(e) {
            s.push(e), o = !0, 1 === n.length && t();
          }, function() {
            o = !0, 1 === n.length && t();
          })), n;
        });
      };
      var fn = function(e) {
        function t(t) {
          this.source = t, e.call(this);
        }
        return Xe(t, e), t.prototype.subscribeCore = function(e) {
          var t = new rt,
              n = new lt;
          return t.add(n), n.setDisposable(this.source.subscribe(new hn(e, t))), t;
        }, t;
      }($t),
          hn = function() {
            function e(e, t) {
              this.o = e, this.g = t, this.isStopped = !1, this.done = !1;
            }
            function t(e, t, n) {
              this.parent = e, this.g = t, this.sad = n, this.isStopped = !1;
            }
            return e.prototype.onNext = function(e) {
              if (!this.isStopped) {
                var n = new lt;
                this.g.add(n), oe(e) && (e = Ht(e)), n.setDisposable(e.subscribe(new t(this, this.g, n)));
              }
            }, e.prototype.onError = function(e) {
              this.isStopped || (this.isStopped = !0, this.o.onError(e));
            }, e.prototype.onCompleted = function() {
              this.isStopped || (this.isStopped = !0, this.done = !0, 1 === this.g.length && this.o.onCompleted());
            }, e.prototype.dispose = function() {
              this.isStopped = !0;
            }, e.prototype.fail = function(e) {
              return this.isStopped ? !1 : (this.isStopped = !0, this.o.onError(e), !0);
            }, t.prototype.onNext = function(e) {
              this.isStopped || this.parent.o.onNext(e);
            }, t.prototype.onError = function(e) {
              this.isStopped || (this.isStopped = !0, this.parent.o.onError(e));
            }, t.prototype.onCompleted = function() {
              if (!this.isStopped) {
                var e = this.parent;
                this.isStopped = !0, e.g.remove(this.sad), e.done && 1 === e.g.length && e.o.onCompleted();
              }
            }, t.prototype.dispose = function() {
              this.isStopped = !0;
            }, t.prototype.fail = function(e) {
              return this.isStopped ? !1 : (this.isStopped = !0, this.parent.o.onError(e), !0);
            }, e;
          }();
      Nt.mergeAll = Nt.mergeObservable = function() {
        return new fn(this);
      }, Nt.onErrorResumeNext = function(e) {
        if (!e)
          throw new Error("Second observable is required");
        return dn([this, e]);
      };
      var dn = Ft.onErrorResumeNext = function() {
        var e = [];
        if (Array.isArray(arguments[0]))
          e = arguments[0];
        else
          for (var t = 0,
              n = arguments.length; n > t; t++)
            e.push(arguments[t]);
        return new mn(function(t) {
          var n = 0,
              r = new ft,
              i = _t.scheduleRecursive(function(i) {
                var o,
                    s;
                n < e.length ? (o = e[n++], oe(o) && (o = Ht(o)), s = new lt, r.setDisposable(s), s.setDisposable(o.subscribe(t.onNext.bind(t), i, i))) : t.onCompleted();
              });
          return new rt(r, i);
        });
      };
      Nt.skipUntil = function(e) {
        var t = this;
        return new mn(function(n) {
          var r = !1,
              i = new rt(t.subscribe(function(e) {
                r && n.onNext(e);
              }, function(e) {
                n.onError(e);
              }, function() {
                r && n.onCompleted();
              }));
          oe(e) && (e = Ht(e));
          var o = new lt;
          return i.add(o), o.setDisposable(e.subscribe(function() {
            r = !0, o.dispose();
          }, function(e) {
            n.onError(e);
          }, function() {
            o.dispose();
          })), i;
        }, t);
      }, Nt["switch"] = Nt.switchLatest = function() {
        var e = this;
        return new mn(function(t) {
          var n = !1,
              r = new ft,
              i = !1,
              o = 0,
              s = e.subscribe(function(e) {
                var s = new lt,
                    a = ++o;
                n = !0, r.setDisposable(s), oe(e) && (e = Ht(e)), s.setDisposable(e.subscribe(function(e) {
                  o === a && t.onNext(e);
                }, function(e) {
                  o === a && t.onError(e);
                }, function() {
                  o === a && (n = !1, i && t.onCompleted());
                }));
              }, function(e) {
                t.onError(e);
              }, function() {
                i = !0, !n && t.onCompleted();
              });
          return new rt(s, r);
        }, e);
      }, Nt.takeUntil = function(e) {
        var t = this;
        return new mn(function(n) {
          return oe(e) && (e = Ht(e)), new rt(t.subscribe(n), e.subscribe(function() {
            n.onCompleted();
          }, function(e) {
            n.onError(e);
          }, Z));
        }, t);
      }, Nt.withLatestFrom = function() {
        for (var e = arguments.length,
            t = new Array(e),
            n = 0; e > n; n++)
          t[n] = arguments[n];
        var r = t.pop(),
            i = this;
        if ("undefined" == typeof i)
          throw new Error("Source observable not found for withLatestFrom().");
        if ("function" != typeof r)
          throw new Error("withLatestFrom() expects a resultSelector function.");
        return Array.isArray(t[0]) && (t = t[0]), new mn(function(e) {
          for (var n = function() {
            return !1;
          },
              o = t.length,
              s = v(o, n),
              a = !1,
              c = new Array(o),
              u = new Array(o + 1),
              l = 0; o > l; l++)
            !function(n) {
              var r = t[n],
                  i = new lt;
              oe(r) && (r = Ht(r)), i.setDisposable(r.subscribe(function(e) {
                c[n] = e, s[n] = !0, a = s.every(ee);
              }, e.onError.bind(e), function() {})), u[n] = i;
            }(l);
          var f = new lt;
          return f.setDisposable(i.subscribe(function(t) {
            var n,
                i = [t].concat(c);
            if (a) {
              try {
                n = r.apply(null, i);
              } catch (o) {
                return void e.onError(o);
              }
              e.onNext(n);
            }
          }, e.onError.bind(e), function() {
            e.onCompleted();
          })), u[o] = f, new rt(u);
        }, this);
      }, Nt.zip = function() {
        if (Array.isArray(arguments[0]))
          return k.apply(this, arguments);
        for (var e = arguments.length,
            t = new Array(e),
            n = 0; e > n; n++)
          t[n] = arguments[n];
        var r = this,
            i = t.pop();
        return t.unshift(r), new mn(function(e) {
          function n(t) {
            var n,
                o;
            if (a.every(function(e) {
              return e.length > 0;
            })) {
              try {
                o = a.map(function(e) {
                  return e.shift();
                }), n = i.apply(r, o);
              } catch (s) {
                return void e.onError(s);
              }
              e.onNext(n);
            } else
              c.filter(function(e, n) {
                return n !== t;
              }).every(ee) && e.onCompleted();
          }
          function o(t) {
            c[t] = !0, c.every(function(e) {
              return e;
            }) && e.onCompleted();
          }
          for (var s = t.length,
              a = v(s, B),
              c = v(s, M),
              u = new Array(s),
              l = 0; s > l; l++)
            !function(r) {
              var i = t[r],
                  s = new lt;
              oe(i) && (i = Ht(i)), s.setDisposable(i.subscribe(function(e) {
                a[r].push(e), n(r);
              }, function(t) {
                e.onError(t);
              }, function() {
                o(r);
              })), u[r] = s;
            }(l);
          return new rt(u);
        }, r);
      }, Ft.zip = function() {
        for (var e = arguments.length,
            t = new Array(e),
            n = 0; e > n; n++)
          t[n] = arguments[n];
        var r = t.shift();
        return r.zip.apply(r, t);
      }, Ft.zipArray = function() {
        var e;
        if (Array.isArray(arguments[0]))
          e = arguments[0];
        else {
          var t = arguments.length;
          e = new Array(t);
          for (var n = 0; t > n; n++)
            e[n] = arguments[n];
        }
        return new mn(function(t) {
          function n(e) {
            if (o.every(function(e) {
              return e.length > 0;
            })) {
              var n = o.map(function(e) {
                return e.shift();
              });
              t.onNext(n);
            } else if (s.filter(function(t, n) {
              return n !== e;
            }).every(ee))
              return void t.onCompleted();
          }
          function r(e) {
            return s[e] = !0, s.every(ee) ? void t.onCompleted() : void 0;
          }
          for (var i = e.length,
              o = v(i, function() {
                return [];
              }),
              s = v(i, function() {
                return !1;
              }),
              a = new Array(i),
              c = 0; i > c; c++)
            !function(i) {
              a[i] = new lt, a[i].setDisposable(e[i].subscribe(function(e) {
                o[i].push(e), n(i);
              }, function(e) {
                t.onError(e);
              }, function() {
                r(i);
              }));
            }(c);
          return new rt(a);
        });
      }, Nt.asObservable = function() {
        var e = this;
        return new mn(function(t) {
          return e.subscribe(t);
        }, this);
      }, Nt.bufferWithCount = function(e, t) {
        return "number" != typeof t && (t = e), this.windowWithCount(e, t).selectMany(function(e) {
          return e.toArray();
        }).where(function(e) {
          return e.length > 0;
        });
      }, Nt.dematerialize = function() {
        var e = this;
        return new mn(function(t) {
          return e.subscribe(function(e) {
            return e.accept(t);
          }, function(e) {
            t.onError(e);
          }, function() {
            t.onCompleted();
          });
        }, this);
      }, Nt.distinctUntilChanged = function(e, t) {
        var n = this;
        return t || (t = ne), new mn(function(r) {
          var i,
              o = !1;
          return n.subscribe(function(n) {
            var s = n;
            if (e)
              try {
                s = e(n);
              } catch (a) {
                return void r.onError(a);
              }
            if (o)
              try {
                var c = t(i, s);
              } catch (a) {
                return void r.onError(a);
              }
            o && c || (o = !0, i = s, r.onNext(n));
          }, function(e) {
            r.onError(e);
          }, function() {
            r.onCompleted();
          });
        }, this);
      }, Nt["do"] = Nt.tap = Nt.doAction = function(e, t, n) {
        var r = this;
        return new mn(function(i) {
          var o = !e || se(e) ? jt(e || Z, t || Z, n || Z) : e;
          return r.subscribe(function(e) {
            try {
              o.onNext(e);
            } catch (t) {
              i.onError(t);
            }
            i.onNext(e);
          }, function(e) {
            try {
              o.onError(e);
            } catch (t) {
              i.onError(t);
            }
            i.onError(e);
          }, function() {
            try {
              o.onCompleted();
            } catch (e) {
              i.onError(e);
            }
            i.onCompleted();
          });
        }, this);
      }, Nt.doOnNext = Nt.tapOnNext = function(e, t) {
        return this.tap("undefined" != typeof t ? function(n) {
          e.call(t, n);
        } : e);
      }, Nt.doOnError = Nt.tapOnError = function(e, t) {
        return this.tap(Z, "undefined" != typeof t ? function(n) {
          e.call(t, n);
        } : e);
      }, Nt.doOnCompleted = Nt.tapOnCompleted = function(e, t) {
        return this.tap(Z, null, "undefined" != typeof t ? function() {
          e.call(t);
        } : e);
      }, Nt["finally"] = Nt.ensure = function(e) {
        var t = this;
        return new mn(function(n) {
          var r;
          try {
            r = t.subscribe(n);
          } catch (i) {
            throw e(), i;
          }
          return st(function() {
            try {
              r.dispose();
            } catch (t) {
              throw t;
            } finally {
              e();
            }
          });
        }, this);
      }, Nt.finallyAction = function(e) {
        return this.ensure(e);
      }, Nt.ignoreElements = function() {
        var e = this;
        return new mn(function(t) {
          return e.subscribe(Z, function(e) {
            t.onError(e);
          }, function() {
            t.onCompleted();
          });
        }, e);
      }, Nt.materialize = function() {
        var e = this;
        return new mn(function(t) {
          return e.subscribe(function(e) {
            t.onNext(xt(e));
          }, function(e) {
            t.onNext(St(e)), t.onCompleted();
          }, function() {
            t.onNext(Dt()), t.onCompleted();
          });
        }, e);
      }, Nt.repeat = function(e) {
        return At(this, e).concat();
      }, Nt.retry = function(e) {
        return At(this, e).catchError();
      }, Nt.retryWhen = function(e) {
        return At(this).catchErrorWhen(e);
      }, Nt.scan = function() {
        var e,
            t,
            n = !1,
            r = this;
        return 2 === arguments.length ? (n = !0, e = arguments[0], t = arguments[1]) : t = arguments[0], new mn(function(i) {
          var o,
              s,
              a;
          return r.subscribe(function(r) {
            !a && (a = !0);
            try {
              o ? s = t(s, r) : (s = n ? t(e, r) : r, o = !0);
            } catch (c) {
              return void i.onError(c);
            }
            i.onNext(s);
          }, function(e) {
            i.onError(e);
          }, function() {
            !a && n && i.onNext(e), i.onCompleted();
          });
        }, r);
      }, Nt.skipLast = function(e) {
        if (0 > e)
          throw new pe;
        var t = this;
        return new mn(function(n) {
          var r = [];
          return t.subscribe(function(t) {
            r.push(t), r.length > e && n.onNext(r.shift());
          }, function(e) {
            n.onError(e);
          }, function() {
            n.onCompleted();
          });
        }, t);
      }, Nt.startWith = function() {
        var e,
            t = 0;
        arguments.length && J(arguments[0]) ? (e = arguments[0], t = 1) : e = _t;
        for (var n = [],
            r = t,
            i = arguments.length; i > r; r++)
          n.push(arguments[r]);
        return Ot([Xt(n, e), this]).concat();
      }, Nt.takeLast = function(e) {
        if (0 > e)
          throw new pe;
        var t = this;
        return new mn(function(n) {
          var r = [];
          return t.subscribe(function(t) {
            r.push(t), r.length > e && r.shift();
          }, function(e) {
            n.onError(e);
          }, function() {
            for (; r.length > 0; )
              n.onNext(r.shift());
            n.onCompleted();
          });
        }, t);
      }, Nt.takeLastBuffer = function(e) {
        var t = this;
        return new mn(function(n) {
          var r = [];
          return t.subscribe(function(t) {
            r.push(t), r.length > e && r.shift();
          }, function(e) {
            n.onError(e);
          }, function() {
            n.onNext(r), n.onCompleted();
          });
        }, t);
      }, Nt.windowWithCount = function(e, t) {
        var n = this;
        if (+e || (e = 0), Math.abs(e) === 1 / 0 && (e = 0), 0 >= e)
          throw new pe;
        if (null == t && (t = e), +t || (t = 0), Math.abs(t) === 1 / 0 && (t = 0), 0 >= t)
          throw new pe;
        return new mn(function(r) {
          function i() {
            var e = new yn;
            c.push(e), r.onNext(Je(e, s));
          }
          var o = new lt,
              s = new ht(o),
              a = 0,
              c = [];
          return i(), o.setDisposable(n.subscribe(function(n) {
            for (var r = 0,
                o = c.length; o > r; r++)
              c[r].onNext(n);
            var s = a - e + 1;
            s >= 0 && s % t === 0 && c.shift().onCompleted(), ++a % t === 0 && i();
          }, function(e) {
            for (; c.length > 0; )
              c.shift().onError(e);
            r.onError(e);
          }, function() {
            for (; c.length > 0; )
              c.shift().onCompleted();
            r.onCompleted();
          })), s;
        }, n);
      }, Nt.selectConcat = Nt.concatMap = function(e, t, n) {
        return se(e) && se(t) ? this.concatMap(function(n, r) {
          var i = e(n, r);
          return oe(i) && (i = Ht(i)), (Ce(i) || we(i)) && (i = Gt(i)), i.map(function(e, i) {
            return t(n, e, r, i);
          });
        }) : se(e) ? L(this, e, n) : L(this, function() {
          return e;
        });
      }, Nt.concatMapObserver = Nt.selectConcatObserver = function(e, t, n, r) {
        var i = this,
            o = Ee(e, r, 2),
            s = Ee(t, r, 1),
            a = Ee(n, r, 0);
        return new mn(function(e) {
          var t = 0;
          return i.subscribe(function(n) {
            var r;
            try {
              r = o(n, t++);
            } catch (i) {
              return void e.onError(i);
            }
            oe(r) && (r = Ht(r)), e.onNext(r);
          }, function(t) {
            var n;
            try {
              n = s(t);
            } catch (r) {
              return void e.onError(r);
            }
            oe(n) && (n = Ht(n)), e.onNext(n), e.onCompleted();
          }, function() {
            var t;
            try {
              t = a();
            } catch (n) {
              return void e.onError(n);
            }
            oe(t) && (t = Ht(t)), e.onNext(t), e.onCompleted();
          });
        }, this).concatAll();
      }, Nt.defaultIfEmpty = function(t) {
        var n = this;
        return t === e && (t = null), new mn(function(e) {
          var r = !1;
          return n.subscribe(function(t) {
            r = !0, e.onNext(t);
          }, function(t) {
            e.onError(t);
          }, function() {
            !r && e.onNext(t), e.onCompleted();
          });
        }, n);
      }, $.prototype.push = function(e) {
        var t = -1 === F(this.set, e, this.comparer);
        return t && this.set.push(e), t;
      }, Nt.distinct = function(e, t) {
        var n = this;
        return t || (t = ne), new mn(function(r) {
          var i = new $(t);
          return n.subscribe(function(t) {
            var n = t;
            if (e)
              try {
                n = e(t);
              } catch (o) {
                return void r.onError(o);
              }
            i.push(n) && r.onNext(t);
          }, function(e) {
            r.onError(e);
          }, function() {
            r.onCompleted();
          });
        }, this);
      };
      var pn = function(e) {
        function t(t, n, r) {
          this.source = t, this.selector = Ee(n, r, 3), e.call(this);
        }
        return Xe(t, e), t.prototype.internalMap = function(e, n) {
          var r = this;
          return new t(this.source, function(t, n, i) {
            return e.call(this, r.selector(t, n, i), n, i);
          }, n);
        }, t.prototype.subscribeCore = function(e) {
          return this.source.subscribe(new H(e, this.selector, this));
        }, t;
      }($t);
      H.prototype.onNext = function(e) {
        if (!this.isStopped) {
          var t = y(this.selector).call(this, e, this.i++, this.source);
          return t === et ? this.observer.onError(t.e) : void this.observer.onNext(t);
        }
      }, H.prototype.onError = function(e) {
        this.isStopped || (this.isStopped = !0, this.observer.onError(e));
      }, H.prototype.onCompleted = function() {
        this.isStopped || (this.isStopped = !0, this.observer.onCompleted());
      }, H.prototype.dispose = function() {
        this.isStopped = !0;
      }, H.prototype.fail = function(e) {
        return this.isStopped ? !1 : (this.isStopped = !0, this.observer.onError(e), !0);
      }, Nt.map = Nt.select = function(e, t) {
        var n = "function" == typeof e ? e : function() {
          return e;
        };
        return this instanceof pn ? this.internalMap(n, t) : new pn(this, n, t);
      }, Nt.pluck = function() {
        var t = arguments,
            n = arguments.length;
        if (0 === n)
          throw new Error("List of properties cannot be empty.");
        return this.map(function(r) {
          for (var i = r,
              o = 0; n > o; o++) {
            var s = i[t[o]];
            if ("undefined" == typeof s)
              return e;
            i = s;
          }
          return i;
        });
      }, Nt.flatMapObserver = Nt.selectManyObserver = function(e, t, n, r) {
        var i = this;
        return new mn(function(o) {
          var s = 0;
          return i.subscribe(function(t) {
            var n;
            try {
              n = e.call(r, t, s++);
            } catch (i) {
              return void o.onError(i);
            }
            oe(n) && (n = Ht(n)), o.onNext(n);
          }, function(e) {
            var n;
            try {
              n = t.call(r, e);
            } catch (i) {
              return void o.onError(i);
            }
            oe(n) && (n = Ht(n)), o.onNext(n), o.onCompleted();
          }, function() {
            var e;
            try {
              e = n.call(r);
            } catch (t) {
              return void o.onError(t);
            }
            oe(e) && (e = Ht(e)), o.onNext(e), o.onCompleted();
          });
        }, i).mergeAll();
      }, Nt.selectMany = Nt.flatMap = function(e, t, n) {
        return se(e) && se(t) ? this.flatMap(function(n, r) {
          var i = e(n, r);
          return oe(i) && (i = Ht(i)), (Ce(i) || we(i)) && (i = Gt(i)), i.map(function(e, i) {
            return t(n, e, r, i);
          });
        }, n) : se(e) ? W(this, e, n) : W(this, function() {
          return e;
        });
      }, Nt.selectSwitch = Nt.flatMapLatest = Nt.switchMap = function(e, t) {
        return this.select(e, t).switchLatest();
      }, Nt.skip = function(e) {
        if (0 > e)
          throw new pe;
        var t = this;
        return new mn(function(n) {
          var r = e;
          return t.subscribe(function(e) {
            0 >= r ? n.onNext(e) : r--;
          }, function(e) {
            n.onError(e);
          }, function() {
            n.onCompleted();
          });
        }, t);
      }, Nt.skipWhile = function(e, t) {
        var n = this,
            r = Ee(e, t, 3);
        return new mn(function(e) {
          var t = 0,
              i = !1;
          return n.subscribe(function(o) {
            if (!i)
              try {
                i = !r(o, t++, n);
              } catch (s) {
                return void e.onError(s);
              }
            i && e.onNext(o);
          }, function(t) {
            e.onError(t);
          }, function() {
            e.onCompleted();
          });
        }, n);
      }, Nt.take = function(e, t) {
        if (0 > e)
          throw new pe;
        if (0 === e)
          return qt(t);
        var n = this;
        return new mn(function(t) {
          var r = e;
          return n.subscribe(function(e) {
            r-- > 0 && (t.onNext(e), 0 === r && t.onCompleted());
          }, function(e) {
            t.onError(e);
          }, function() {
            t.onCompleted();
          });
        }, n);
      }, Nt.takeWhile = function(e, t) {
        var n = this,
            r = Ee(e, t, 3);
        return new mn(function(e) {
          var t = 0,
              i = !0;
          return n.subscribe(function(o) {
            if (i) {
              try {
                i = r(o, t++, n);
              } catch (s) {
                return void e.onError(s);
              }
              i ? e.onNext(o) : e.onCompleted();
            }
          }, function(t) {
            e.onError(t);
          }, function() {
            e.onCompleted();
          });
        }, n);
      };
      var gn = function(e) {
        function t(t, n, r) {
          this.source = t, this.predicate = Ee(n, r, 3), e.call(this);
        }
        return Xe(t, e), t.prototype.subscribeCore = function(e) {
          return this.source.subscribe(new U(e, this.predicate, this));
        }, t.prototype.internalFilter = function(e, n) {
          var r = this;
          return new t(this.source, function(t, n, i) {
            return r.predicate(t, n, i) && e.call(this, t, n, i);
          }, n);
        }, t;
      }($t);
      U.prototype.onNext = function(e) {
        if (!this.isStopped) {
          var t = y(this.predicate).call(this, e, this.i++, this.source);
          return t === et ? this.observer.onError(t.e) : void(t && this.observer.onNext(e));
        }
      }, U.prototype.onError = function(e) {
        this.isStopped || (this.isStopped = !0, this.observer.onError(e));
      }, U.prototype.onCompleted = function() {
        this.isStopped || (this.isStopped = !0, this.observer.onCompleted());
      }, U.prototype.dispose = function() {
        this.isStopped = !0;
      }, U.prototype.fail = function(e) {
        return this.isStopped ? !1 : (this.isStopped = !0, this.observer.onError(e), !0);
      }, Nt.filter = Nt.where = function(e, t) {
        return this instanceof gn ? this.internalFilter(e, t) : new gn(this, e, t);
      }, Nt.transduce = function(e) {
        function t(e) {
          return {
            "@@transducer/init": function() {
              return e;
            },
            "@@transducer/step": function(e, t) {
              return e.onNext(t);
            },
            "@@transducer/result": function(e) {
              return e.onCompleted();
            }
          };
        }
        var n = this;
        return new mn(function(r) {
          var i = e(t(r));
          return n.subscribe(function(e) {
            try {
              i["@@transducer/step"](r, e);
            } catch (t) {
              r.onError(t);
            }
          }, function(e) {
            r.onError(e);
          }, function() {
            i["@@transducer/result"](r);
          });
        }, n);
      };
      var mn = X.AnonymousObservable = function(e) {
        function t(e) {
          return e && se(e.dispose) ? e : se(e) ? st(e) : at;
        }
        function n(e, n) {
          var r = n[0],
              i = n[1],
              o = y(i)(r);
          return o !== et || r.fail(et.e) ? void r.setDisposable(t(o)) : b(et.e);
        }
        function r(t, r) {
          function i(e) {
            var r = new vn(e),
                i = [r, t];
            return yt.scheduleRequired() ? yt.scheduleWithState(i, n) : n(null, i), r;
          }
          this.source = r, e.call(this, i);
        }
        return Xe(r, e), r;
      }(Ft),
          vn = function(e) {
            function t(t) {
              e.call(this), this.observer = t, this.m = new lt;
            }
            Xe(t, e);
            var n = t.prototype;
            return n.next = function(e) {
              var t = y(this.observer.onNext).call(this.observer, e);
              t === et && (this.dispose(), b(t.e));
            }, n.error = function(e) {
              var t = y(this.observer.onError).call(this.observer, e);
              this.dispose(), t === et && b(t.e);
            }, n.completed = function() {
              var e = y(this.observer.onCompleted).call(this.observer);
              this.dispose(), e === et && b(e.e);
            }, n.setDisposable = function(e) {
              this.m.setDisposable(e);
            }, n.getDisposable = function() {
              return this.m.getDisposable();
            }, n.dispose = function() {
              e.prototype.dispose.call(this), this.m.dispose();
            }, t;
          }(Vt),
          _n = function(e, t) {
            this.subject = e, this.observer = t;
          };
      _n.prototype.dispose = function() {
        if (!this.subject.isDisposed && null !== this.observer) {
          var e = this.subject.observers.indexOf(this.observer);
          this.subject.observers.splice(e, 1), this.observer = null;
        }
      };
      var yn = X.Subject = function(e) {
        function t(e) {
          return ut(this), this.isStopped ? this.hasError ? (e.onError(this.error), at) : (e.onCompleted(), at) : (this.observers.push(e), new _n(this, e));
        }
        function n() {
          e.call(this, t), this.isDisposed = !1, this.isStopped = !1, this.observers = [], this.hasError = !1;
        }
        return Xe(n, e), Ze(n.prototype, Tt.prototype, {
          hasObservers: function() {
            return this.observers.length > 0;
          },
          onCompleted: function() {
            if (ut(this), !this.isStopped) {
              this.isStopped = !0;
              for (var e = 0,
                  t = i(this.observers),
                  n = t.length; n > e; e++)
                t[e].onCompleted();
              this.observers.length = 0;
            }
          },
          onError: function(e) {
            if (ut(this), !this.isStopped) {
              this.isStopped = !0, this.error = e, this.hasError = !0;
              for (var t = 0,
                  n = i(this.observers),
                  r = n.length; r > t; t++)
                n[t].onError(e);
              this.observers.length = 0;
            }
          },
          onNext: function(e) {
            if (ut(this), !this.isStopped)
              for (var t = 0,
                  n = i(this.observers),
                  r = n.length; r > t; t++)
                n[t].onNext(e);
          },
          dispose: function() {
            this.isDisposed = !0, this.observers = null;
          }
        }), n.create = function(e, t) {
          return new bn(e, t);
        }, n;
      }(Ft),
          bn = (X.AsyncSubject = function(e) {
            function t(e) {
              return ut(this), this.isStopped ? (this.hasError ? e.onError(this.error) : this.hasValue ? (e.onNext(this.value), e.onCompleted()) : e.onCompleted(), at) : (this.observers.push(e), new _n(this, e));
            }
            function n() {
              e.call(this, t), this.isDisposed = !1, this.isStopped = !1, this.hasValue = !1, this.observers = [], this.hasError = !1;
            }
            return Xe(n, e), Ze(n.prototype, Tt, {
              hasObservers: function() {
                return ut(this), this.observers.length > 0;
              },
              onCompleted: function() {
                var e,
                    t;
                if (ut(this), !this.isStopped) {
                  this.isStopped = !0;
                  var n = i(this.observers),
                      t = n.length;
                  if (this.hasValue)
                    for (e = 0; t > e; e++) {
                      var r = n[e];
                      r.onNext(this.value), r.onCompleted();
                    }
                  else
                    for (e = 0; t > e; e++)
                      n[e].onCompleted();
                  this.observers.length = 0;
                }
              },
              onError: function(e) {
                if (ut(this), !this.isStopped) {
                  this.isStopped = !0, this.hasError = !0, this.error = e;
                  for (var t = 0,
                      n = i(this.observers),
                      r = n.length; r > t; t++)
                    n[t].onError(e);
                  this.observers.length = 0;
                }
              },
              onNext: function(e) {
                ut(this), this.isStopped || (this.value = e, this.hasValue = !0);
              },
              dispose: function() {
                this.isDisposed = !0, this.observers = null, this.exception = null, this.value = null;
              }
            }), n;
          }(Ft), X.AnonymousSubject = function(e) {
            function t(e) {
              return this.observable.subscribe(e);
            }
            function n(n, r) {
              this.observer = n, this.observable = r, e.call(this, t);
            }
            return Xe(n, e), Ze(n.prototype, Tt.prototype, {
              onCompleted: function() {
                this.observer.onCompleted();
              },
              onError: function(e) {
                this.observer.onError(e);
              },
              onNext: function(e) {
                this.observer.onNext(e);
              }
            }), n;
          }(Ft));
      "function" == typeof define && "object" == typeof define.amd && define.amd ? (K.Rx = X, define(function() {
        return X;
      })) : z && Q ? G ? (Q.exports = X).Rx = X : z.Rx = X : K.Rx = X;
      var wn = l();
    }.call(this), r.define = i, n.exports;
  }), System.register("angular2/src/facade/lang", [], function(e) {
    "use strict";
    function t(e) {
      return e.name;
    }
    function n(e) {
      return new TypeError(e);
    }
    function r() {
      return j;
    }
    function i(e) {
      return e;
    }
    function o(e) {
      return e;
    }
    function s() {
      return function(e) {
        return e;
      };
    }
    function a() {
      return function(e) {
        return e;
      };
    }
    function c(e) {
      return function(e) {
        return e;
      };
    }
    function u(e) {
      return void 0 !== e && null !== e;
    }
    function l(e) {
      return void 0 === e || null === e;
    }
    function f(e) {
      return "string" == typeof e;
    }
    function h(e) {
      return "function" == typeof e;
    }
    function d(e) {
      return h(e);
    }
    function p(e) {
      return "object" == typeof e && null !== e;
    }
    function g(e) {
      return e instanceof I.Promise;
    }
    function m(e) {
      return Array.isArray(e);
    }
    function v(e) {
      return "number" == typeof e;
    }
    function _(e) {
      return e instanceof T && !isNaN(e.valueOf());
    }
    function y(e) {
      if ("string" == typeof e)
        return e;
      if (void 0 === e || null === e)
        return "" + e;
      if (e.name)
        return e.name;
      var t = e.toString(),
          n = t.indexOf("\n");
      return -1 === n ? t : t.substring(0, n);
    }
    function b(e) {
      return e;
    }
    function w(e, t) {
      return e;
    }
    function C(e, t) {
      return e === t || "number" == typeof e && "number" == typeof t && isNaN(e) && isNaN(t);
    }
    function R(e) {
      return e;
    }
    function E(e) {
      return l(e) ? null : e;
    }
    function x(e) {
      return l(e) ? !1 : e;
    }
    function S(e) {
      return null !== e && ("function" == typeof e || "object" == typeof e);
    }
    function D(e) {
      console.log(e instanceof A ? e.stack : e);
    }
    var I,
        P,
        A,
        O,
        T,
        j,
        N,
        V,
        k,
        M,
        B,
        L,
        F,
        $,
        H,
        W;
    return e("getTypeNameForDebugging", t), e("makeTypeError", n), e("assertionsEnabled", r), e("ENUM_INDEX", i), e("CONST_EXPR", o), e("CONST", s), e("ABSTRACT", a), e("IMPLEMENTS", c), e("isPresent", u), e("isBlank", l), e("isString", f), e("isFunction", h), e("isType", d), e("isStringMap", p), e("isPromise", g), e("isArray", m), e("isNumber", v), e("isDate", _), e("stringify", y), e("serializeEnum", b), e("deserializeEnum", w), e("looseIdentical", C), e("getMapKey", R), e("normalizeBlank", E), e("normalizeBool", x), e("isJsObject", S), e("print", D), {
      setters: [],
      execute: function() {
        I = "undefined" == typeof window ? global : window, e("global", I), P = Function, e("Type", P), A = function(e) {
          function t(e, n, r, i) {
            $traceurRuntime.superConstructor(t).call(this, e), this.message = e, this._originalException = n, this._originalStack = r, this._context = i, this.stack = new Error(e).stack;
          }
          return $traceurRuntime.createClass(t, {
            get originalException() {
              return this._originalException;
            },
            get originalStack() {
              return this._originalStack;
            },
            get context() {
              return this._context;
            },
            toString: function() {
              return this.message;
            }
          }, {}, e);
        }(Error), e("BaseException", A), O = I.Math, e("Math", O), T = I.Date, e("Date", T), j = "undefined" != typeof I.assert, I.assert = function(e) {
          j && I.assert.call(e);
        }, N = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {}, {
            fromCharCode: function(e) {
              return String.fromCharCode(e);
            },
            charCodeAt: function(e, t) {
              return e.charCodeAt(t);
            },
            split: function(e, t) {
              return e.split(t);
            },
            equals: function(e, t) {
              return e === t;
            },
            replace: function(e, t, n) {
              return e.replace(t, n);
            },
            replaceAll: function(e, t, n) {
              return e.replace(t, n);
            },
            toUpperCase: function(e) {
              return e.toUpperCase();
            },
            toLowerCase: function(e) {
              return e.toLowerCase();
            },
            startsWith: function(e, t) {
              return e.startsWith(t);
            },
            substring: function(e, t) {
              var n = void 0 !== arguments[2] ? arguments[2] : null;
              return e.substring(t, null === n ? void 0 : n);
            },
            replaceAllMapped: function(e, t, n) {
              return e.replace(t, function() {
                for (var e = [],
                    t = 0; t < arguments.length; t++)
                  e[t] = arguments[t];
                return e.splice(-2, 2), n(e);
              });
            },
            contains: function(e, t) {
              return -1 != e.indexOf(t);
            },
            compare: function(e, t) {
              return t > e ? -1 : e > t ? 1 : 0;
            }
          });
        }(), e("StringWrapper", N), V = function() {
          function e() {
            var e = void 0 !== arguments[0] ? arguments[0] : [];
            this.parts = e;
          }
          return $traceurRuntime.createClass(e, {
            add: function(e) {
              this.parts.push(e);
            },
            toString: function() {
              return this.parts.join("");
            }
          }, {});
        }(), e("StringJoiner", V), k = function(e) {
          function t(e) {
            $traceurRuntime.superConstructor(t).call(this), this.message = e;
          }
          return $traceurRuntime.createClass(t, {toString: function() {
              return this.message;
            }}, {}, e);
        }(A), e("NumberParseError", k), M = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {}, {
            toFixed: function(e, t) {
              return e.toFixed(t);
            },
            equal: function(e, t) {
              return e === t;
            },
            parseIntAutoRadix: function(e) {
              var t = parseInt(e);
              if (isNaN(t))
                throw new k("Invalid integer literal when parsing " + e);
              return t;
            },
            parseInt: function(e, t) {
              if (10 == t) {
                if (/^(\-|\+)?[0-9]+$/.test(e))
                  return parseInt(e, t);
              } else if (16 == t) {
                if (/^(\-|\+)?[0-9ABCDEFabcdef]+$/.test(e))
                  return parseInt(e, t);
              } else {
                var n = parseInt(e, t);
                if (!isNaN(n))
                  return n;
              }
              throw new k("Invalid integer literal when parsing " + e + " in base " + t);
            },
            parseFloat: function(e) {
              return parseFloat(e);
            },
            get NaN() {
              return 0 / 0;
            },
            isNaN: function(e) {
              return isNaN(e);
            },
            isInteger: function(e) {
              return Number.isInteger(e);
            }
          });
        }(), e("NumberWrapper", M), B = I.RegExp, e("RegExp", B), L = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {}, {
            create: function(e) {
              var t = void 0 !== arguments[1] ? arguments[1] : "";
              return t = t.replace(/g/g, ""), new I.RegExp(e, t + "g");
            },
            firstMatch: function(e, t) {
              return e.lastIndex = 0, e.exec(t);
            },
            test: function(e, t) {
              return e.lastIndex = 0, e.test(t);
            },
            matcher: function(e, t) {
              return e.lastIndex = 0, {
                re: e,
                input: t
              };
            }
          });
        }(), e("RegExpWrapper", L), F = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {}, {next: function(e) {
              return e.re.exec(e.input);
            }});
        }(), e("RegExpMatcherWrapper", F), $ = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {}, {apply: function(e, t) {
              return e.apply(null, t);
            }});
        }(), e("FunctionWrapper", $), H = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {}, {
            parse: function(e) {
              return I.JSON.parse(e);
            },
            stringify: function(e) {
              return I.JSON.stringify(e, null, 2);
            }
          });
        }(), e("Json", H), W = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {}, {
            create: function(e) {
              var t = void 0 !== arguments[1] ? arguments[1] : 1,
                  n = void 0 !== arguments[2] ? arguments[2] : 1,
                  r = void 0 !== arguments[3] ? arguments[3] : 0,
                  i = void 0 !== arguments[4] ? arguments[4] : 0,
                  o = void 0 !== arguments[5] ? arguments[5] : 0,
                  s = void 0 !== arguments[6] ? arguments[6] : 0;
              return new T(e, t - 1, n, r, i, o, s);
            },
            fromMillis: function(e) {
              return new T(e);
            },
            toMillis: function(e) {
              return e.getTime();
            },
            now: function() {
              return new T;
            },
            toJson: function(e) {
              return e.toJSON();
            }
          });
        }(), e("DateWrapper", W);
      }
    };
  }), System.register("angular2/src/di/metadata", ["angular2/src/facade/lang"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f;
    return {
      setters: [function(e) {
        r = e.CONST, i = e.stringify;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, o = $traceurRuntime.createClass(function(e) {
          this.token = e;
        }, {toString: function() {
            return "@Inject(" + i(this.token) + ")";
          }}, {}), e("InjectMetadata", o), e("InjectMetadata", o = t([r(), n("design:paramtypes", [Object])], o)), s = $traceurRuntime.createClass(function() {}, {toString: function() {
            return "@Optional()";
          }}, {}), e("OptionalMetadata", s), e("OptionalMetadata", s = t([r(), n("design:paramtypes", [])], s)), a = $traceurRuntime.createClass(function() {}, {get token() {
            return null;
          }}, {}), e("DependencyMetadata", a), e("DependencyMetadata", a = t([r(), n("design:paramtypes", [])], a)), c = $traceurRuntime.createClass(function() {}, {}, {}), e("InjectableMetadata", c), e("InjectableMetadata", c = t([r(), n("design:paramtypes", [])], c)), u = $traceurRuntime.createClass(function() {}, {toString: function() {
            return "@Self()";
          }}, {}), e("SelfMetadata", u), e("SelfMetadata", u = t([r(), n("design:paramtypes", [])], u)), l = $traceurRuntime.createClass(function() {}, {toString: function() {
            return "@SkipSelf()";
          }}, {}), e("SkipSelfMetadata", l), e("SkipSelfMetadata", l = t([r(), n("design:paramtypes", [])], l)), f = $traceurRuntime.createClass(function() {}, {toString: function() {
            return "@Host()";
          }}, {}), e("HostMetadata", f), e("HostMetadata", f = t([r(), n("design:paramtypes", [])], f));
      }
    };
  }), System.register("angular2/src/util/decorators", ["angular2/src/facade/lang"], function(e) {
    "use strict";
    function t(e) {
      return a(e) && e.hasOwnProperty("annotation") && (e = e.annotation), e;
    }
    function n(e, n) {
      if (e === Object || e === String || e === Function || e === Number || e === Array)
        throw new Error("Can not use native " + c(e) + " as constructor");
      if (a(e))
        return e;
      if (e instanceof Array) {
        var r = e,
            i = e[e.length - 1];
        if (!a(i))
          throw new Error("Last position of Class method array must be Function in key " + n + " was '" + c(i) + "'");
        var o = r.length - 1;
        if (o != i.length)
          throw new Error("Number of annotations (" + o + ") does not match number of arguments (" + i.length + ") in the function: " + c(i));
        for (var s = [],
            l = 0,
            f = r.length - 1; f > l; l++) {
          var h = [];
          s.push(h);
          var d = r[l];
          if (d instanceof Array)
            for (var p = 0; p < d.length; p++)
              h.push(t(d[p]));
          else
            h.push(a(d) ? t(d) : d);
        }
        return u.defineMetadata("parameters", s, i), i;
      }
      throw new Error("Only Function or Array is supported in Class definition for key '" + n + "' is '" + c(e) + "'");
    }
    function r(e) {
      var t = n(e.hasOwnProperty("constructor") ? e.constructor : void 0, "constructor"),
          r = t.prototype;
      if (e.hasOwnProperty("extends")) {
        if (!a(e["extends"]))
          throw new Error("Class definition 'extends' property must be a constructor function was: " + c(e["extends"]));
        t.prototype = r = Object.create(e["extends"].prototype);
      }
      for (var i in e)
        "extends" != i && "prototype" != i && e.hasOwnProperty(i) && (r[i] = n(e[i], i));
      return this && this.annotations instanceof Array && u.defineMetadata("annotations", this.annotations, t), t;
    }
    function i(e) {
      function t(t) {
        var i = new e(t);
        if (this instanceof e)
          return i;
        var o = a(this) && this.annotations instanceof Array ? this.annotations : [];
        o.push(i);
        var s = function(e) {
          var t = u.getOwnMetadata("annotations", e);
          return t = t || [], t.push(i), u.defineMetadata("annotations", t, e), e;
        };
        return s.annotations = o, s.Class = r, n && n(s), s;
      }
      var n = void 0 !== arguments[1] ? arguments[1] : null;
      return t.prototype = Object.create(e.prototype), t;
    }
    function o(e) {
      function t() {
        function t(e, t, n) {
          var r = u.getMetadata("parameters", e);
          for (r = r || []; r.length <= n; )
            r.push(null);
          r[n] = r[n] || [];
          var o = r[n];
          return o.push(i), u.defineMetadata("parameters", r, e), e;
        }
        for (var n = [],
            r = 0; r < arguments.length; r++)
          n[r] = arguments[r];
        var i = Object.create(e.prototype);
        return e.apply(i, n), this instanceof e ? i : (t.annotation = i, t);
      }
      return t.prototype = Object.create(e.prototype), t;
    }
    var s,
        a,
        c,
        u;
    return e("Class", r), e("makeDecorator", i), e("makeParamDecorator", o), {
      setters: [function(e) {
        s = e.global, a = e.isFunction, c = e.stringify;
      }],
      execute: function() {
        if (u = s.Reflect, !u || !u.getMetadata)
          throw "reflect-metadata shim is required when using class decorators";
      }
    };
  }), System.register("angular2/src/di/forward_ref", ["angular2/src/facade/lang"], function(e) {
    "use strict";
    function t(e) {
      return e.__forward_ref__ = t, e.toString = function() {
        return r(this());
      }, e;
    }
    function n(e) {
      return i(e) && e.hasOwnProperty("__forward_ref__") && e.__forward_ref__ === t ? e() : e;
    }
    var r,
        i;
    return e("forwardRef", t), e("resolveForwardRef", n), {
      setters: [function(e) {
        r = e.stringify, i = e.isFunction;
      }],
      execute: function() {}
    };
  }), System.register("angular2/src/facade/collection", ["angular2/src/facade/lang"], function(e) {
    "use strict";
    function t(e) {
      return r(e) ? s(e) || !(e instanceof c) && Symbol.iterator in e : !1;
    }
    function n(e, t) {
      if (s(e))
        for (var n = 0; n < e.length; n++)
          t(e[n]);
      else
        for (var r,
            i = e[Symbol.iterator](); !(r = i.next()).done; )
          t(r.value);
    }
    var r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y;
    return e("isListLikeIterable", t), e("iterateListLike", n), {
      setters: [function(e) {
        r = e.isJsObject, i = e.global, o = e.isPresent, s = e.isArray;
      }],
      execute: function() {
        a = i.Array, e("List", a), c = i.Map, e("Map", c), u = i.Set, e("Set", u), l = i.Object, e("StringMap", l), f = function() {
          try {
            if (1 === new c([[1, 2]]).size)
              return function(e) {
                return new c(e);
              };
          } catch (e) {}
          return function(e) {
            for (var t = new c,
                n = 0; n < e.length; n++) {
              var r = e[n];
              t.set(r[0], r[1]);
            }
            return t;
          };
        }(), h = function() {
          try {
            if (new c(new c))
              return function(e) {
                return new c(e);
              };
          } catch (e) {}
          return function(e) {
            var t = new c;
            return e.forEach(function(e, n) {
              t.set(n, e);
            }), t;
          };
        }(), d = function() {
          return (new c).keys().next ? function(e) {
            for (var t,
                n = e.keys(); !(t = n.next()).done; )
              e.set(t.value, null);
          } : function(e) {
            e.forEach(function(t, n) {
              e.set(n, null);
            });
          };
        }(), p = function() {
          try {
            if ((new c).values().next)
              return function(e, t) {
                return Array.from(t ? e.values() : e.keys());
              };
          } catch (e) {}
          return function(e, t) {
            var n = v.createFixedSize(e.size),
                r = 0;
            return e.forEach(function(e, i) {
              v.set(n, r, t ? e : i), r++;
            }), n;
          };
        }(), g = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {}, {
            clone: function(e) {
              return h(e);
            },
            createFromStringMap: function(e) {
              var t = new c;
              for (var n in e)
                t.set(n, e[n]);
              return t;
            },
            toStringMap: function(e) {
              var t = {};
              return e.forEach(function(e, n) {
                return t[n] = e;
              }), t;
            },
            createFromPairs: function(e) {
              return f(e);
            },
            forEach: function(e, t) {
              e.forEach(t);
            },
            get: function(e, t) {
              return e.get(t);
            },
            size: function(e) {
              return e.size;
            },
            "delete": function(e, t) {
              e["delete"](t);
            },
            clearValues: function(e) {
              d(e);
            },
            iterable: function(e) {
              return e;
            },
            keys: function(e) {
              return p(e, !1);
            },
            values: function(e) {
              return p(e, !0);
            }
          });
        }(), e("MapWrapper", g), m = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {}, {
            create: function() {
              return {};
            },
            contains: function(e, t) {
              return e.hasOwnProperty(t);
            },
            get: function(e, t) {
              return e.hasOwnProperty(t) ? e[t] : void 0;
            },
            set: function(e, t, n) {
              e[t] = n;
            },
            keys: function(e) {
              return Object.keys(e);
            },
            isEmpty: function(e) {
              for (var t in e)
                return !1;
              return !0;
            },
            "delete": function(e, t) {
              delete e[t];
            },
            forEach: function(e, t) {
              for (var n in e)
                e.hasOwnProperty(n) && t(e[n], n);
            },
            merge: function(e, t) {
              var n = {};
              for (var r in e)
                e.hasOwnProperty(r) && (n[r] = e[r]);
              for (var r in t)
                t.hasOwnProperty(r) && (n[r] = t[r]);
              return n;
            },
            equals: function(e, t) {
              var n = Object.keys(e),
                  r = Object.keys(t);
              if (n.length != r.length)
                return !1;
              for (var i,
                  o = 0; o < n.length; o++)
                if (i = n[o], e[i] !== t[i])
                  return !1;
              return !0;
            }
          });
        }(), e("StringMapWrapper", m), v = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {}, {
            createFixedSize: function(e) {
              return new a(e);
            },
            createGrowableSize: function(e) {
              return new a(e);
            },
            get: function(e, t) {
              return e[t];
            },
            set: function(e, t, n) {
              e[t] = n;
            },
            clone: function(e) {
              return e.slice(0);
            },
            map: function(e, t) {
              return e.map(t);
            },
            forEach: function(e, t) {
              for (var n = 0; n < e.length; n++)
                t(e[n]);
            },
            first: function(e) {
              return e ? e[0] : null;
            },
            last: function(e) {
              return e && 0 != e.length ? e[e.length - 1] : null;
            },
            find: function(e, t) {
              for (var n = 0; n < e.length; ++n)
                if (t(e[n]))
                  return e[n];
              return null;
            },
            indexOf: function(e, t) {
              var n = void 0 !== arguments[2] ? arguments[2] : 0;
              return e.indexOf(t, n);
            },
            reduce: function(e, t, n) {
              return e.reduce(t, n);
            },
            filter: function(e, t) {
              return e.filter(t);
            },
            any: function(e, t) {
              for (var n = 0; n < e.length; ++n)
                if (t(e[n]))
                  return !0;
              return !1;
            },
            contains: function(e, t) {
              return -1 !== e.indexOf(t);
            },
            reversed: function(t) {
              var n = e.clone(t);
              return n.reverse();
            },
            concat: function(e, t) {
              return e.concat(t);
            },
            insert: function(e, t, n) {
              e.splice(t, 0, n);
            },
            removeAt: function(e, t) {
              var n = e[t];
              return e.splice(t, 1), n;
            },
            removeAll: function(e, t) {
              for (var n = 0; n < t.length; ++n) {
                var r = e.indexOf(t[n]);
                e.splice(r, 1);
              }
            },
            removeLast: function(e) {
              return e.pop();
            },
            remove: function(e, t) {
              var n = e.indexOf(t);
              return n > -1 ? (e.splice(n, 1), !0) : !1;
            },
            clear: function(e) {
              e.splice(0, e.length);
            },
            join: function(e, t) {
              return e.join(t);
            },
            isEmpty: function(e) {
              return 0 == e.length;
            },
            fill: function(e, t) {
              var n = void 0 !== arguments[2] ? arguments[2] : 0,
                  r = void 0 !== arguments[3] ? arguments[3] : null;
              e.fill(t, n, null === r ? void 0 : r);
            },
            equals: function(e, t) {
              if (e.length != t.length)
                return !1;
              for (var n = 0; n < e.length; ++n)
                if (e[n] !== t[n])
                  return !1;
              return !0;
            },
            slice: function(e) {
              var t = void 0 !== arguments[1] ? arguments[1] : 0,
                  n = void 0 !== arguments[2] ? arguments[2] : null;
              return e.slice(t, null === n ? void 0 : n);
            },
            splice: function(e, t, n) {
              return e.splice(t, n);
            },
            sort: function(e, t) {
              o(t) ? e.sort(t) : e.sort();
            },
            toString: function(e) {
              return e.toString();
            },
            toJSON: function(e) {
              return JSON.stringify(e);
            }
          });
        }(), e("ListWrapper", v), _ = function() {
          var e = new u([1, 2, 3]);
          return 3 === e.size ? function(e) {
            return new u(e);
          } : function(e) {
            var t = new u(e);
            if (t.size !== e.length)
              for (var n = 0; n < e.length; n++)
                t.add(e[n]);
            return t;
          };
        }(), y = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {}, {
            createFromList: function(e) {
              return _(e);
            },
            has: function(e, t) {
              return e.has(t);
            },
            "delete": function(e, t) {
              e["delete"](t);
            }
          });
        }(), e("SetWrapper", y);
      }
    };
  }), System.register("angular2/src/reflection/reflector", ["angular2/src/facade/lang", "angular2/src/facade/collection"], function(e) {
    "use strict";
    function t(e, t) {
      i.forEach(t, function(t, n) {
        return e.set(n, t);
      });
    }
    var n,
        r,
        i,
        o,
        s;
    return {
      setters: [function(e) {
        n = e.isPresent;
      }, function(e) {
        r = e.Map, i = e.StringMapWrapper;
      }],
      execute: function() {
        o = function() {
          function e(e, t, n, r) {
            this._annotations = e, this._parameters = t, this._factory = n, this._interfaces = r;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("ReflectionInfo", o), s = function() {
          function e(e) {
            this._injectableInfo = new r, this._getters = new r, this._setters = new r, this._methods = new r, this.reflectionCapabilities = e;
          }
          return $traceurRuntime.createClass(e, {
            isReflectionEnabled: function() {
              return this.reflectionCapabilities.isReflectionEnabled();
            },
            registerFunction: function(e, t) {
              this._injectableInfo.set(e, t);
            },
            registerType: function(e, t) {
              this._injectableInfo.set(e, t);
            },
            registerGetters: function(e) {
              t(this._getters, e);
            },
            registerSetters: function(e) {
              t(this._setters, e);
            },
            registerMethods: function(e) {
              t(this._methods, e);
            },
            factory: function(e) {
              if (this._containsReflectionInfo(e)) {
                var t = this._injectableInfo.get(e)._factory;
                return n(t) ? t : null;
              }
              return this.reflectionCapabilities.factory(e);
            },
            parameters: function(e) {
              if (this._injectableInfo.has(e)) {
                var t = this._injectableInfo.get(e)._parameters;
                return n(t) ? t : [];
              }
              return this.reflectionCapabilities.parameters(e);
            },
            annotations: function(e) {
              if (this._injectableInfo.has(e)) {
                var t = this._injectableInfo.get(e)._annotations;
                return n(t) ? t : [];
              }
              return this.reflectionCapabilities.annotations(e);
            },
            interfaces: function(e) {
              if (this._injectableInfo.has(e)) {
                var t = this._injectableInfo.get(e)._interfaces;
                return n(t) ? t : [];
              }
              return this.reflectionCapabilities.interfaces(e);
            },
            getter: function(e) {
              return this._getters.has(e) ? this._getters.get(e) : this.reflectionCapabilities.getter(e);
            },
            setter: function(e) {
              return this._setters.has(e) ? this._setters.get(e) : this.reflectionCapabilities.setter(e);
            },
            method: function(e) {
              return this._methods.has(e) ? this._methods.get(e) : this.reflectionCapabilities.method(e);
            },
            _containsReflectionInfo: function(e) {
              return this._injectableInfo.has(e);
            }
          }, {});
        }(), e("Reflector", s);
      }
    };
  }), System.register("angular2/src/reflection/reflection_capabilities", ["angular2/src/facade/lang", "angular2/src/facade/collection"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a;
    return {
      setters: [function(e) {
        t = e.isPresent, n = e.isFunction, r = e.global, i = e.stringify, o = e.BaseException;
      }, function(e) {
        s = e.ListWrapper;
      }],
      execute: function() {
        a = function() {
          function e(e) {
            this._reflect = t(e) ? e : r.Reflect;
          }
          return $traceurRuntime.createClass(e, {
            isReflectionEnabled: function() {
              return !0;
            },
            factory: function(e) {
              switch (e.length) {
                case 0:
                  return function() {
                    return new e;
                  };
                case 1:
                  return function(t) {
                    return new e(t);
                  };
                case 2:
                  return function(t, n) {
                    return new e(t, n);
                  };
                case 3:
                  return function(t, n, r) {
                    return new e(t, n, r);
                  };
                case 4:
                  return function(t, n, r, i) {
                    return new e(t, n, r, i);
                  };
                case 5:
                  return function(t, n, r, i, o) {
                    return new e(t, n, r, i, o);
                  };
                case 6:
                  return function(t, n, r, i, o, s) {
                    return new e(t, n, r, i, o, s);
                  };
                case 7:
                  return function(t, n, r, i, o, s, a) {
                    return new e(t, n, r, i, o, s, a);
                  };
                case 8:
                  return function(t, n, r, i, o, s, a, c) {
                    return new e(t, n, r, i, o, s, a, c);
                  };
                case 9:
                  return function(t, n, r, i, o, s, a, c, u) {
                    return new e(t, n, r, i, o, s, a, c, u);
                  };
                case 10:
                  return function(t, n, r, i, o, s, a, c, u, l) {
                    return new e(t, n, r, i, o, s, a, c, u, l);
                  };
                case 11:
                  return function(t, n, r, i, o, s, a, c, u, l, f) {
                    return new e(t, n, r, i, o, s, a, c, u, l, f);
                  };
                case 12:
                  return function(t, n, r, i, o, s, a, c, u, l, f, h) {
                    return new e(t, n, r, i, o, s, a, c, u, l, f, h);
                  };
                case 13:
                  return function(t, n, r, i, o, s, a, c, u, l, f, h, d) {
                    return new e(t, n, r, i, o, s, a, c, u, l, f, h, d);
                  };
                case 14:
                  return function(t, n, r, i, o, s, a, c, u, l, f, h, d, p) {
                    return new e(t, n, r, i, o, s, a, c, u, l, f, h, d, p);
                  };
                case 15:
                  return function(t, n, r, i, o, s, a, c, u, l, f, h, d, p, g) {
                    return new e(t, n, r, i, o, s, a, c, u, l, f, h, d, p, g);
                  };
                case 16:
                  return function(t, n, r, i, o, s, a, c, u, l, f, h, d, p, g, m) {
                    return new e(t, n, r, i, o, s, a, c, u, l, f, h, d, p, g, m);
                  };
                case 17:
                  return function(t, n, r, i, o, s, a, c, u, l, f, h, d, p, g, m, v) {
                    return new e(t, n, r, i, o, s, a, c, u, l, f, h, d, p, g, m, v);
                  };
                case 18:
                  return function(t, n, r, i, o, s, a, c, u, l, f, h, d, p, g, m, v, _) {
                    return new e(t, n, r, i, o, s, a, c, u, l, f, h, d, p, g, m, v, _);
                  };
                case 19:
                  return function(t, n, r, i, o, s, a, c, u, l, f, h, d, p, g, m, v, _, y) {
                    return new e(t, n, r, i, o, s, a, c, u, l, f, h, d, p, g, m, v, _, y);
                  };
                case 20:
                  return function(t, n, r, i, o, s, a, c, u, l, f, h, d, p, g, m, v, _, y, b) {
                    return new e(t, n, r, i, o, s, a, c, u, l, f, h, d, p, g, m, v, _, y, b);
                  };
              }
              throw new Error("Cannot create a factory for '" + i(e) + "' because its constructor has more than 20 arguments");
            },
            _zipTypesAndAnnotaions: function(e, n) {
              var r;
              r = s.createFixedSize("undefined" == typeof e ? n.length : e.length);
              for (var i = 0; i < r.length; i++)
                r[i] = "undefined" == typeof e ? [] : e[i] != Object ? [e[i]] : [], t(n) && t(n[i]) && (r[i] = r[i].concat(n[i]));
              return r;
            },
            parameters: function(e) {
              if (t(e.parameters))
                return e.parameters;
              if (t(this._reflect) && t(this._reflect.getMetadata)) {
                var n = this._reflect.getMetadata("parameters", e),
                    r = this._reflect.getMetadata("design:paramtypes", e);
                if (t(r) || t(n))
                  return this._zipTypesAndAnnotaions(r, n);
              }
              return s.createFixedSize(e.length);
            },
            annotations: function(e) {
              if (t(e.annotations)) {
                var r = e.annotations;
                return n(r) && r.annotations && (r = r.annotations), r;
              }
              if (t(this._reflect) && t(this._reflect.getMetadata)) {
                var r = this._reflect.getMetadata("annotations", e);
                if (t(r))
                  return r;
              }
              return [];
            },
            interfaces: function(e) {
              throw new o("JavaScript does not support interfaces");
            },
            getter: function(e) {
              return new Function("o", "return o." + e + ";");
            },
            setter: function(e) {
              return new Function("o", "v", "return o." + e + " = v;");
            },
            method: function(e) {
              var t = "if (!o." + e + ") throw new Error('\"" + e + "\" is undefined');\n        return o." + e + ".apply(o, args);";
              return new Function("o", "args", t);
            }
          }, {});
        }(), e("ReflectionCapabilities", a);
      }
    };
  }), System.register("angular2/src/di/type_literal", [], function(e) {
    "use strict";
    var t;
    return {
      setters: [],
      execute: function() {
        t = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {get type() {
              throw new Error("Type literals are only supported in Dart");
            }}, {});
        }(), e("TypeLiteral", t);
      }
    };
  }), System.register("angular2/src/di/exceptions", ["angular2/src/facade/collection", "angular2/src/facade/lang"], function(e) {
    "use strict";
    function t(e) {
      for (var t = [],
          n = 0; n < e.length; ++n) {
        if (r.contains(t, e[n]))
          return t.push(e[n]), t;
        t.push(e[n]);
      }
      return t;
    }
    function n(e) {
      if (e.length > 1) {
        var n = t(r.reversed(e)),
            o = r.map(n, function(e) {
              return i(e.token);
            });
        return " (" + o.join(" -> ") + ")";
      }
      return "";
    }
    var r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d;
    return {
      setters: [function(e) {
        r = e.ListWrapper;
      }, function(e) {
        i = e.stringify, o = e.BaseException, s = e.isBlank;
      }],
      execute: function() {
        a = function(e) {
          function t(e, n, r, i, o) {
            $traceurRuntime.superConstructor(t).call(this, "DI Exception", i, o, null), this.keys = [n], this.injectors = [e], this.constructResolvingMessage = r, this.message = this.constructResolvingMessage(this.keys);
          }
          return $traceurRuntime.createClass(t, {
            addKey: function(e, t) {
              this.injectors.push(e), this.keys.push(t), this.message = this.constructResolvingMessage(this.keys);
            },
            get context() {
              return this.injectors[this.injectors.length - 1].debugContext();
            },
            toString: function() {
              return this.message;
            }
          }, {}, e);
        }(o), e("AbstractBindingError", a), c = function(e) {
          function t(e, o) {
            $traceurRuntime.superConstructor(t).call(this, e, o, function(e) {
              var t = i(r.first(e).token);
              return "No provider for " + t + "!" + n(e);
            });
          }
          return $traceurRuntime.createClass(t, {}, {}, e);
        }(a), e("NoBindingError", c), u = function(e) {
          function t(e, r) {
            $traceurRuntime.superConstructor(t).call(this, e, r, function(e) {
              return "Cannot instantiate cyclic dependency!" + n(e);
            });
          }
          return $traceurRuntime.createClass(t, {}, {}, e);
        }(a), e("CyclicDependencyError", u), l = function(e) {
          function t(e, o, s, a) {
            $traceurRuntime.superConstructor(t).call(this, e, a, function(e) {
              var t = i(r.first(e).token);
              return "Error during instantiation of " + t + "!" + n(e) + ".";
            }, o, s), this.causeKey = a;
          }
          return $traceurRuntime.createClass(t, {}, {}, e);
        }(a), e("InstantiationError", l), f = function(e) {
          function t(e) {
            $traceurRuntime.superConstructor(t).call(this), this.message = "Invalid binding - only instances of Binding and Type are allowed, got: " + e.toString();
          }
          return $traceurRuntime.createClass(t, {toString: function() {
              return this.message;
            }}, {}, e);
        }(o), e("InvalidBindingError", f), h = function(e) {
          function t(e, n) {
            $traceurRuntime.superConstructor(t).call(this);
            for (var o = [],
                a = 0,
                c = n.length; c > a; a++) {
              var u = n[a];
              o.push(s(u) || 0 == u.length ? "?" : r.map(u, i).join(" "));
            }
            this.message = "Cannot resolve all parameters for " + i(e) + "(" + o.join(", ") + "). Make sure they all have valid type or annotations.";
          }
          return $traceurRuntime.createClass(t, {toString: function() {
              return this.message;
            }}, {}, e);
        }(o), e("NoAnnotationError", h), d = function(e) {
          function t(e) {
            $traceurRuntime.superConstructor(t).call(this), this.message = "Index " + e + " is out-of-bounds.";
          }
          return $traceurRuntime.createClass(t, {toString: function() {
              return this.message;
            }}, {}, e);
        }(o), e("OutOfBoundsError", d);
      }
    };
  }), System.register("angular2/src/di/opaque_token", ["angular2/src/facade/lang"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i;
    return {
      setters: [function(e) {
        r = e.CONST;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, i = $traceurRuntime.createClass(function(e) {
          this._desc = "Token(" + e + ")";
        }, {toString: function() {
            return this._desc;
          }}, {}), e("OpaqueToken", i), e("OpaqueToken", i = t([r(), n("design:paramtypes", [String])], i));
      }
    };
  }), System.register("angular2/src/change_detection/constants", ["angular2/src/facade/lang"], function(e) {
    "use strict";
    function t(e) {
      return r(e) || n.equals(e, u);
    }
    var n,
        r,
        i,
        o,
        s,
        a,
        c,
        u;
    return e("isDefaultChangeDetectionStrategy", t), {
      setters: [function(e) {
        n = e.StringWrapper, r = e.isBlank;
      }],
      execute: function() {
        i = "CHECK_ONCE", e("CHECK_ONCE", i), o = "CHECKED", e("CHECKED", o), s = "ALWAYS_CHECK", e("CHECK_ALWAYS", s), a = "DETACHED", e("DETACHED", a), c = "ON_PUSH", e("ON_PUSH", c), u = "DEFAULT", e("DEFAULT", u);
      }
    };
  }), System.register("angular2/src/change_detection/pipe_lifecycle_reflector", [], function(e) {
    "use strict";
    function t(e) {
      return e.constructor.prototype.onDestroy;
    }
    return e("implementsOnDestroy", t), {
      setters: [],
      execute: function() {}
    };
  }), System.register("angular2/src/change_detection/change_detector_ref", ["angular2/src/change_detection/constants"], function(e) {
    "use strict";
    var t,
        n,
        r;
    return {
      setters: [function(e) {
        t = e.DETACHED, n = e.CHECK_ALWAYS;
      }],
      execute: function() {
        r = function() {
          function e(e) {
            this._cd = e;
          }
          return $traceurRuntime.createClass(e, {
            requestCheck: function() {
              this._cd.markPathToRootAsCheckOnce();
            },
            detach: function() {
              this._cd.mode = t;
            },
            reattach: function() {
              this._cd.mode = n, this.requestCheck();
            }
          }, {});
        }(), e("ChangeDetectorRef", r);
      }
    };
  }), System.register("angular2/src/change_detection/exceptions", ["angular2/src/facade/lang"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i;
    return {
      setters: [function(e) {
        t = e.BaseException;
      }],
      execute: function() {
        n = function(e) {
          function t(e, n, r) {
            $traceurRuntime.superConstructor(t).call(this, "Expression '" + e.expressionAsString + "' has changed after it was checked. " + ("Previous value: '" + n.previousValue + "'. Current value: '" + n.currentValue + "'"));
          }
          return $traceurRuntime.createClass(t, {}, {}, e);
        }(t), e("ExpressionChangedAfterItHasBeenCheckedException", n), r = function(e) {
          function t(e, n, r, i) {
            $traceurRuntime.superConstructor(t).call(this, n + " in [" + e.expressionAsString + "]", n, r, i), this.location = e.expressionAsString;
          }
          return $traceurRuntime.createClass(t, {}, {}, e);
        }(t), e("ChangeDetectionError", r), i = function(e) {
          function t() {
            $traceurRuntime.superConstructor(t).call(this, "Attempt to detect changes on a dehydrated detector.");
          }
          return $traceurRuntime.createClass(t, {}, {}, e);
        }(t), e("DehydratedException", i);
      }
    };
  }), System.register("angular2/src/profile/wtf_impl", ["angular2/src/facade/lang"], function(e) {
    "use strict";
    function t() {
      var e = s.wtf;
      return e && (a = e.trace) ? (c = a.events, !0) : !1;
    }
    function n(e) {
      var t = void 0 !== arguments[1] ? arguments[1] : null;
      return c.createScope(e, t);
    }
    function r(e, t) {
      return a.leaveScope(e, t), t;
    }
    function i(e, t) {
      return a.beginTimeRange(e, t);
    }
    function o(e) {
      a.endTimeRange(e);
    }
    var s,
        a,
        c;
    return e("detectWTF", t), e("createScope", n), e("leave", r), e("startTimeRange", i), e("endTimeRange", o), {
      setters: [function(e) {
        s = e.global;
      }],
      execute: function() {}
    };
  }), System.register("angular2/src/change_detection/observable_facade", [], function(e) {
    "use strict";
    function t(e) {
      return !1;
    }
    return e("isObservable", t), {
      setters: [],
      execute: function() {}
    };
  }), System.register("angular2/src/change_detection/codegen_name_util", ["angular2/src/facade/lang", "angular2/src/facade/collection"], function(e) {
    "use strict";
    function t(e) {
      return r.replaceAll(e, _, "");
    }
    var n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y;
    return e("sanitizeName", t), {
      setters: [function(e) {
        n = e.RegExpWrapper, r = e.StringWrapper;
      }, function(e) {
        i = e.ListWrapper, o = e.MapWrapper, s = e.Map;
      }],
      execute: function() {
        a = "alreadyChecked", c = "context", u = "firstProtoInCurrentBinding", l = "directiveRecords", f = "dispatcher", h = "locals", d = "mode", p = "pipes", g = "protos", m = 0, e("CONTEXT_INDEX", m), v = "this.", _ = n.create("\\W", "g"), y = function() {
          function e(e, n, r, o) {
            this.records = e, this.eventBindings = n, this.directiveRecords = r, this.utilName = o, this._sanitizedNames = i.createFixedSize(this.records.length + 1), this._sanitizedNames[m] = c;
            for (var a = 0,
                u = this.records.length; u > a; ++a)
              this._sanitizedNames[a + 1] = t("" + this.records[a].name + a);
            this._sanitizedEventNames = new s;
            for (var l = 0; l < n.length; ++l) {
              for (var f = n[l],
                  h = [c],
                  a = 0,
                  u = f.records.length; u > a; ++a)
                h.push(t("" + f.records[a].name + a + "_" + l));
              this._sanitizedEventNames.set(f, h);
            }
          }
          return $traceurRuntime.createClass(e, {
            _addFieldPrefix: function(e) {
              return "" + v + e;
            },
            getDispatcherName: function() {
              return this._addFieldPrefix(f);
            },
            getPipesAccessorName: function() {
              return this._addFieldPrefix(p);
            },
            getProtosName: function() {
              return this._addFieldPrefix(g);
            },
            getDirectivesAccessorName: function() {
              return this._addFieldPrefix(l);
            },
            getLocalsAccessorName: function() {
              return this._addFieldPrefix(h);
            },
            getAlreadyCheckedName: function() {
              return this._addFieldPrefix(a);
            },
            getModeName: function() {
              return this._addFieldPrefix(d);
            },
            getFirstProtoInCurrentBinding: function() {
              return this._addFieldPrefix(u);
            },
            getLocalName: function(e) {
              return "l_" + this._sanitizedNames[e];
            },
            getEventLocalName: function(e, t) {
              return "l_" + o.get(this._sanitizedEventNames, e)[t];
            },
            getChangeName: function(e) {
              return "c_" + this._sanitizedNames[e];
            },
            genInitLocals: function() {
              for (var e = [],
                  t = [],
                  n = 0,
                  r = this.getFieldCount(); r > n; ++n)
                if (n == m)
                  e.push(this.getLocalName(n) + " = " + this.getFieldName(n));
                else {
                  var o = this.records[n - 1];
                  if (o.argumentToPureFunction) {
                    var s = this.getChangeName(n);
                    e.push(this.getLocalName(n) + "," + s), t.push(s);
                  } else
                    e.push("" + this.getLocalName(n));
                }
              var a = i.isEmpty(t) ? "" : i.join(t, "=") + " = false;";
              return "var " + i.join(e, ",") + ";" + a;
            },
            genInitEventLocals: function() {
              var e = this,
                  t = [this.getLocalName(m) + " = " + this.getFieldName(m)];
              return o.forEach(this._sanitizedEventNames, function(n, r) {
                for (var i = 0; i < n.length; ++i)
                  i !== m && t.push("" + e.getEventLocalName(r, i));
              }), t.length > 1 ? "var " + t.join(",") + ";" : "";
            },
            getPreventDefaultAccesor: function() {
              return "preventDefault";
            },
            getFieldCount: function() {
              return this._sanitizedNames.length;
            },
            getFieldName: function(e) {
              return this._addFieldPrefix(this._sanitizedNames[e]);
            },
            getAllFieldNames: function() {
              for (var e = [],
                  t = 0,
                  n = this.getFieldCount(); n > t; ++t)
                (0 === t || this.records[t - 1].shouldBeChecked()) && e.push(this.getFieldName(t));
              for (var r = 0,
                  i = this.records.length; i > r; ++r) {
                var o = this.records[r];
                o.isPipeRecord() && e.push(this.getPipeName(o.selfIndex));
              }
              for (var s = 0,
                  a = this.directiveRecords.length; a > s; ++s) {
                var c = this.directiveRecords[s];
                e.push(this.getDirectiveName(c.directiveIndex)), c.isDefaultChangeDetection() || e.push(this.getDetectorName(c.directiveIndex));
              }
              return e;
            },
            genDehydrateFields: function() {
              var e = this.getAllFieldNames();
              return i.removeAt(e, m), i.isEmpty(e) ? "" : (e.push(this.utilName + ".uninitialized;"), i.join(e, " = "));
            },
            genPipeOnDestroy: function() {
              var e = this;
              return i.join(i.map(i.filter(this.records, function(e) {
                return e.isPipeRecord();
              }), function(t) {
                return e.utilName + ".callPipeOnDestroy(" + e.getPipeName(t.selfIndex) + ");";
              }), "\n");
            },
            getPipeName: function(e) {
              return this._addFieldPrefix(this._sanitizedNames[e] + "_pipe");
            },
            getAllDirectiveNames: function() {
              var e = this;
              return i.map(this.directiveRecords, function(t) {
                return e.getDirectiveName(t.directiveIndex);
              });
            },
            getDirectiveName: function(e) {
              return this._addFieldPrefix("directive_" + e.name);
            },
            getAllDetectorNames: function() {
              var e = this;
              return i.map(i.filter(this.directiveRecords, function(e) {
                return !e.isDefaultChangeDetection();
              }), function(t) {
                return e.getDetectorName(t.directiveIndex);
              });
            },
            getDetectorName: function(e) {
              return this._addFieldPrefix("detector_" + e.name);
            }
          }, {});
        }(), e("CodegenNameUtil", y);
      }
    };
  }), System.register("angular2/src/change_detection/codegen_facade", [], function(e) {
    "use strict";
    function t(e) {
      return JSON.stringify(e);
    }
    function n(e) {
      return "'" + e + "'";
    }
    function r(e) {
      return e.join(" + ");
    }
    return e("codify", t), e("rawString", n), e("combineGeneratedStrings", r), {
      setters: [],
      execute: function() {}
    };
  }), System.register("angular2/src/change_detection/proto_record", [], function(e) {
    "use strict";
    var t,
        n;
    return {
      setters: [],
      execute: function() {
        e("RecordType", t), function(e) {
          e[e.SELF = 0] = "SELF", e[e.CONST = 1] = "CONST", e[e.PRIMITIVE_OP = 2] = "PRIMITIVE_OP", e[e.PROPERTY_READ = 3] = "PROPERTY_READ", e[e.PROPERTY_WRITE = 4] = "PROPERTY_WRITE", e[e.LOCAL = 5] = "LOCAL", e[e.INVOKE_METHOD = 6] = "INVOKE_METHOD", e[e.INVOKE_CLOSURE = 7] = "INVOKE_CLOSURE", e[e.KEYED_READ = 8] = "KEYED_READ", e[e.KEYED_WRITE = 9] = "KEYED_WRITE", e[e.PIPE = 10] = "PIPE", e[e.INTERPOLATE = 11] = "INTERPOLATE", e[e.SAFE_PROPERTY = 12] = "SAFE_PROPERTY", e[e.COLLECTION_LITERAL = 13] = "COLLECTION_LITERAL", e[e.SAFE_INVOKE_METHOD = 14] = "SAFE_INVOKE_METHOD", e[e.DIRECTIVE_LIFECYCLE = 15] = "DIRECTIVE_LIFECYCLE", e[e.CHAIN = 16] = "CHAIN";
        }(t || e("RecordType", t = {})), n = function() {
          function e(e, t, n, r, i, o, s, a, c, u, l, f, h, d) {
            this.mode = e, this.name = t, this.funcOrValue = n, this.args = r, this.fixedArgs = i, this.contextIndex = o, this.directiveIndex = s, this.selfIndex = a, this.bindingRecord = c, this.expressionAsString = u, this.lastInBinding = l, this.lastInDirective = f, this.argumentToPureFunction = h, this.referencedBySelf = d;
          }
          return $traceurRuntime.createClass(e, {
            isPureFunction: function() {
              return this.mode === t.INTERPOLATE || this.mode === t.COLLECTION_LITERAL;
            },
            isUsedByOtherRecord: function() {
              return !this.lastInBinding || this.referencedBySelf;
            },
            shouldBeChecked: function() {
              return this.argumentToPureFunction || this.lastInBinding || this.isPureFunction();
            },
            isPipeRecord: function() {
              return this.mode === t.PIPE;
            },
            isLifeCycleRecord: function() {
              return this.mode === t.DIRECTIVE_LIFECYCLE;
            }
          }, {});
        }(), e("ProtoRecord", n);
      }
    };
  }), System.register("angular2/src/change_detection/parser/ast", ["angular2/src/facade/lang", "angular2/src/facade/collection"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y,
        b,
        w,
        C,
        R,
        E,
        x,
        S;
    return {
      setters: [function(e) {
        t = e.isPresent;
      }, function(e) {
        n = e.ListWrapper;
      }],
      execute: function() {
        r = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {
            visit: function(e) {
              return null;
            },
            toString: function() {
              return "AST";
            }
          }, {});
        }(), e("AST", r), i = function(e) {
          function t() {
            $traceurRuntime.superConstructor(t).apply(this, arguments);
          }
          return $traceurRuntime.createClass(t, {visit: function(e) {}}, {}, e);
        }(r), e("EmptyExpr", i), o = function(e) {
          function t() {
            $traceurRuntime.superConstructor(t).apply(this, arguments);
          }
          return $traceurRuntime.createClass(t, {visit: function(e) {
              return e.visitImplicitReceiver(this);
            }}, {}, e);
        }(r), e("ImplicitReceiver", o), s = function(e) {
          function t(e) {
            $traceurRuntime.superConstructor(t).call(this), this.expressions = e;
          }
          return $traceurRuntime.createClass(t, {visit: function(e) {
              return e.visitChain(this);
            }}, {}, e);
        }(r), e("Chain", s), a = function(e) {
          function t(e, n, r) {
            $traceurRuntime.superConstructor(t).call(this), this.condition = e, this.trueExp = n, this.falseExp = r;
          }
          return $traceurRuntime.createClass(t, {visit: function(e) {
              return e.visitConditional(this);
            }}, {}, e);
        }(r), e("Conditional", a), c = function(e) {
          function t(e, n, r) {
            $traceurRuntime.superConstructor(t).call(this), this.condition = e, this.trueExp = n, this.falseExp = r;
          }
          return $traceurRuntime.createClass(t, {visit: function(e) {
              return e.visitIf(this);
            }}, {}, e);
        }(r), e("If", c), u = function(e) {
          function t(e, n, r) {
            $traceurRuntime.superConstructor(t).call(this), this.receiver = e, this.name = n, this.getter = r;
          }
          return $traceurRuntime.createClass(t, {visit: function(e) {
              return e.visitPropertyRead(this);
            }}, {}, e);
        }(r), e("PropertyRead", u), l = function(e) {
          function t(e, n, r, i) {
            $traceurRuntime.superConstructor(t).call(this), this.receiver = e, this.name = n, this.setter = r, this.value = i;
          }
          return $traceurRuntime.createClass(t, {visit: function(e) {
              return e.visitPropertyWrite(this);
            }}, {}, e);
        }(r), e("PropertyWrite", l), f = function(e) {
          function t(e, n, r) {
            $traceurRuntime.superConstructor(t).call(this), this.receiver = e, this.name = n, this.getter = r;
          }
          return $traceurRuntime.createClass(t, {visit: function(e) {
              return e.visitSafePropertyRead(this);
            }}, {}, e);
        }(r), e("SafePropertyRead", f), h = function(e) {
          function t(e, n) {
            $traceurRuntime.superConstructor(t).call(this), this.obj = e, this.key = n;
          }
          return $traceurRuntime.createClass(t, {visit: function(e) {
              return e.visitKeyedRead(this);
            }}, {}, e);
        }(r), e("KeyedRead", h), d = function(e) {
          function t(e, n, r) {
            $traceurRuntime.superConstructor(t).call(this), this.obj = e, this.key = n, this.value = r;
          }
          return $traceurRuntime.createClass(t, {visit: function(e) {
              return e.visitKeyedWrite(this);
            }}, {}, e);
        }(r), e("KeyedWrite", d), p = function(e) {
          function t(e, n, r) {
            $traceurRuntime.superConstructor(t).call(this), this.exp = e, this.name = n, this.args = r;
          }
          return $traceurRuntime.createClass(t, {visit: function(e) {
              return e.visitPipe(this);
            }}, {}, e);
        }(r), e("BindingPipe", p), g = function(e) {
          function t(e) {
            $traceurRuntime.superConstructor(t).call(this), this.value = e;
          }
          return $traceurRuntime.createClass(t, {visit: function(e) {
              return e.visitLiteralPrimitive(this);
            }}, {}, e);
        }(r), e("LiteralPrimitive", g), m = function(e) {
          function t(e) {
            $traceurRuntime.superConstructor(t).call(this), this.expressions = e;
          }
          return $traceurRuntime.createClass(t, {visit: function(e) {
              return e.visitLiteralArray(this);
            }}, {}, e);
        }(r), e("LiteralArray", m), v = function(e) {
          function t(e, n) {
            $traceurRuntime.superConstructor(t).call(this), this.keys = e, this.values = n;
          }
          return $traceurRuntime.createClass(t, {visit: function(e) {
              return e.visitLiteralMap(this);
            }}, {}, e);
        }(r), e("LiteralMap", v), _ = function(e) {
          function t(e, n) {
            $traceurRuntime.superConstructor(t).call(this), this.strings = e, this.expressions = n;
          }
          return $traceurRuntime.createClass(t, {visit: function(e) {
              e.visitInterpolation(this);
            }}, {}, e);
        }(r), e("Interpolation", _), y = function(e) {
          function t(e, n, r) {
            $traceurRuntime.superConstructor(t).call(this), this.operation = e, this.left = n, this.right = r;
          }
          return $traceurRuntime.createClass(t, {visit: function(e) {
              return e.visitBinary(this);
            }}, {}, e);
        }(r), e("Binary", y), b = function(e) {
          function t(e) {
            $traceurRuntime.superConstructor(t).call(this), this.expression = e;
          }
          return $traceurRuntime.createClass(t, {visit: function(e) {
              return e.visitPrefixNot(this);
            }}, {}, e);
        }(r), e("PrefixNot", b), w = function(e) {
          function t(e, n, r, i) {
            $traceurRuntime.superConstructor(t).call(this), this.receiver = e, this.name = n, this.fn = r, this.args = i;
          }
          return $traceurRuntime.createClass(t, {visit: function(e) {
              return e.visitMethodCall(this);
            }}, {}, e);
        }(r), e("MethodCall", w), C = function(e) {
          function t(e, n, r, i) {
            $traceurRuntime.superConstructor(t).call(this), this.receiver = e, this.name = n, this.fn = r, this.args = i;
          }
          return $traceurRuntime.createClass(t, {visit: function(e) {
              return e.visitSafeMethodCall(this);
            }}, {}, e);
        }(r), e("SafeMethodCall", C), R = function(e) {
          function t(e, n) {
            $traceurRuntime.superConstructor(t).call(this), this.target = e, this.args = n;
          }
          return $traceurRuntime.createClass(t, {visit: function(e) {
              return e.visitFunctionCall(this);
            }}, {}, e);
        }(r), e("FunctionCall", R), E = function(e) {
          function t(e, n, r) {
            $traceurRuntime.superConstructor(t).call(this), this.ast = e, this.source = n, this.location = r;
          }
          return $traceurRuntime.createClass(t, {
            visit: function(e) {
              return this.ast.visit(e);
            },
            toString: function() {
              return this.source + " in " + this.location;
            }
          }, {}, e);
        }(r), e("ASTWithSource", E), x = function() {
          function e(e, t, n, r) {
            this.key = e, this.keyIsVar = t, this.name = n, this.expression = r;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("TemplateBinding", x), S = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {
            visitImplicitReceiver: function(e) {
              return e;
            },
            visitInterpolation: function(e) {
              return new _(e.strings, this.visitAll(e.expressions));
            },
            visitLiteralPrimitive: function(e) {
              return new g(e.value);
            },
            visitPropertyRead: function(e) {
              return new u(e.receiver.visit(this), e.name, e.getter);
            },
            visitPropertyWrite: function(e) {
              return new l(e.receiver.visit(this), e.name, e.setter, e.value);
            },
            visitSafePropertyRead: function(e) {
              return new f(e.receiver.visit(this), e.name, e.getter);
            },
            visitMethodCall: function(e) {
              return new w(e.receiver.visit(this), e.name, e.fn, this.visitAll(e.args));
            },
            visitSafeMethodCall: function(e) {
              return new C(e.receiver.visit(this), e.name, e.fn, this.visitAll(e.args));
            },
            visitFunctionCall: function(e) {
              return new R(e.target.visit(this), this.visitAll(e.args));
            },
            visitLiteralArray: function(e) {
              return new m(this.visitAll(e.expressions));
            },
            visitLiteralMap: function(e) {
              return new v(e.keys, this.visitAll(e.values));
            },
            visitBinary: function(e) {
              return new y(e.operation, e.left.visit(this), e.right.visit(this));
            },
            visitPrefixNot: function(e) {
              return new b(e.expression.visit(this));
            },
            visitConditional: function(e) {
              return new a(e.condition.visit(this), e.trueExp.visit(this), e.falseExp.visit(this));
            },
            visitPipe: function(e) {
              return new p(e.exp.visit(this), e.name, this.visitAll(e.args));
            },
            visitKeyedRead: function(e) {
              return new h(e.obj.visit(this), e.key.visit(this));
            },
            visitKeyedWrite: function(e) {
              return new d(e.obj.visit(this), e.key.visit(this), e.value.visit(this));
            },
            visitAll: function(e) {
              for (var t = n.createFixedSize(e.length),
                  r = 0; r < e.length; ++r)
                t[r] = e[r].visit(this);
              return t;
            },
            visitChain: function(e) {
              return new s(this.visitAll(e.expressions));
            },
            visitIf: function(e) {
              var n = t(e.falseExp) ? e.falseExp.visit(this) : null;
              return new c(e.condition.visit(this), e.trueExp.visit(this), n);
            }
          }, {});
        }(), e("AstTransformer", S);
      }
    };
  }), System.register("angular2/src/change_detection/dynamic_change_detector", ["angular2/src/facade/lang", "angular2/src/facade/collection", "angular2/src/change_detection/abstract_change_detector", "angular2/src/change_detection/change_detection_util", "angular2/src/change_detection/proto_record"], function(e) {
    "use strict";
    function t(e, t) {
      return e === t ? !0 : e instanceof String && t instanceof String && e == t ? !0 : e !== e && t !== t ? !0 : !1;
    }
    var n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l;
    return {
      setters: [function(e) {
        n = e.isPresent, r = e.isBlank, i = e.BaseException, o = e.FunctionWrapper;
      }, function(e) {
        s = e.ListWrapper;
      }, function(e) {
        a = e.AbstractChangeDetector;
      }, function(e) {
        c = e.ChangeDetectionUtil;
      }, function(e) {
        u = e.RecordType;
      }],
      execute: function() {
        l = function(e) {
          function a(e, t, n, r, i, o) {
            $traceurRuntime.superConstructor(a).call(this, e, n, r, o, c.changeDetectionMode(t)), this.eventBindings = i, this.directives = null;
            var u = r.length + 1;
            this.values = s.createFixedSize(u), this.localPipes = s.createFixedSize(u), this.prevContexts = s.createFixedSize(u), this.changes = s.createFixedSize(u), this.dehydrateDirectives(!1);
          }
          return $traceurRuntime.createClass(a, {
            handleEventInternal: function(e, t, n) {
              var r = this,
                  i = !1;
              return this._matchingEventBindings(e, t).forEach(function(e) {
                var t = r._processEventBinding(e, n);
                t === !1 && (i = !0);
              }), i;
            },
            _processEventBinding: function(e, t) {
              var n = s.createFixedSize(e.records.length);
              n[0] = this.values[0];
              for (var r = 0; r < e.records.length; ++r) {
                var o = e.records[r],
                    a = this._calculateCurrValue(o, n, t);
                if (o.lastInBinding)
                  return this._markPathAsCheckOnce(o), a;
                this._writeSelf(o, a, n);
              }
              throw new i("Cannot be reached");
            },
            _markPathAsCheckOnce: function(e) {
              if (!e.bindingRecord.isDefaultChangeDetection()) {
                var t = e.bindingRecord.directiveRecord;
                this._getDetectorFor(t.directiveIndex).markPathToRootAsCheckOnce();
              }
            },
            _matchingEventBindings: function(e, t) {
              return s.filter(this.eventBindings, function(n) {
                return n.eventName == e && n.elIndex === t;
              });
            },
            hydrateDirectives: function(e) {
              this.values[0] = this.context, this.directives = e;
            },
            dehydrateDirectives: function(e) {
              e && this._destroyPipes(), this.values[0] = null, this.directives = null, s.fill(this.values, c.uninitialized, 1), s.fill(this.changes, !1), s.fill(this.localPipes, null), s.fill(this.prevContexts, c.uninitialized);
            },
            _destroyPipes: function() {
              for (var e = 0; e < this.localPipes.length; ++e)
                n(this.localPipes[e]) && c.callPipeOnDestroy(this.localPipes[e]);
            },
            checkNoChanges: function() {
              this.runDetectChanges(!0);
            },
            detectChangesInRecordsInternal: function(e) {
              for (var t = this.protos,
                  r = null,
                  i = !1,
                  o = 0; o < t.length; ++o) {
                var s = t[o],
                    a = s.bindingRecord,
                    c = a.directiveRecord;
                if (this._firstInBinding(s) && (this.firstProtoInCurrentBinding = s.selfIndex), s.isLifeCycleRecord())
                  "onCheck" !== s.name || e ? "onInit" !== s.name || e || this.alreadyChecked ? "onChange" === s.name && n(r) && !e && this._getDirectiveFor(c.directiveIndex).onChange(r) : this._getDirectiveFor(c.directiveIndex).onInit() : this._getDirectiveFor(c.directiveIndex).onCheck();
                else {
                  var u = this._check(s, e, this.values, this.locals);
                  n(u) && (this._updateDirectiveOrElement(u, a), i = !0, r = this._addChange(a, u, r));
                }
                s.lastInDirective && (r = null, i && !a.isDefaultChangeDetection() && this._getDetectorFor(c.directiveIndex).markAsCheckOnce(), i = !1);
              }
              this.alreadyChecked = !0;
            },
            _firstInBinding: function(e) {
              var t = c.protoByIndex(this.protos, e.selfIndex - 1);
              return r(t) || t.bindingRecord !== e.bindingRecord;
            },
            callOnAllChangesDone: function() {
              $traceurRuntime.superGet(this, a.prototype, "callOnAllChangesDone").call(this);
              for (var e = this.directiveRecords,
                  t = e.length - 1; t >= 0; --t) {
                var n = e[t];
                n.callOnAllChangesDone && this._getDirectiveFor(n.directiveIndex).onAllChangesDone();
              }
            },
            _updateDirectiveOrElement: function(e, t) {
              if (r(t.directiveRecord))
                this.dispatcher.notifyOnBinding(t, e.currentValue);
              else {
                var n = t.directiveRecord.directiveIndex;
                t.setter(this._getDirectiveFor(n), e.currentValue);
              }
            },
            _addChange: function(e, t, n) {
              return e.callOnChange() ? $traceurRuntime.superGet(this, a.prototype, "addChange").call(this, n, t.previousValue, t.currentValue) : n;
            },
            _getDirectiveFor: function(e) {
              return this.directives.getDirectiveFor(e);
            },
            _getDetectorFor: function(e) {
              return this.directives.getDetectorFor(e);
            },
            _check: function(e, t, n, r) {
              return e.isPipeRecord() ? this._pipeCheck(e, t, n) : this._referenceCheck(e, t, n, r);
            },
            _referenceCheck: function(e, n, r, i) {
              if (this._pureFuncAndArgsDidNotChange(e))
                return this._setChanged(e, !1), null;
              var o = this.observe(this._calculateCurrValue(e, r, i), e.selfIndex);
              if (e.shouldBeChecked()) {
                var s = this._readSelf(e, r);
                if (t(s, o))
                  return this._setChanged(e, !1), null;
                if (e.lastInBinding) {
                  var a = c.simpleChange(s, o);
                  return n && this.throwOnChangeError(s, o), this._writeSelf(e, o, r), this._setChanged(e, !0), a;
                }
                return this._writeSelf(e, o, r), this._setChanged(e, !0), null;
              }
              return this._writeSelf(e, o, r), this._setChanged(e, !0), null;
            },
            _calculateCurrValue: function(e, t, n) {
              switch (e.mode) {
                case u.SELF:
                  return this._readContext(e, t);
                case u.CONST:
                  return e.funcOrValue;
                case u.PROPERTY_READ:
                  var s = this._readContext(e, t);
                  return e.funcOrValue(s);
                case u.SAFE_PROPERTY:
                  var s = this._readContext(e, t);
                  return r(s) ? null : e.funcOrValue(s);
                case u.PROPERTY_WRITE:
                  var s = this._readContext(e, t),
                      a = this._readArgs(e, t)[0];
                  return e.funcOrValue(s, a), a;
                case u.KEYED_WRITE:
                  var s = this._readContext(e, t),
                      c = this._readArgs(e, t)[0],
                      a = this._readArgs(e, t)[1];
                  return s[c] = a, a;
                case u.LOCAL:
                  return n.get(e.name);
                case u.INVOKE_METHOD:
                  var s = this._readContext(e, t),
                      l = this._readArgs(e, t);
                  return e.funcOrValue(s, l);
                case u.SAFE_INVOKE_METHOD:
                  var s = this._readContext(e, t);
                  if (r(s))
                    return null;
                  var l = this._readArgs(e, t);
                  return e.funcOrValue(s, l);
                case u.KEYED_READ:
                  var f = this._readArgs(e, t)[0];
                  return this._readContext(e, t)[f];
                case u.CHAIN:
                  var l = this._readArgs(e, t);
                  return l[l.length - 1];
                case u.INVOKE_CLOSURE:
                  return o.apply(this._readContext(e, t), this._readArgs(e, t));
                case u.INTERPOLATE:
                case u.PRIMITIVE_OP:
                case u.COLLECTION_LITERAL:
                  return o.apply(e.funcOrValue, this._readArgs(e, t));
                default:
                  throw new i("Unknown operation " + e.mode);
              }
            },
            _pipeCheck: function(e, n, r) {
              var i = this._readContext(e, r),
                  o = this._readArgs(e, r),
                  s = this._pipeFor(e, i),
                  a = s.transform(i, o);
              if (e.shouldBeChecked()) {
                var u = this._readSelf(e, r);
                if (t(u, a))
                  return this._setChanged(e, !1), null;
                if (a = c.unwrapValue(a), e.lastInBinding) {
                  var l = c.simpleChange(u, a);
                  return n && this.throwOnChangeError(u, a), this._writeSelf(e, a, r), this._setChanged(e, !0), l;
                }
                return this._writeSelf(e, a, r), this._setChanged(e, !0), null;
              }
              return this._writeSelf(e, a, r), this._setChanged(e, !0), null;
            },
            _pipeFor: function(e, t) {
              var r = this._readPipe(e);
              if (n(r))
                return r;
              var i = this.pipes.get(e.name);
              return this._writePipe(e, i), i;
            },
            _readContext: function(e, t) {
              return -1 == e.contextIndex ? this._getDirectiveFor(e.directiveIndex) : t[e.contextIndex];
            },
            _readSelf: function(e, t) {
              return t[e.selfIndex];
            },
            _writeSelf: function(e, t, n) {
              n[e.selfIndex] = t;
            },
            _readPipe: function(e) {
              return this.localPipes[e.selfIndex];
            },
            _writePipe: function(e, t) {
              this.localPipes[e.selfIndex] = t;
            },
            _setChanged: function(e, t) {
              e.argumentToPureFunction && (this.changes[e.selfIndex] = t);
            },
            _pureFuncAndArgsDidNotChange: function(e) {
              return e.isPureFunction() && !this._argsChanged(e);
            },
            _argsChanged: function(e) {
              for (var t = e.args,
                  n = 0; n < t.length; ++n)
                if (this.changes[t[n]])
                  return !0;
              return !1;
            },
            _readArgs: function(e, t) {
              for (var n = s.createFixedSize(e.args.length),
                  r = e.args,
                  i = 0; i < r.length; ++i)
                n[i] = t[r[i]];
              return n;
            }
          }, {}, e);
        }(a), e("DynamicChangeDetector", l);
      }
    };
  }), System.register("angular2/src/change_detection/directive_record", ["angular2/src/facade/lang", "angular2/src/change_detection/constants"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i;
    return {
      setters: [function(e) {
        t = e.normalizeBool;
      }, function(e) {
        n = e.isDefaultChangeDetectionStrategy;
      }],
      execute: function() {
        r = function() {
          function e(e, t) {
            this.elementIndex = e, this.directiveIndex = t;
          }
          return $traceurRuntime.createClass(e, {get name() {
              return this.elementIndex + "_" + this.directiveIndex;
            }}, {});
        }(), e("DirectiveIndex", r), i = function() {
          function e() {
            var e = void 0 !== arguments[0] ? arguments[0] : {},
                n = e.directiveIndex,
                r = e.callOnAllChangesDone,
                i = e.callOnChange,
                o = e.callOnCheck,
                s = e.callOnInit,
                a = e.changeDetection;
            this.directiveIndex = n, this.callOnAllChangesDone = t(r), this.callOnChange = t(i), this.callOnCheck = t(o), this.callOnInit = t(s), this.changeDetection = a;
          }
          return $traceurRuntime.createClass(e, {isDefaultChangeDetection: function() {
              return n(this.changeDetection);
            }}, {});
        }(), e("DirectiveRecord", i);
      }
    };
  }), System.register("angular2/src/change_detection/event_binding", [], function(e) {
    "use strict";
    var t;
    return {
      setters: [],
      execute: function() {
        t = function() {
          function e(e, t, n, r) {
            this.eventName = e, this.elIndex = t, this.dirIndex = n, this.records = r;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("EventBinding", t);
      }
    };
  }), System.register("angular2/src/change_detection/coalesce", ["angular2/src/facade/lang", "angular2/src/facade/collection", "angular2/src/change_detection/proto_record"], function(e) {
    "use strict";
    function t(e) {
      for (var t = [],
          i = new f,
          s = 0; s < e.length; ++s) {
        var c = e[s],
            u = o(c, t.length + 1, i),
            l = r(u, t);
        a(l) && u.lastInBinding ? (t.push(n(u, l.selfIndex, t.length + 1)), i.set(c.selfIndex, l.selfIndex), l.referencedBySelf = !0) : a(l) && !u.lastInBinding ? (u.argumentToPureFunction && (l.argumentToPureFunction = !0), i.set(c.selfIndex, l.selfIndex)) : (t.push(u), i.set(c.selfIndex, u.selfIndex));
      }
      return t;
    }
    function n(e, t, n) {
      return new d(h.SELF, "self", null, [], e.fixedArgs, t, e.directiveIndex, n, e.bindingRecord, e.expressionAsString, e.lastInBinding, e.lastInDirective, !1, !1);
    }
    function r(e, t) {
      return l.find(t, function(t) {
        return t.mode !== h.DIRECTIVE_LIFECYCLE && i(t, e) && t.mode === e.mode && u(t.funcOrValue, e.funcOrValue) && t.contextIndex === e.contextIndex && u(t.name, e.name) && l.equals(t.args, e.args);
      });
    }
    function i(e, t) {
      var n = c(e.directiveIndex) ? null : e.directiveIndex.directiveIndex,
          r = c(e.directiveIndex) ? null : e.directiveIndex.elementIndex,
          i = c(t.directiveIndex) ? null : t.directiveIndex.directiveIndex,
          o = c(t.directiveIndex) ? null : t.directiveIndex.elementIndex;
      return n === i && r === o;
    }
    function o(e, t, n) {
      var r = l.map(e.args, function(e) {
        return s(n, e);
      }),
          i = s(n, e.contextIndex);
      return new d(e.mode, e.name, e.funcOrValue, r, e.fixedArgs, i, e.directiveIndex, t, e.bindingRecord, e.expressionAsString, e.lastInBinding, e.lastInDirective, e.argumentToPureFunction, e.referencedBySelf);
    }
    function s(e, t) {
      var n = e.get(t);
      return a(n) ? n : t;
    }
    var a,
        c,
        u,
        l,
        f,
        h,
        d;
    return e("coalesce", t), {
      setters: [function(e) {
        a = e.isPresent, c = e.isBlank, u = e.looseIdentical;
      }, function(e) {
        l = e.ListWrapper, f = e.Map;
      }, function(e) {
        h = e.RecordType, d = e.ProtoRecord;
      }],
      execute: function() {}
    };
  }), System.register("angular2/src/change_detection/pregen_proto_change_detector", ["angular2/src/facade/lang"], function(e) {
    "use strict";
    var t,
        n;
    return {
      setters: [function(e) {
        t = e.BaseException;
      }],
      execute: function() {
        e("PregenProtoChangeDetectorFactory", Function), n = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {instantiate: function(e) {
              throw new t("Pregen change detection not supported in Js");
            }}, {isSupported: function() {
              return !1;
            }});
        }(), e("PregenProtoChangeDetector", n);
      }
    };
  }), System.register("angular2/src/change_detection/differs/iterable_differs", ["angular2/src/facade/lang", "angular2/src/facade/collection", "angular2/di"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h;
    return {
      setters: [function(e) {
        r = e.isBlank, i = e.isPresent, o = e.BaseException, s = e.CONST;
      }, function(e) {
        a = e.ListWrapper;
      }, function(e) {
        c = e.Binding, u = e.SkipSelfMetadata, l = e.OptionalMetadata, f = e.Injectable;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, h = $traceurRuntime.createClass(function(e) {
          this.factories = e;
        }, {find: function(e) {
            var t = a.find(this.factories, function(t) {
              return t.supports(e);
            });
            if (i(t))
              return t;
            throw new o("Cannot find a differ supporting object '" + e + "'");
          }}, {
          create: function(e, t) {
            if (i(t)) {
              var n = a.clone(t.factories);
              return e = e.concat(n), new h(e);
            }
            return new h(e);
          },
          extend: function(e) {
            return new c(h, {
              toFactory: function(t) {
                if (r(t))
                  throw new o("Cannot extend IterableDiffers without a parent injector");
                return h.create(e, t);
              },
              deps: [[h, new u, new l]]
            });
          }
        }), e("IterableDiffers", h), e("IterableDiffers", h = t([f(), s(), n("design:paramtypes", [Array])], h));
      }
    };
  }), System.register("angular2/src/change_detection/differs/default_iterable_differ", ["angular2/src/facade/lang", "angular2/src/facade/collection"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _;
    return {
      setters: [function(e) {
        r = e.CONST, i = e.BaseException, c = e.isBlank, u = e.isPresent, l = e.stringify, f = e.getMapKey, h = e.looseIdentical, d = e.isArray;
      }, function(e) {
        o = e.isListLikeIterable, s = e.iterateListLike, a = e.MapWrapper;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, p = $traceurRuntime.createClass(function() {}, {
          supports: function(e) {
            return o(e);
          },
          create: function(e) {
            return new g;
          }
        }, {}), e("DefaultIterableDifferFactory", p), e("DefaultIterableDifferFactory", p = t([r(), n("design:paramtypes", [])], p)), g = function() {
          function e() {
            this._collection = null, this._length = null, this._linkedRecords = null, this._unlinkedRecords = null, this._previousItHead = null, this._itHead = null, this._itTail = null, this._additionsHead = null, this._additionsTail = null, this._movesHead = null, this._movesTail = null, this._removalsHead = null, this._removalsTail = null;
          }
          return $traceurRuntime.createClass(e, {
            get collection() {
              return this._collection;
            },
            get length() {
              return this._length;
            },
            forEachItem: function(e) {
              var t;
              for (t = this._itHead; null !== t; t = t._next)
                e(t);
            },
            forEachPreviousItem: function(e) {
              var t;
              for (t = this._previousItHead; null !== t; t = t._nextPrevious)
                e(t);
            },
            forEachAddedItem: function(e) {
              var t;
              for (t = this._additionsHead; null !== t; t = t._nextAdded)
                e(t);
            },
            forEachMovedItem: function(e) {
              var t;
              for (t = this._movesHead; null !== t; t = t._nextMoved)
                e(t);
            },
            forEachRemovedItem: function(e) {
              var t;
              for (t = this._removalsHead; null !== t; t = t._nextRemoved)
                e(t);
            },
            diff: function(e) {
              if (c(e) && (e = []), !o(e))
                throw new i("Error trying to diff '" + e + "'");
              return this.check(e) ? this : null;
            },
            onDestroy: function() {},
            check: function(e) {
              var t = this;
              this._reset();
              var n,
                  r,
                  i = this._itHead,
                  o = !1;
              if (d(e)) {
                var a = e;
                for (this._length = e.length, n = 0; n < this._length; n++)
                  r = a[n], null !== i && h(i.item, r) ? o && (i = this._verifyReinsertion(i, r, n)) : (i = this._mismatch(i, r, n), o = !0), i = i._next;
              } else
                n = 0, s(e, function(e) {
                  null !== i && h(i.item, e) ? o && (i = t._verifyReinsertion(i, e, n)) : (i = t._mismatch(i, e, n), o = !0), i = i._next, n++;
                }), this._length = n;
              return this._truncate(i), this._collection = e, this.isDirty;
            },
            get isDirty() {
              return null !== this._additionsHead || null !== this._movesHead || null !== this._removalsHead;
            },
            _reset: function() {
              if (this.isDirty) {
                var e,
                    t;
                for (e = this._previousItHead = this._itHead; null !== e; e = e._next)
                  e._nextPrevious = e._next;
                for (e = this._additionsHead; null !== e; e = e._nextAdded)
                  e.previousIndex = e.currentIndex;
                for (this._additionsHead = this._additionsTail = null, e = this._movesHead; null !== e; e = t)
                  e.previousIndex = e.currentIndex, t = e._nextMoved;
                this._movesHead = this._movesTail = null, this._removalsHead = this._removalsTail = null;
              }
            },
            _mismatch: function(e, t, n) {
              var r;
              return null === e ? r = this._itTail : (r = e._prev, this._remove(e)), e = null === this._linkedRecords ? null : this._linkedRecords.get(t, n), null !== e ? this._moveAfter(e, r, n) : (e = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(t), null !== e ? this._reinsertAfter(e, r, n) : e = this._addAfter(new m(t), r, n)), e;
            },
            _verifyReinsertion: function(e, t, n) {
              var r = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(t);
              return null !== r ? e = this._reinsertAfter(r, e._prev, n) : e.currentIndex != n && (e.currentIndex = n, this._addToMoves(e, n)), e;
            },
            _truncate: function(e) {
              for (; null !== e; ) {
                var t = e._next;
                this._addToRemovals(this._unlink(e)), e = t;
              }
              null !== this._unlinkedRecords && this._unlinkedRecords.clear(), null !== this._additionsTail && (this._additionsTail._nextAdded = null), null !== this._movesTail && (this._movesTail._nextMoved = null), null !== this._itTail && (this._itTail._next = null), null !== this._removalsTail && (this._removalsTail._nextRemoved = null);
            },
            _reinsertAfter: function(e, t, n) {
              null !== this._unlinkedRecords && this._unlinkedRecords.remove(e);
              var r = e._prevRemoved,
                  i = e._nextRemoved;
              return null === r ? this._removalsHead = i : r._nextRemoved = i, null === i ? this._removalsTail = r : i._prevRemoved = r, this._insertAfter(e, t, n), this._addToMoves(e, n), e;
            },
            _moveAfter: function(e, t, n) {
              return this._unlink(e), this._insertAfter(e, t, n), this._addToMoves(e, n), e;
            },
            _addAfter: function(e, t, n) {
              return this._insertAfter(e, t, n), this._additionsTail = null === this._additionsTail ? this._additionsHead = e : this._additionsTail._nextAdded = e, e;
            },
            _insertAfter: function(e, t, n) {
              var r = null === t ? this._itHead : t._next;
              return e._next = r, e._prev = t, null === r ? this._itTail = e : r._prev = e, null === t ? this._itHead = e : t._next = e, null === this._linkedRecords && (this._linkedRecords = new _), this._linkedRecords.put(e), e.currentIndex = n, e;
            },
            _remove: function(e) {
              return this._addToRemovals(this._unlink(e));
            },
            _unlink: function(e) {
              null !== this._linkedRecords && this._linkedRecords.remove(e);
              var t = e._prev,
                  n = e._next;
              return null === t ? this._itHead = n : t._next = n, null === n ? this._itTail = t : n._prev = t, e;
            },
            _addToMoves: function(e, t) {
              return e.previousIndex === t ? e : (this._movesTail = null === this._movesTail ? this._movesHead = e : this._movesTail._nextMoved = e, e);
            },
            _addToRemovals: function(e) {
              return null === this._unlinkedRecords && (this._unlinkedRecords = new _), this._unlinkedRecords.put(e), e.currentIndex = null, e._nextRemoved = null, null === this._removalsTail ? (this._removalsTail = this._removalsHead = e, e._prevRemoved = null) : (e._prevRemoved = this._removalsTail, this._removalsTail = this._removalsTail._nextRemoved = e), e;
            },
            toString: function() {
              var e,
                  t = [];
              for (e = this._itHead; null !== e; e = e._next)
                t.push(e);
              var n = [];
              for (e = this._previousItHead; null !== e; e = e._nextPrevious)
                n.push(e);
              var r = [];
              for (e = this._additionsHead; null !== e; e = e._nextAdded)
                r.push(e);
              var i = [];
              for (e = this._movesHead; null !== e; e = e._nextMoved)
                i.push(e);
              var o = [];
              for (e = this._removalsHead; null !== e; e = e._nextRemoved)
                o.push(e);
              return "collection: " + t.join(", ") + "\nprevious: " + n.join(", ") + "\nadditions: " + r.join(", ") + "\nmoves: " + i.join(", ") + "\nremovals: " + o.join(", ") + "\n";
            }
          }, {});
        }(), e("DefaultIterableDiffer", g), m = function() {
          function e(e) {
            this.item = e, this.currentIndex = null, this.previousIndex = null, this._nextPrevious = null, this._prev = null, this._next = null, this._prevDup = null, this._nextDup = null, this._prevRemoved = null, this._nextRemoved = null, this._nextAdded = null, this._nextMoved = null;
          }
          return $traceurRuntime.createClass(e, {toString: function() {
              return this.previousIndex === this.currentIndex ? l(this.item) : l(this.item) + "[" + l(this.previousIndex) + "->" + l(this.currentIndex) + "]";
            }}, {});
        }(), e("CollectionChangeRecord", m), v = function() {
          function e() {
            this._head = null, this._tail = null;
          }
          return $traceurRuntime.createClass(e, {
            add: function(e) {
              null === this._head ? (this._head = this._tail = e, e._nextDup = null, e._prevDup = null) : (this._tail._nextDup = e, e._prevDup = this._tail, e._nextDup = null, this._tail = e);
            },
            get: function(e, t) {
              var n;
              for (n = this._head; null !== n; n = n._nextDup)
                if ((null === t || t < n.currentIndex) && h(n.item, e))
                  return n;
              return null;
            },
            remove: function(e) {
              var t = e._prevDup,
                  n = e._nextDup;
              return null === t ? this._head = n : t._nextDup = n, null === n ? this._tail = t : n._prevDup = t, null === this._head;
            }
          }, {});
        }(), _ = function() {
          function e() {
            this.map = new Map;
          }
          return $traceurRuntime.createClass(e, {
            put: function(e) {
              var t = f(e.item),
                  n = this.map.get(t);
              u(n) || (n = new v, this.map.set(t, n)), n.add(e);
            },
            get: function(e) {
              var t = void 0 !== arguments[1] ? arguments[1] : null,
                  n = f(e),
                  r = this.map.get(n);
              return c(r) ? null : r.get(e, t);
            },
            remove: function(e) {
              var t = f(e.item),
                  n = this.map.get(t);
              return n.remove(e) && a["delete"](this.map, t), e;
            },
            get isEmpty() {
              return 0 === a.size(this.map);
            },
            clear: function() {
              this.map.clear();
            },
            toString: function() {
              return "_DuplicateMap(" + l(this.map) + ")";
            }
          }, {});
        }();
      }
    };
  }), System.register("angular2/src/change_detection/differs/keyvalue_differs", ["angular2/src/facade/lang", "angular2/src/facade/collection", "angular2/di"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h;
    return {
      setters: [function(e) {
        r = e.isBlank, i = e.isPresent, o = e.BaseException, s = e.CONST;
      }, function(e) {
        a = e.ListWrapper;
      }, function(e) {
        c = e.Binding, u = e.SkipSelfMetadata, l = e.OptionalMetadata, f = e.Injectable;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, h = $traceurRuntime.createClass(function(e) {
          this.factories = e;
        }, {find: function(e) {
            var t = a.find(this.factories, function(t) {
              return t.supports(e);
            });
            if (i(t))
              return t;
            throw new o("Cannot find a differ supporting object '" + e + "'");
          }}, {
          create: function(e, t) {
            if (i(t)) {
              var n = a.clone(t.factories);
              return e = e.concat(n), new h(e);
            }
            return new h(e);
          },
          extend: function(e) {
            return new c(h, {
              toFactory: function(t) {
                if (r(t))
                  throw new o("Cannot extend KeyValueDiffers without a parent injector");
                return h.create(e, t);
              },
              deps: [[h, new u, new l]]
            });
          }
        }), e("KeyValueDiffers", h), e("KeyValueDiffers", h = t([f(), s(), n("design:paramtypes", [Array])], h));
      }
    };
  }), System.register("angular2/src/change_detection/differs/default_keyvalue_differ", ["angular2/src/facade/collection", "angular2/src/facade/lang"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d;
    return {
      setters: [function(e) {
        r = e.MapWrapper, i = e.StringMapWrapper;
      }, function(e) {
        o = e.stringify, s = e.looseIdentical, a = e.isJsObject, c = e.CONST, u = e.isBlank, l = e.BaseException;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, f = $traceurRuntime.createClass(function() {}, {
          supports: function(e) {
            return e instanceof Map || a(e);
          },
          create: function(e) {
            return new h;
          }
        }, {}), e("DefaultKeyValueDifferFactory", f), e("DefaultKeyValueDifferFactory", f = t([c(), n("design:paramtypes", [])], f)), h = function() {
          function e() {
            this._records = new Map, this._mapHead = null, this._previousMapHead = null, this._changesHead = null, this._changesTail = null, this._additionsHead = null, this._additionsTail = null, this._removalsHead = null, this._removalsTail = null;
          }
          return $traceurRuntime.createClass(e, {
            get isDirty() {
              return null !== this._additionsHead || null !== this._changesHead || null !== this._removalsHead;
            },
            forEachItem: function(e) {
              var t;
              for (t = this._mapHead; null !== t; t = t._next)
                e(t);
            },
            forEachPreviousItem: function(e) {
              var t;
              for (t = this._previousMapHead; null !== t; t = t._nextPrevious)
                e(t);
            },
            forEachChangedItem: function(e) {
              var t;
              for (t = this._changesHead; null !== t; t = t._nextChanged)
                e(t);
            },
            forEachAddedItem: function(e) {
              var t;
              for (t = this._additionsHead; null !== t; t = t._nextAdded)
                e(t);
            },
            forEachRemovedItem: function(e) {
              var t;
              for (t = this._removalsHead; null !== t; t = t._nextRemoved)
                e(t);
            },
            diff: function(e) {
              if (u(e) && (e = r.createFromPairs([])), !(e instanceof Map || a(e)))
                throw new l("Error trying to diff '" + e + "'");
              return this.check(e) ? this : null;
            },
            onDestroy: function() {},
            check: function(e) {
              var t = this;
              this._reset();
              var n = this._records,
                  r = this._mapHead,
                  i = null,
                  o = null,
                  a = !1;
              return this._forEach(e, function(e, c) {
                var u;
                null !== r && c === r.key ? (u = r, s(e, r.currentValue) || (r.previousValue = r.currentValue, r.currentValue = e, t._addToChanges(r))) : (a = !0, null !== r && (r._next = null, t._removeFromSeq(i, r), t._addToRemovals(r)), n.has(c) ? u = n.get(c) : (u = new d(c), n.set(c, u), u.currentValue = e, t._addToAdditions(u))), a && (t._isInRemovals(u) && t._removeFromRemovals(u), null == o ? t._mapHead = u : o._next = u), i = r, o = u, r = null === r ? null : r._next;
              }), this._truncate(i, r), this.isDirty;
            },
            _reset: function() {
              if (this.isDirty) {
                var e;
                for (e = this._previousMapHead = this._mapHead; null !== e; e = e._next)
                  e._nextPrevious = e._next;
                for (e = this._changesHead; null !== e; e = e._nextChanged)
                  e.previousValue = e.currentValue;
                for (e = this._additionsHead; null != e; e = e._nextAdded)
                  e.previousValue = e.currentValue;
                this._changesHead = this._changesTail = null, this._additionsHead = this._additionsTail = null, this._removalsHead = this._removalsTail = null;
              }
            },
            _truncate: function(e, t) {
              for (; null !== t; ) {
                null === e ? this._mapHead = null : e._next = null;
                var n = t._next;
                this._addToRemovals(t), e = t, t = n;
              }
              for (var i = this._removalsHead; null !== i; i = i._nextRemoved)
                i.previousValue = i.currentValue, i.currentValue = null, r["delete"](this._records, i.key);
            },
            _isInRemovals: function(e) {
              return e === this._removalsHead || null !== e._nextRemoved || null !== e._prevRemoved;
            },
            _addToRemovals: function(e) {
              null === this._removalsHead ? this._removalsHead = this._removalsTail = e : (this._removalsTail._nextRemoved = e, e._prevRemoved = this._removalsTail, this._removalsTail = e);
            },
            _removeFromSeq: function(e, t) {
              var n = t._next;
              null === e ? this._mapHead = n : e._next = n;
            },
            _removeFromRemovals: function(e) {
              var t = e._prevRemoved,
                  n = e._nextRemoved;
              null === t ? this._removalsHead = n : t._nextRemoved = n, null === n ? this._removalsTail = t : n._prevRemoved = t, e._prevRemoved = e._nextRemoved = null;
            },
            _addToAdditions: function(e) {
              null === this._additionsHead ? this._additionsHead = this._additionsTail = e : (this._additionsTail._nextAdded = e, this._additionsTail = e);
            },
            _addToChanges: function(e) {
              null === this._changesHead ? this._changesHead = this._changesTail = e : (this._changesTail._nextChanged = e, this._changesTail = e);
            },
            toString: function() {
              var e,
                  t = [],
                  n = [],
                  r = [],
                  i = [],
                  s = [];
              for (e = this._mapHead; null !== e; e = e._next)
                t.push(o(e));
              for (e = this._previousMapHead; null !== e; e = e._nextPrevious)
                n.push(o(e));
              for (e = this._changesHead; null !== e; e = e._nextChanged)
                r.push(o(e));
              for (e = this._additionsHead; null !== e; e = e._nextAdded)
                i.push(o(e));
              for (e = this._removalsHead; null !== e; e = e._nextRemoved)
                s.push(o(e));
              return "map: " + t.join(", ") + "\nprevious: " + n.join(", ") + "\nadditions: " + i.join(", ") + "\nchanges: " + r.join(", ") + "\nremovals: " + s.join(", ") + "\n";
            },
            _forEach: function(e, t) {
              e instanceof Map ? r.forEach(e, t) : i.forEach(e, t);
            }
          }, {});
        }(), e("DefaultKeyValueDiffer", h), d = function() {
          function e(e) {
            this.key = e, this.previousValue = null, this.currentValue = null, this._nextPrevious = null, this._next = null, this._nextAdded = null, this._nextRemoved = null, this._prevRemoved = null, this._nextChanged = null;
          }
          return $traceurRuntime.createClass(e, {toString: function() {
              return s(this.previousValue, this.currentValue) ? o(this.key) : o(this.key) + "[" + o(this.previousValue) + "->" + o(this.currentValue) + "]";
            }}, {});
        }(), e("KVChangeRecord", d);
      }
    };
  }), System.register("angular2/src/change_detection/interfaces", ["angular2/src/facade/lang"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s;
    return {
      setters: [function(e) {
        r = e.CONST;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, i = $traceurRuntime.createClass(function() {}, {createProtoChangeDetector: function(e) {
            return null;
          }}, {}), e("ChangeDetection", i), e("ChangeDetection", i = t([r(), n("design:paramtypes", [])], i)), o = function() {
          function e(e, t, n, r, i, o) {
            this.element = e, this.componentElement = t, this.directive = n, this.context = r, this.locals = i, this.injector = o;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("DebugContext", o), s = function() {
          function e(e, t, n, r, i, o, s) {
            this.id = e, this.strategy = t, this.variableNames = n, this.bindingRecords = r, this.eventRecords = i, this.directiveRecords = o, this.generateCheckNoChanges = s;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("ChangeDetectorDefinition", s);
      }
    };
  }), System.register("angular2/src/change_detection/parser/lexer", ["angular2/src/di/decorators", "angular2/src/facade/collection", "angular2/src/facade/lang"], function(e) {
    "use strict";
    function t(e, t) {
      return new x(e, R.CHARACTER, t, b.fromCharCode(t));
    }
    function n(e, t) {
      return new x(e, R.IDENTIFIER, 0, t);
    }
    function r(e, t) {
      return new x(e, R.KEYWORD, 0, t);
    }
    function i(e, t) {
      return new x(e, R.OPERATOR, 0, t);
    }
    function o(e, t) {
      return new x(e, R.STRING, 0, t);
    }
    function s(e, t) {
      return new x(e, R.NUMBER, t, "");
    }
    function a(e) {
      return e >= I && j >= e || e == Re;
    }
    function c(e) {
      return e >= fe && ye >= e || e >= re && oe >= e || e == le || e == M;
    }
    function u(e) {
      return e >= fe && ye >= e || e >= re && oe >= e || e >= te && ne >= e || e == le || e == M;
    }
    function l(e) {
      return e >= te && ne >= e;
    }
    function f(e) {
      return e == he || e == ie;
    }
    function h(e) {
      return e == K || e == U;
    }
    function d(e) {
      switch (e) {
        case pe:
          return P;
        case de:
          return O;
        case ge:
          return T;
        case me:
          return I;
        case _e:
          return A;
        default:
          return e;
      }
    }
    var p,
        g,
        m,
        v,
        _,
        y,
        b,
        w,
        C,
        R,
        E,
        x,
        S,
        D,
        I,
        P,
        A,
        O,
        T,
        j,
        N,
        V,
        k,
        M,
        B,
        L,
        F,
        $,
        H,
        W,
        U,
        q,
        K,
        z,
        Q,
        G,
        Y,
        X,
        Z,
        J,
        ee,
        te,
        ne,
        re,
        ie,
        oe,
        se,
        ae,
        ce,
        ue,
        le,
        fe,
        he,
        de,
        pe,
        ge,
        me,
        ve,
        _e,
        ye,
        be,
        we,
        Ce,
        Re,
        Ee,
        xe,
        Se,
        De;
    return {
      setters: [function(e) {
        m = e.Injectable;
      }, function(e) {
        v = e.SetWrapper;
      }, function(e) {
        _ = e.NumberWrapper, y = e.StringJoiner, b = e.StringWrapper, w = e.BaseException, C = e.isPresent;
      }],
      execute: function() {
        p = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, g = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, e("TokenType", R), function(e) {
          e[e.CHARACTER = 0] = "CHARACTER", e[e.IDENTIFIER = 1] = "IDENTIFIER", e[e.KEYWORD = 2] = "KEYWORD", e[e.STRING = 3] = "STRING", e[e.OPERATOR = 4] = "OPERATOR", e[e.NUMBER = 5] = "NUMBER";
        }(R || e("TokenType", R = {})), E = $traceurRuntime.createClass(function() {}, {tokenize: function(e) {
            for (var t = new xe(e),
                n = [],
                r = t.scanToken(); null != r; )
              n.push(r), r = t.scanToken();
            return n;
          }}, {}), e("Lexer", E), e("Lexer", E = p([m(), g("design:paramtypes", [])], E)), x = function() {
          function e(e, t, n, r) {
            this.index = e, this.type = t, this.numValue = n, this.strValue = r;
          }
          return $traceurRuntime.createClass(e, {
            isCharacter: function(e) {
              return this.type == R.CHARACTER && this.numValue == e;
            },
            isNumber: function() {
              return this.type == R.NUMBER;
            },
            isString: function() {
              return this.type == R.STRING;
            },
            isOperator: function(e) {
              return this.type == R.OPERATOR && this.strValue == e;
            },
            isIdentifier: function() {
              return this.type == R.IDENTIFIER;
            },
            isKeyword: function() {
              return this.type == R.KEYWORD;
            },
            isKeywordVar: function() {
              return this.type == R.KEYWORD && "var" == this.strValue;
            },
            isKeywordNull: function() {
              return this.type == R.KEYWORD && "null" == this.strValue;
            },
            isKeywordUndefined: function() {
              return this.type == R.KEYWORD && "undefined" == this.strValue;
            },
            isKeywordTrue: function() {
              return this.type == R.KEYWORD && "true" == this.strValue;
            },
            isKeywordIf: function() {
              return this.type == R.KEYWORD && "if" == this.strValue;
            },
            isKeywordElse: function() {
              return this.type == R.KEYWORD && "else" == this.strValue;
            },
            isKeywordFalse: function() {
              return this.type == R.KEYWORD && "false" == this.strValue;
            },
            toNumber: function() {
              return this.type == R.NUMBER ? this.numValue : -1;
            },
            toString: function() {
              switch (this.type) {
                case R.CHARACTER:
                case R.STRING:
                case R.IDENTIFIER:
                case R.KEYWORD:
                  return this.strValue;
                case R.NUMBER:
                  return this.numValue.toString();
                default:
                  return null;
              }
            }
          }, {});
        }(), e("Token", x), S = new x(-1, R.CHARACTER, 0, ""), e("EOF", S), D = 0, e("$EOF", D), I = 9, e("$TAB", I), P = 10, e("$LF", P), A = 11, e("$VTAB", A), O = 12, e("$FF", O), T = 13, e("$CR", T), j = 32, e("$SPACE", j), N = 33, e("$BANG", N), V = 34, e("$DQ", V), k = 35, e("$HASH", k), M = 36, e("$$", M), B = 37, e("$PERCENT", B), L = 38, e("$AMPERSAND", L), F = 39, e("$SQ", F), $ = 40, e("$LPAREN", $), H = 41, e("$RPAREN", H), W = 42, e("$STAR", W), U = 43, e("$PLUS", U), q = 44, e("$COMMA", q), K = 45, e("$MINUS", K), z = 46, e("$PERIOD", z), Q = 47, e("$SLASH", Q), G = 58, e("$COLON", G), Y = 59, e("$SEMICOLON", Y), X = 60, e("$LT", X), Z = 61, e("$EQ", Z), J = 62, e("$GT", J), ee = 63, e("$QUESTION", ee), te = 48, ne = 57, re = 65, ie = 69, oe = 90, se = 91, e("$LBRACKET", se), ae = 92, e("$BACKSLASH", ae), ce = 93, e("$RBRACKET", ce), ue = 94, le = 95, fe = 97, he = 101, de = 102, pe = 110, ge = 114, me = 116, ve = 117, _e = 118, ye = 122, be = 123, e("$LBRACE", be), we = 124, e("$BAR", we), Ce = 125, e("$RBRACE", Ce), Re = 160, Ee = function(e) {
          function t(e) {
            $traceurRuntime.superConstructor(t).call(this), this.message = e;
          }
          return $traceurRuntime.createClass(t, {toString: function() {
              return this.message;
            }}, {}, e);
        }(w), e("ScannerError", Ee), xe = function() {
          function e(e) {
            this.input = e, this.peek = 0, this.index = -1, this.length = e.length, this.advance();
          }
          return $traceurRuntime.createClass(e, {
            advance: function() {
              this.peek = ++this.index >= this.length ? D : b.charCodeAt(this.input, this.index);
            },
            scanToken: function() {
              for (var e = this.input,
                  n = this.length,
                  r = this.peek,
                  i = this.index; j >= r; ) {
                if (++i >= n) {
                  r = D;
                  break;
                }
                r = b.charCodeAt(e, i);
              }
              if (this.peek = r, this.index = i, i >= n)
                return null;
              if (c(r))
                return this.scanIdentifier();
              if (l(r))
                return this.scanNumber(i);
              var o = i;
              switch (r) {
                case z:
                  return this.advance(), l(this.peek) ? this.scanNumber(o) : t(o, z);
                case $:
                case H:
                case be:
                case Ce:
                case se:
                case ce:
                case q:
                case G:
                case Y:
                  return this.scanCharacter(o, r);
                case F:
                case V:
                  return this.scanString();
                case k:
                case U:
                case K:
                case W:
                case Q:
                case B:
                case ue:
                  return this.scanOperator(o, b.fromCharCode(r));
                case ee:
                  return this.scanComplexOperator(o, "?", z, ".");
                case X:
                case J:
                  return this.scanComplexOperator(o, b.fromCharCode(r), Z, "=");
                case N:
                case Z:
                  return this.scanComplexOperator(o, b.fromCharCode(r), Z, "=", Z, "=");
                case L:
                  return this.scanComplexOperator(o, "&", L, "&");
                case we:
                  return this.scanComplexOperator(o, "|", we, "|");
                case Re:
                  for (; a(this.peek); )
                    this.advance();
                  return this.scanToken();
              }
              return this.error("Unexpected character [" + b.fromCharCode(r) + "]", 0), null;
            },
            scanCharacter: function(e, n) {
              return assert(this.peek == n), this.advance(), t(e, n);
            },
            scanOperator: function(e, t) {
              return assert(this.peek == b.charCodeAt(t, 0)), assert(v.has(Se, t)), this.advance(), i(e, t);
            },
            scanComplexOperator: function(e, t, n, r, o, s) {
              assert(this.peek == b.charCodeAt(t, 0)), this.advance();
              var a = t;
              return this.peek == n && (this.advance(), a += r), C(o) && this.peek == o && (this.advance(), a += s), assert(v.has(Se, a)), i(e, a);
            },
            scanIdentifier: function() {
              assert(c(this.peek));
              var e = this.index;
              for (this.advance(); u(this.peek); )
                this.advance();
              var t = this.input.substring(e, this.index);
              return v.has(De, t) ? r(e, t) : n(e, t);
            },
            scanNumber: function(e) {
              assert(l(this.peek));
              var t = this.index === e;
              for (this.advance(); ; ) {
                if (l(this.peek))
                  ;
                else if (this.peek == z)
                  t = !1;
                else {
                  if (!f(this.peek))
                    break;
                  this.advance(), h(this.peek) && this.advance(), l(this.peek) || this.error("Invalid exponent", -1), t = !1;
                }
                this.advance();
              }
              var n = this.input.substring(e, this.index),
                  r = t ? _.parseIntAutoRadix(n) : _.parseFloat(n);
              return s(e, r);
            },
            scanString: function() {
              assert(this.peek == F || this.peek == V);
              var e = this.index,
                  t = this.peek;
              this.advance();
              for (var n,
                  r = this.index,
                  i = this.input; this.peek != t; )
                if (this.peek == ae) {
                  null == n && (n = new y), n.add(i.substring(r, this.index)), this.advance();
                  var s = void 0;
                  if (this.peek == ve) {
                    var a = i.substring(this.index + 1, this.index + 5);
                    try {
                      s = _.parseInt(a, 16);
                    } catch (c) {
                      this.error("Invalid unicode escape [\\u" + a + "]", 0);
                    }
                    for (var u = 0; 5 > u; u++)
                      this.advance();
                  } else
                    s = d(this.peek), this.advance();
                  n.add(b.fromCharCode(s)), r = this.index;
                } else
                  this.peek == D ? this.error("Unterminated quote", 0) : this.advance();
              var l = i.substring(r, this.index);
              this.advance();
              var f = l;
              return null != n && (n.add(l), f = n.toString()), o(e, f);
            },
            error: function(e, t) {
              var n = this.index + t;
              throw new Ee("Lexer Error: " + e + " at column " + n + " in expression [" + this.input + "]");
            }
          }, {});
        }(), Se = v.createFromList(["+", "-", "*", "/", "%", "^", "=", "==", "!=", "===", "!==", "<", ">", "<=", ">=", "&&", "||", "&", "|", "!", "?", "#", "?."]), De = v.createFromList(["var", "null", "undefined", "true", "false", "if", "else"]);
      }
    };
  }), System.register("angular2/src/change_detection/parser/parser", ["angular2/src/di/decorators", "angular2/src/facade/lang", "angular2/src/facade/collection", "angular2/src/change_detection/parser/lexer", "angular2/src/reflection/reflection", "angular2/src/change_detection/parser/ast"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y,
        b,
        w,
        C,
        R,
        E,
        x,
        S,
        D,
        I,
        P,
        A,
        O,
        T,
        j,
        N,
        V,
        k,
        M,
        B,
        L,
        F,
        $,
        H,
        W,
        U,
        q,
        K,
        z,
        Q,
        G,
        Y;
    return {
      setters: [function(e) {
        r = e.Injectable;
      }, function(e) {
        i = e.isBlank, o = e.isPresent, s = e.BaseException, a = e.StringWrapper;
      }, function(e) {
        c = e.ListWrapper;
      }, function(e) {
        u = e.Lexer, l = e.EOF, f = e.$PERIOD, h = e.$COLON, d = e.$SEMICOLON, p = e.$LBRACKET, g = e.$RBRACKET, m = e.$COMMA, v = e.$LBRACE, _ = e.$RBRACE, y = e.$LPAREN, b = e.$RPAREN;
      }, function(e) {
        w = e.reflector, C = e.Reflector;
      }, function(e) {
        R = e.EmptyExpr, E = e.ImplicitReceiver, x = e.PropertyRead, S = e.PropertyWrite, D = e.SafePropertyRead, I = e.LiteralPrimitive, P = e.Binary, A = e.PrefixNot, O = e.Conditional, T = e.If, j = e.BindingPipe, N = e.Chain, V = e.KeyedRead, k = e.KeyedWrite, M = e.LiteralArray, B = e.LiteralMap, L = e.Interpolation, F = e.MethodCall, $ = e.SafeMethodCall, H = e.FunctionCall, W = e.TemplateBinding, U = e.ASTWithSource;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, q = new E, K = /\{\{(.*?)\}\}/g, z = function(e) {
          function t(e, n, r, i) {
            $traceurRuntime.superConstructor(t).call(this, "Parser Error: " + e + " " + r + " [" + n + "] in " + i, null, null, i);
          }
          return $traceurRuntime.createClass(t, {}, {}, e);
        }(s), Q = $traceurRuntime.createClass(function(e) {
          var t = void 0 !== arguments[1] ? arguments[1] : null;
          this._lexer = e, this._reflector = o(t) ? t : w;
        }, {
          parseAction: function(e, t) {
            var n = this._lexer.tokenize(e),
                r = new G(e, t, n, this._reflector, !0).parseChain();
            return new U(r, e, t);
          },
          parseBinding: function(e, t) {
            var n = this._lexer.tokenize(e),
                r = new G(e, t, n, this._reflector, !1).parseChain();
            return new U(r, e, t);
          },
          parseSimpleBinding: function(e, t) {
            var n = this._lexer.tokenize(e),
                r = new G(e, t, n, this._reflector, !1).parseSimpleBinding();
            return new U(r, e, t);
          },
          parseTemplateBindings: function(e, t) {
            var n = this._lexer.tokenize(e);
            return new G(e, t, n, this._reflector, !1).parseTemplateBindings();
          },
          parseInterpolation: function(e, t) {
            var n = a.split(e, K);
            if (n.length <= 1)
              return null;
            for (var r = [],
                i = [],
                o = 0; o < n.length; o++) {
              var s = n[o];
              if (o % 2 === 0)
                r.push(s);
              else {
                if (!(s.trim().length > 0)) {
                  for (var c = "",
                      u = 0; o > u; u++)
                    c += u % 2 === 0 ? n[u] : "{{" + n[u] + "}}";
                  throw new z("Blank expressions are not allowed in interpolated strings", e, "at column " + c.length + " in", t);
                }
                var l = this._lexer.tokenize(s),
                    f = new G(e, t, l, this._reflector, !1).parseChain();
                i.push(f);
              }
            }
            return new U(new L(r, i), e, t);
          },
          wrapLiteralPrimitive: function(e, t) {
            return new U(new I(e), e, t);
          }
        }, {}), e("Parser", Q), e("Parser", Q = t([r(), n("design:paramtypes", [u, C])], Q)), G = function() {
          function e(e, t, n, r, i) {
            this.input = e, this.location = t, this.tokens = n, this.reflector = r, this.parseAction = i, this.index = 0;
          }
          return $traceurRuntime.createClass(e, {
            peek: function(e) {
              var t = this.index + e;
              return t < this.tokens.length ? this.tokens[t] : l;
            },
            get next() {
              return this.peek(0);
            },
            get inputIndex() {
              return this.index < this.tokens.length ? this.next.index : this.input.length;
            },
            advance: function() {
              this.index++;
            },
            optionalCharacter: function(e) {
              return this.next.isCharacter(e) ? (this.advance(), !0) : !1;
            },
            optionalKeywordVar: function() {
              return this.peekKeywordVar() ? (this.advance(), !0) : !1;
            },
            peekKeywordVar: function() {
              return this.next.isKeywordVar() || this.next.isOperator("#");
            },
            expectCharacter: function(e) {
              this.optionalCharacter(e) || this.error("Missing expected " + a.fromCharCode(e));
            },
            optionalOperator: function(e) {
              return this.next.isOperator(e) ? (this.advance(), !0) : !1;
            },
            expectOperator: function(e) {
              this.optionalOperator(e) || this.error("Missing expected operator " + e);
            },
            expectIdentifierOrKeyword: function() {
              var e = this.next;
              return e.isIdentifier() || e.isKeyword() || this.error("Unexpected token " + e + ", expected identifier or keyword"), this.advance(), e.toString();
            },
            expectIdentifierOrKeywordOrString: function() {
              var e = this.next;
              return e.isIdentifier() || e.isKeyword() || e.isString() || this.error("Unexpected token " + e + ", expected identifier, keyword, or string"), this.advance(), e.toString();
            },
            parseChain: function() {
              for (var e = []; this.index < this.tokens.length; ) {
                var t = this.parsePipe();
                if (e.push(t), this.optionalCharacter(d))
                  for (this.parseAction || this.error("Binding expression cannot contain chained expression"); this.optionalCharacter(d); )
                    ;
                else
                  this.index < this.tokens.length && this.error("Unexpected token '" + this.next + "'");
              }
              return 0 == e.length ? new R : 1 == e.length ? e[0] : new N(e);
            },
            parseSimpleBinding: function() {
              var e = this.parseChain();
              return Y.check(e) || this.error("Simple binding expression can only contain field access and constants'"), e;
            },
            parsePipe: function() {
              var e = this.parseExpression();
              if (this.optionalOperator("|")) {
                this.parseAction && this.error("Cannot have a pipe in an action expression");
                do {
                  for (var t = this.expectIdentifierOrKeyword(),
                      n = []; this.optionalCharacter(h); )
                    n.push(this.parsePipe());
                  e = new j(e, t, n);
                } while (this.optionalOperator("|"));
              }
              return e;
            },
            parseExpression: function() {
              return this.parseConditional();
            },
            parseConditional: function() {
              var e = this.inputIndex,
                  t = this.parseLogicalOr();
              if (this.optionalOperator("?")) {
                var n = this.parsePipe();
                if (!this.optionalCharacter(h)) {
                  var r = this.inputIndex,
                      i = this.input.substring(e, r);
                  this.error("Conditional expression " + i + " requires all 3 expressions");
                }
                var o = this.parsePipe();
                return new O(t, n, o);
              }
              return t;
            },
            parseLogicalOr: function() {
              for (var e = this.parseLogicalAnd(); this.optionalOperator("||"); )
                e = new P("||", e, this.parseLogicalAnd());
              return e;
            },
            parseLogicalAnd: function() {
              for (var e = this.parseEquality(); this.optionalOperator("&&"); )
                e = new P("&&", e, this.parseEquality());
              return e;
            },
            parseEquality: function() {
              for (var e = this.parseRelational(); ; )
                if (this.optionalOperator("=="))
                  e = new P("==", e, this.parseRelational());
                else if (this.optionalOperator("==="))
                  e = new P("===", e, this.parseRelational());
                else if (this.optionalOperator("!="))
                  e = new P("!=", e, this.parseRelational());
                else {
                  if (!this.optionalOperator("!=="))
                    return e;
                  e = new P("!==", e, this.parseRelational());
                }
            },
            parseRelational: function() {
              for (var e = this.parseAdditive(); ; )
                if (this.optionalOperator("<"))
                  e = new P("<", e, this.parseAdditive());
                else if (this.optionalOperator(">"))
                  e = new P(">", e, this.parseAdditive());
                else if (this.optionalOperator("<="))
                  e = new P("<=", e, this.parseAdditive());
                else {
                  if (!this.optionalOperator(">="))
                    return e;
                  e = new P(">=", e, this.parseAdditive());
                }
            },
            parseAdditive: function() {
              for (var e = this.parseMultiplicative(); ; )
                if (this.optionalOperator("+"))
                  e = new P("+", e, this.parseMultiplicative());
                else {
                  if (!this.optionalOperator("-"))
                    return e;
                  e = new P("-", e, this.parseMultiplicative());
                }
            },
            parseMultiplicative: function() {
              for (var e = this.parsePrefix(); ; )
                if (this.optionalOperator("*"))
                  e = new P("*", e, this.parsePrefix());
                else if (this.optionalOperator("%"))
                  e = new P("%", e, this.parsePrefix());
                else {
                  if (!this.optionalOperator("/"))
                    return e;
                  e = new P("/", e, this.parsePrefix());
                }
            },
            parsePrefix: function() {
              return this.optionalOperator("+") ? this.parsePrefix() : this.optionalOperator("-") ? new P("-", new I(0), this.parsePrefix()) : this.optionalOperator("!") ? new A(this.parsePrefix()) : this.parseCallChain();
            },
            parseCallChain: function() {
              for (var e = this.parsePrimary(); ; )
                if (this.optionalCharacter(f))
                  e = this.parseAccessMemberOrMethodCall(e, !1);
                else if (this.optionalOperator("?."))
                  e = this.parseAccessMemberOrMethodCall(e, !0);
                else if (this.optionalCharacter(p)) {
                  var t = this.parsePipe();
                  if (this.expectCharacter(g), this.optionalOperator("=")) {
                    var n = this.parseConditional();
                    e = new k(e, t, n);
                  } else
                    e = new V(e, t);
                } else {
                  if (!this.optionalCharacter(y))
                    return e;
                  var r = this.parseCallArguments();
                  this.expectCharacter(b), e = new H(e, r);
                }
            },
            parsePrimary: function() {
              if (this.optionalCharacter(y)) {
                var e = this.parsePipe();
                return this.expectCharacter(b), e;
              }
              if (this.next.isKeywordNull() || this.next.isKeywordUndefined())
                return this.advance(), new I(null);
              if (this.next.isKeywordTrue())
                return this.advance(), new I(!0);
              if (this.next.isKeywordFalse())
                return this.advance(), new I(!1);
              if (this.parseAction && this.next.isKeywordIf()) {
                this.advance(), this.expectCharacter(y);
                var t = this.parseExpression();
                this.expectCharacter(b);
                var n,
                    r = this.parseExpressionOrBlock();
                return this.next.isKeywordElse() && (this.advance(), n = this.parseExpressionOrBlock()), new T(t, r, n);
              }
              if (this.optionalCharacter(p)) {
                var i = this.parseExpressionList(g);
                return this.expectCharacter(g), new M(i);
              }
              if (this.next.isCharacter(v))
                return this.parseLiteralMap();
              if (this.next.isIdentifier())
                return this.parseAccessMemberOrMethodCall(q, !1);
              if (this.next.isNumber()) {
                var o = this.next.toNumber();
                return this.advance(), new I(o);
              }
              if (this.next.isString()) {
                var a = this.next.toString();
                return this.advance(), new I(a);
              }
              throw this.error(this.index >= this.tokens.length ? "Unexpected end of expression: " + this.input : "Unexpected token " + this.next), new s("Fell through all cases in parsePrimary");
            },
            parseExpressionList: function(e) {
              var t = [];
              if (!this.next.isCharacter(e))
                do
                  t.push(this.parsePipe());
 while (this.optionalCharacter(m));
              return t;
            },
            parseLiteralMap: function() {
              var e = [],
                  t = [];
              if (this.expectCharacter(v), !this.optionalCharacter(_)) {
                do {
                  var n = this.expectIdentifierOrKeywordOrString();
                  e.push(n), this.expectCharacter(h), t.push(this.parsePipe());
                } while (this.optionalCharacter(m));
                this.expectCharacter(_);
              }
              return new B(e, t);
            },
            parseAccessMemberOrMethodCall: function(e) {
              var t = void 0 !== arguments[1] ? arguments[1] : !1,
                  n = this.expectIdentifierOrKeyword();
              if (this.optionalCharacter(y)) {
                var r = this.parseCallArguments();
                this.expectCharacter(b);
                var i = this.reflector.method(n);
                return t ? new $(e, n, i, r) : new F(e, n, i, r);
              }
              var o = this.reflector.getter(n),
                  s = this.reflector.setter(n);
              if (!t) {
                if (this.optionalOperator("=")) {
                  this.parseAction || this.error("Bindings cannot contain assignments");
                  var a = this.parseConditional();
                  return new S(e, n, s, a);
                }
                return new x(e, n, o);
              }
              return this.optionalOperator("=") ? (this.error("The '?.' operator cannot be used in the assignment"), null) : new D(e, n, o);
            },
            parseCallArguments: function() {
              if (this.next.isCharacter(b))
                return [];
              var e = [];
              do
                e.push(this.parsePipe());
 while (this.optionalCharacter(m));
              return e;
            },
            parseExpressionOrBlock: function() {
              if (this.optionalCharacter(v)) {
                var e = this.parseBlockContent();
                return this.expectCharacter(_), e;
              }
              return this.parseExpression();
            },
            parseBlockContent: function() {
              this.parseAction || this.error("Binding expression cannot contain chained expression");
              for (var e = []; this.index < this.tokens.length && !this.next.isCharacter(_); ) {
                var t = this.parseExpression();
                if (e.push(t), this.optionalCharacter(d))
                  for (; this.optionalCharacter(d); )
                    ;
              }
              return 0 == e.length ? new R : 1 == e.length ? e[0] : new N(e);
            },
            expectTemplateBindingKey: function() {
              var e = "",
                  t = !1;
              do
                e += this.expectIdentifierOrKeywordOrString(), t = this.optionalOperator("-"), t && (e += "-");
 while (t);
              return e.toString();
            },
            parseTemplateBindings: function() {
              for (var e = [],
                  t = null; this.index < this.tokens.length; ) {
                var n = this.optionalKeywordVar(),
                    r = this.expectTemplateBindingKey();
                n || (null == t ? t = r : r = t + "-" + r), this.optionalCharacter(h);
                var i = null,
                    o = null;
                if (n)
                  i = this.optionalOperator("=") ? this.expectTemplateBindingKey() : "$implicit";
                else if (this.next !== l && !this.peekKeywordVar()) {
                  var s = this.inputIndex,
                      a = this.parsePipe(),
                      c = this.input.substring(s, this.inputIndex);
                  o = new U(a, c, this.location);
                }
                e.push(new W(r, n, i, o)), this.optionalCharacter(d) || this.optionalCharacter(m);
              }
              return e;
            },
            error: function(e) {
              var t = void 0 !== arguments[1] ? arguments[1] : null;
              i(t) && (t = this.index);
              var n = t < this.tokens.length ? "at column " + (this.tokens[t].index + 1) + " in" : "at the end of the expression";
              throw new z(e, this.input, n, this.location);
            }
          }, {});
        }(), e("_ParseAST", G), Y = function() {
          function e() {
            this.simple = !0;
          }
          return $traceurRuntime.createClass(e, {
            visitImplicitReceiver: function(e) {},
            visitInterpolation: function(e) {
              this.simple = !1;
            },
            visitLiteralPrimitive: function(e) {},
            visitPropertyRead: function(e) {},
            visitPropertyWrite: function(e) {
              this.simple = !1;
            },
            visitSafePropertyRead: function(e) {
              this.simple = !1;
            },
            visitMethodCall: function(e) {
              this.simple = !1;
            },
            visitSafeMethodCall: function(e) {
              this.simple = !1;
            },
            visitFunctionCall: function(e) {
              this.simple = !1;
            },
            visitLiteralArray: function(e) {
              this.visitAll(e.expressions);
            },
            visitLiteralMap: function(e) {
              this.visitAll(e.values);
            },
            visitBinary: function(e) {
              this.simple = !1;
            },
            visitPrefixNot: function(e) {
              this.simple = !1;
            },
            visitConditional: function(e) {
              this.simple = !1;
            },
            visitPipe: function(e) {
              this.simple = !1;
            },
            visitKeyedRead: function(e) {
              this.simple = !1;
            },
            visitKeyedWrite: function(e) {
              this.simple = !1;
            },
            visitAll: function(e) {
              for (var t = c.createFixedSize(e.length),
                  n = 0; n < e.length; ++n)
                t[n] = e[n].visit(this);
              return t;
            },
            visitChain: function(e) {
              this.simple = !1;
            },
            visitIf: function(e) {
              this.simple = !1;
            }
          }, {check: function(t) {
              var n = new e;
              return t.visit(n), n.simple;
            }});
        }();
      }
    };
  }), System.register("angular2/src/change_detection/parser/locals", ["angular2/src/facade/lang", "angular2/src/facade/collection"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i;
    return {
      setters: [function(e) {
        t = e.isPresent, n = e.BaseException;
      }, function(e) {
        r = e.MapWrapper;
      }],
      execute: function() {
        i = function() {
          function e(e, t) {
            this.parent = e, this.current = t;
          }
          return $traceurRuntime.createClass(e, {
            contains: function(e) {
              return this.current.has(e) ? !0 : t(this.parent) ? this.parent.contains(e) : !1;
            },
            get: function(e) {
              if (this.current.has(e))
                return this.current.get(e);
              if (t(this.parent))
                return this.parent.get(e);
              throw new n("Cannot find '" + e + "'");
            },
            set: function(e, t) {
              if (!this.current.has(e))
                throw new n("Setting of new keys post-construction is not supported. Key: " + e + ".");
              this.current.set(e, t);
            },
            clearValues: function() {
              r.clearValues(this.current);
            }
          }, {});
        }(), e("Locals", i);
      }
    };
  }), System.register("angular2/src/change_detection/binding_record", ["angular2/src/facade/lang"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h;
    return {
      setters: [function(e) {
        t = e.isPresent, n = e.isBlank;
      }],
      execute: function() {
        r = "directive", i = "directiveLifecycle", o = "elementProperty", s = "elementAttribute", a = "elementClass", c = "elementStyle", u = "textNode", l = "event", f = "hostEvent", h = function() {
          function e(e, t, n, r, i, o, s, a, c, u) {
            this.mode = e, this.implicitReceiver = t, this.ast = n, this.elementIndex = r, this.propertyName = i, this.propertyUnit = o, this.eventName = s, this.setter = a, this.lifecycleEvent = c, this.directiveRecord = u;
          }
          return $traceurRuntime.createClass(e, {
            callOnChange: function() {
              return t(this.directiveRecord) && this.directiveRecord.callOnChange;
            },
            isDefaultChangeDetection: function() {
              return n(this.directiveRecord) || this.directiveRecord.isDefaultChangeDetection();
            },
            isDirective: function() {
              return this.mode === r;
            },
            isDirectiveLifecycle: function() {
              return this.mode === i;
            },
            isElementProperty: function() {
              return this.mode === o;
            },
            isElementAttribute: function() {
              return this.mode === s;
            },
            isElementClass: function() {
              return this.mode === a;
            },
            isElementStyle: function() {
              return this.mode === c;
            },
            isTextNode: function() {
              return this.mode === u;
            }
          }, {
            createForDirective: function(t, n, i, o) {
              return new e(r, 0, t, 0, n, null, null, i, null, o);
            },
            createDirectiveOnCheck: function(t) {
              return new e(i, 0, null, 0, null, null, null, null, "onCheck", t);
            },
            createDirectiveOnInit: function(t) {
              return new e(i, 0, null, 0, null, null, null, null, "onInit", t);
            },
            createDirectiveOnChange: function(t) {
              return new e(i, 0, null, 0, null, null, null, null, "onChange", t);
            },
            createForElementProperty: function(t, n, r) {
              return new e(o, 0, t, n, r, null, null, null, null, null);
            },
            createForElementAttribute: function(t, n, r) {
              return new e(s, 0, t, n, r, null, null, null, null, null);
            },
            createForElementClass: function(t, n, r) {
              return new e(a, 0, t, n, r, null, null, null, null, null);
            },
            createForElementStyle: function(t, n, r, i) {
              return new e(c, 0, t, n, r, i, null, null, null, null);
            },
            createForHostProperty: function(t, n, r) {
              return new e(o, t, n, t.elementIndex, r, null, null, null, null, null);
            },
            createForHostAttribute: function(t, n, r) {
              return new e(s, t, n, t.elementIndex, r, null, null, null, null, null);
            },
            createForHostClass: function(t, n, r) {
              return new e(a, t, n, t.elementIndex, r, null, null, null, null, null);
            },
            createForHostStyle: function(t, n, r, i) {
              return new e(c, t, n, t.elementIndex, r, i, null, null, null, null);
            },
            createForTextNode: function(t, n) {
              return new e(u, 0, t, n, null, null, null, null, null, null);
            },
            createForEvent: function(t, n, r) {
              return new e(l, 0, t, r, null, null, n, null, null, null);
            },
            createForHostEvent: function(t, n, r) {
              var i = r.directiveIndex;
              return new e(l, i, t, i.elementIndex, null, null, n, null, null, r);
            }
          });
        }(), e("BindingRecord", h);
      }
    };
  }), System.register("angular2/src/render/api", ["angular2/src/facade/lang", "angular2/src/facade/collection"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y,
        b,
        w,
        C;
    return {
      setters: [function(e) {
        t = e.isPresent, n = e.isBlank, r = e.RegExpWrapper;
      }, function(e) {
        i = e.Map, o = e.MapWrapper;
      }],
      execute: function() {
        s = function() {
          function e(e, t) {
            this.fullName = e, this.source = t;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("EventBinding", s), e("PropertyBindingType", a), function(e) {
          e[e.PROPERTY = 0] = "PROPERTY", e[e.ATTRIBUTE = 1] = "ATTRIBUTE", e[e.CLASS = 2] = "CLASS", e[e.STYLE = 3] = "STYLE";
        }(a || e("PropertyBindingType", a = {})), c = function() {
          function e(e, t, n) {
            var r = void 0 !== arguments[3] ? arguments[3] : null;
            this.type = e, this.astWithSource = t, this.property = n, this.unit = r;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("ElementPropertyBinding", c), u = function() {
          function e() {
            var e = void 0 !== arguments[0] ? arguments[0] : {},
                t = e.index,
                n = e.parentIndex,
                r = e.distanceToParent,
                i = e.directives,
                o = e.nestedProtoView,
                s = e.propertyBindings,
                a = e.variableBindings,
                c = e.eventBindings,
                u = e.readAttributes;
            this.index = t, this.parentIndex = n, this.distanceToParent = r, this.directives = i, this.nestedProtoView = o, this.propertyBindings = s, this.variableBindings = a, this.eventBindings = c, this.readAttributes = u;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("RenderElementBinder", u), l = function() {
          function e(e) {
            var t = e,
                n = t.directiveIndex,
                r = t.propertyBindings,
                i = t.eventBindings,
                o = t.hostPropertyBindings;
            this.directiveIndex = n, this.propertyBindings = r, this.eventBindings = i, this.hostPropertyBindings = o;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("DirectiveBinder", l), e("ViewType", f), function(e) {
          e[e.HOST = 0] = "HOST", e[e.COMPONENT = 1] = "COMPONENT", e[e.EMBEDDED = 2] = "EMBEDDED";
        }(f || e("ViewType", f = {})), h = function() {
          function e(e) {
            var t = e,
                n = t.render,
                r = t.elementBinders,
                i = t.variableBindings,
                o = t.type,
                s = t.textBindings,
                a = t.transitiveNgContentCount;
            this.render = n, this.elementBinders = r, this.variableBindings = i, this.type = o, this.textBindings = s, this.transitiveNgContentCount = a;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("ProtoViewDto", h), d = function() {
          function e(e) {
            var n = e,
                r = n.id,
                i = n.selector,
                o = n.compileChildren,
                s = n.events,
                a = n.hostListeners,
                c = n.hostProperties,
                u = n.hostAttributes,
                l = n.hostActions,
                f = n.properties,
                h = n.readAttributes,
                d = n.type,
                p = n.callOnDestroy,
                g = n.callOnChange,
                m = n.callOnCheck,
                v = n.callOnInit,
                _ = n.callOnAllChangesDone,
                y = n.changeDetection,
                b = n.exportAs;
            this.id = r, this.selector = i, this.compileChildren = t(o) ? o : !0, this.events = s, this.hostListeners = a, this.hostAttributes = u, this.hostProperties = c, this.hostActions = l, this.properties = f, this.readAttributes = h, this.type = d, this.callOnDestroy = p, this.callOnChange = g, this.callOnCheck = m, this.callOnInit = v, this.callOnAllChangesDone = _, this.changeDetection = y, this.exportAs = b;
          }
          return $traceurRuntime.createClass(e, {}, {
            get DIRECTIVE_TYPE() {
              return 0;
            },
            get COMPONENT_TYPE() {
              return 1;
            },
            create: function(s) {
              var a = s,
                  c = a.id,
                  u = a.selector,
                  l = a.compileChildren,
                  f = a.events,
                  h = a.host,
                  d = a.properties,
                  p = a.readAttributes,
                  g = a.type,
                  m = a.callOnDestroy,
                  v = a.callOnChange,
                  _ = a.callOnCheck,
                  y = a.callOnInit,
                  b = a.callOnAllChangesDone,
                  w = a.changeDetection,
                  C = a.exportAs,
                  R = new i,
                  E = new i,
                  x = new i,
                  S = new i;
              return t(h) && o.forEach(h, function(i, o) {
                var s = r.firstMatch(e._hostRegExp, o);
                n(s) ? x.set(o, i) : t(s[1]) ? E.set(s[1], i) : t(s[2]) ? R.set(s[2], i) : t(s[3]) && S.set(s[3], i);
              }), new e({
                id: c,
                selector: u,
                compileChildren: l,
                events: f,
                hostListeners: R,
                hostProperties: E,
                hostAttributes: x,
                hostActions: S,
                properties: d,
                readAttributes: p,
                type: g,
                callOnDestroy: m,
                callOnChange: v,
                callOnCheck: _,
                callOnInit: y,
                callOnAllChangesDone: b,
                changeDetection: w,
                exportAs: C
              });
            }
          });
        }(), e("RenderDirectiveMetadata", d), d._hostRegExp = /^(?:(?:\[([^\]]+)\])|(?:\(([^\)]+)\))|(?:@(.+)))$/g, p = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("RenderProtoViewRef", p), g = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("RenderFragmentRef", g), m = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("RenderViewRef", m), e("ViewEncapsulation", v), function(e) {
          e[e.EMULATED = 0] = "EMULATED", e[e.NATIVE = 1] = "NATIVE", e[e.NONE = 2] = "NONE";
        }(v || e("ViewEncapsulation", v = {})), _ = function() {
          function e() {
            var e = void 0 !== arguments[0] ? arguments[0] : {},
                n = e.componentId,
                r = e.templateAbsUrl,
                i = e.template,
                o = e.styleAbsUrls,
                s = e.styles,
                a = e.directives,
                c = e.encapsulation;
            this.componentId = n, this.templateAbsUrl = r, this.template = i, this.styleAbsUrls = o, this.styles = s, this.directives = a, this.encapsulation = t(c) ? c : v.EMULATED;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("ViewDefinition", _), y = function() {
          function e(e, t, n, r, i, o, s) {
            this.mergedProtoViewRef = e, this.fragmentCount = t, this.mappedElementIndices = n, this.mappedElementCount = r, this.mappedTextIndices = i, this.hostElementIndicesByViewIndex = o, this.nestedViewCountByViewIndex = s;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("RenderProtoViewMergeMapping", y), b = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {
            compileHost: function(e) {
              return null;
            },
            compile: function(e) {
              return null;
            },
            mergeProtoViewsRecursively: function(e) {
              return null;
            }
          }, {});
        }(), e("RenderCompiler", b), w = function() {
          function e(e, t) {
            this.viewRef = e, this.fragmentRefs = t;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("RenderViewWithFragments", w), C = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {
            createRootHostView: function(e, t, n) {
              return null;
            },
            createView: function(e, t) {
              return null;
            },
            destroyView: function(e) {},
            attachFragmentAfterFragment: function(e, t) {},
            attachFragmentAfterElement: function(e, t) {},
            detachFragment: function(e) {},
            hydrateView: function(e) {},
            dehydrateView: function(e) {},
            getNativeElementSync: function(e) {
              return null;
            },
            setElementProperty: function(e, t, n) {},
            setElementAttribute: function(e, t, n) {},
            setElementClass: function(e, t, n) {},
            setElementStyle: function(e, t, n) {},
            invokeElementMethod: function(e, t, n) {},
            setText: function(e, t, n) {},
            setEventDispatcher: function(e, t) {}
          }, {});
        }(), e("Renderer", C);
      }
    };
  }), System.register("angular2/src/core/application_tokens", ["angular2/di", "angular2/src/facade/lang"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i;
    return {
      setters: [function(e) {
        t = e.OpaqueToken;
      }, function(e) {
        n = e.CONST_EXPR;
      }],
      execute: function() {
        r = n(new t("Promise<ComponentRef>")), e("APP_COMPONENT_REF_PROMISE", r), i = n(new t("AppComponent")), e("APP_COMPONENT", i);
      }
    };
  }), System.register("angular2/src/dom/dom_adapter", ["angular2/src/facade/lang"], function(e) {
    "use strict";
    function t(t) {
      i(o) && e("DOM", o = t);
    }
    function n() {
      return new r("This method is abstract");
    }
    var r,
        i,
        o,
        s;
    return e("setRootDomAdapter", t), {
      setters: [function(e) {
        r = e.BaseException, i = e.isBlank;
      }],
      execute: function() {
        e("DOM", o), s = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {
            hasProperty: function(e, t) {
              throw n();
            },
            setProperty: function(e, t, r) {
              throw n();
            },
            getProperty: function(e, t) {
              throw n();
            },
            invoke: function(e, t, r) {
              throw n();
            },
            logError: function(e) {
              throw n();
            },
            log: function(e) {
              throw n();
            },
            logGroup: function(e) {
              throw n();
            },
            logGroupEnd: function() {
              throw n();
            },
            get attrToPropMap() {
              throw n();
            },
            parse: function(e) {
              throw n();
            },
            query: function(e) {
              throw n();
            },
            querySelector: function(e, t) {
              throw n();
            },
            querySelectorAll: function(e, t) {
              throw n();
            },
            on: function(e, t, r) {
              throw n();
            },
            onAndCancel: function(e, t, r) {
              throw n();
            },
            dispatchEvent: function(e, t) {
              throw n();
            },
            createMouseEvent: function(e) {
              throw n();
            },
            createEvent: function(e) {
              throw n();
            },
            preventDefault: function(e) {
              throw n();
            },
            isPrevented: function(e) {
              throw n();
            },
            getInnerHTML: function(e) {
              throw n();
            },
            getOuterHTML: function(e) {
              throw n();
            },
            nodeName: function(e) {
              throw n();
            },
            nodeValue: function(e) {
              throw n();
            },
            type: function(e) {
              throw n();
            },
            content: function(e) {
              throw n();
            },
            firstChild: function(e) {
              throw n();
            },
            nextSibling: function(e) {
              throw n();
            },
            parentElement: function(e) {
              throw n();
            },
            childNodes: function(e) {
              throw n();
            },
            childNodesAsList: function(e) {
              throw n();
            },
            clearNodes: function(e) {
              throw n();
            },
            appendChild: function(e, t) {
              throw n();
            },
            removeChild: function(e, t) {
              throw n();
            },
            replaceChild: function(e, t, r) {
              throw n();
            },
            remove: function(e) {
              throw n();
            },
            insertBefore: function(e, t) {
              throw n();
            },
            insertAllBefore: function(e, t) {
              throw n();
            },
            insertAfter: function(e, t) {
              throw n();
            },
            setInnerHTML: function(e, t) {
              throw n();
            },
            getText: function(e) {
              throw n();
            },
            setText: function(e, t) {
              throw n();
            },
            getValue: function(e) {
              throw n();
            },
            setValue: function(e, t) {
              throw n();
            },
            getChecked: function(e) {
              throw n();
            },
            setChecked: function(e, t) {
              throw n();
            },
            createComment: function(e) {
              throw n();
            },
            createTemplate: function(e) {
              throw n();
            },
            createElement: function(e) {
              throw void 0 !== arguments[1] ? arguments[1] : null, n();
            },
            createTextNode: function(e) {
              throw void 0 !== arguments[1] ? arguments[1] : null, n();
            },
            createScriptTag: function(e, t) {
              throw void 0 !== arguments[2] ? arguments[2] : null, n();
            },
            createStyleElement: function(e) {
              throw void 0 !== arguments[1] ? arguments[1] : null, n();
            },
            createShadowRoot: function(e) {
              throw n();
            },
            getShadowRoot: function(e) {
              throw n();
            },
            getHost: function(e) {
              throw n();
            },
            getDistributedNodes: function(e) {
              throw n();
            },
            clone: function(e) {
              throw n();
            },
            getElementsByClassName: function(e, t) {
              throw n();
            },
            getElementsByTagName: function(e, t) {
              throw n();
            },
            classList: function(e) {
              throw n();
            },
            addClass: function(e, t) {
              throw n();
            },
            removeClass: function(e, t) {
              throw n();
            },
            hasClass: function(e, t) {
              throw n();
            },
            setStyle: function(e, t, r) {
              throw n();
            },
            removeStyle: function(e, t) {
              throw n();
            },
            getStyle: function(e, t) {
              throw n();
            },
            tagName: function(e) {
              throw n();
            },
            attributeMap: function(e) {
              throw n();
            },
            hasAttribute: function(e, t) {
              throw n();
            },
            getAttribute: function(e, t) {
              throw n();
            },
            setAttribute: function(e, t, r) {
              throw n();
            },
            removeAttribute: function(e, t) {
              throw n();
            },
            templateAwareRoot: function(e) {
              throw n();
            },
            createHtmlDocument: function() {
              throw n();
            },
            defaultDoc: function() {
              throw n();
            },
            getBoundingClientRect: function(e) {
              throw n();
            },
            getTitle: function() {
              throw n();
            },
            setTitle: function(e) {
              throw n();
            },
            elementMatches: function(e, t) {
              throw n();
            },
            isTemplateElement: function(e) {
              throw n();
            },
            isTextNode: function(e) {
              throw n();
            },
            isCommentNode: function(e) {
              throw n();
            },
            isElementNode: function(e) {
              throw n();
            },
            hasShadowRoot: function(e) {
              throw n();
            },
            isShadowRoot: function(e) {
              throw n();
            },
            importIntoDoc: function(e) {
              throw n();
            },
            adoptNode: function(e) {
              throw n();
            },
            isPageRule: function(e) {
              throw n();
            },
            isStyleRule: function(e) {
              throw n();
            },
            isMediaRule: function(e) {
              throw n();
            },
            isKeyframesRule: function(e) {
              throw n();
            },
            getHref: function(e) {
              throw n();
            },
            getEventKey: function(e) {
              throw n();
            },
            resolveAndSetHref: function(e, t, r) {
              throw n();
            },
            cssToRules: function(e) {
              throw n();
            },
            supportsDOMEvents: function() {
              throw n();
            },
            supportsNativeShadowDOM: function() {
              throw n();
            },
            getGlobalEventTarget: function(e) {
              throw n();
            },
            getHistory: function() {
              throw n();
            },
            getLocation: function() {
              throw n();
            },
            getBaseHref: function() {
              throw n();
            },
            resetBaseElement: function() {
              throw n();
            },
            getUserAgent: function() {
              throw n();
            },
            setData: function(e, t, r) {
              throw n();
            },
            getData: function(e, t) {
              throw n();
            },
            setGlobalVar: function(e, t) {
              throw n();
            }
          }, {});
        }(), e("DomAdapter", s);
      }
    };
  }), System.register("angular2/src/dom/generic_browser_adapter", ["angular2/src/facade/collection", "angular2/src/facade/lang", "angular2/src/dom/dom_adapter"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o;
    return {
      setters: [function(e) {
        t = e.ListWrapper;
      }, function(e) {
        n = e.isPresent, r = e.isFunction;
      }, function(e) {
        i = e.DomAdapter;
      }],
      execute: function() {
        o = function(e) {
          function i() {
            $traceurRuntime.superConstructor(i).apply(this, arguments);
          }
          return $traceurRuntime.createClass(i, {
            getDistributedNodes: function(e) {
              return e.getDistributedNodes();
            },
            resolveAndSetHref: function(e, t, n) {
              e.href = null == n ? t : t + "/../" + n;
            },
            cssToRules: function(e) {
              var r = this.createStyleElement(e);
              this.appendChild(this.defaultDoc().head, r);
              var i = [];
              if (n(r.sheet))
                try {
                  var o = r.sheet.cssRules;
                  i = t.createFixedSize(o.length);
                  for (var s = 0; s < o.length; s++)
                    i[s] = o[s];
                } catch (a) {}
              return this.remove(r), i;
            },
            supportsDOMEvents: function() {
              return !0;
            },
            supportsNativeShadowDOM: function() {
              return r(this.defaultDoc().body.createShadowRoot);
            }
          }, {}, e);
        }(i), e("GenericBrowserDomAdapter", o);
      }
    };
  }), System.register("angular2/src/core/compiler/directive_resolver", ["angular2/di", "angular2/src/facade/lang", "angular2/metadata", "angular2/src/reflection/reflection"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l;
    return {
      setters: [function(e) {
        r = e.resolveForwardRef, i = e.Injectable;
      }, function(e) {
        o = e.isPresent, s = e.BaseException, a = e.stringify;
      }, function(e) {
        c = e.DirectiveMetadata;
      }, function(e) {
        u = e.reflector;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, l = $traceurRuntime.createClass(function() {}, {resolve: function(e) {
            var t = u.annotations(r(e));
            if (o(t))
              for (var n = 0; n < t.length; n++) {
                var i = t[n];
                if (i instanceof c)
                  return i;
              }
            throw new s("No Directive annotation found on " + a(e));
          }}, {}), e("DirectiveResolver", l), e("DirectiveResolver", l = t([i(), n("design:paramtypes", [])], l));
      }
    };
  }), System.register("angular2/src/core/compiler/element_binder", ["angular2/src/facade/lang"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i;
    return {
      setters: [function(e) {
        t = e.isBlank, n = e.isPresent, r = e.BaseException;
      }],
      execute: function() {
        i = function() {
          function e(e, n, i, o, s) {
            if (this.index = e, this.parent = n, this.distanceToParent = i, this.protoElementInjector = o, this.componentDirective = s, this.nestedProtoView = null, t(e))
              throw new r("null index not allowed.");
          }
          return $traceurRuntime.createClass(e, {
            hasStaticComponent: function() {
              return n(this.componentDirective) && n(this.nestedProtoView);
            },
            hasEmbeddedProtoView: function() {
              return !n(this.componentDirective) && n(this.nestedProtoView);
            }
          }, {});
        }(), e("ElementBinder", i);
      }
    };
  }), System.register("angular2/src/core/compiler/view_ref", ["angular2/src/facade/lang"], function(e) {
    "use strict";
    function t(e) {
      return e._view;
    }
    function n(e) {
      return r(e) ? e._protoView : null;
    }
    var r,
        i,
        o;
    return e("internalView", t), e("internalProtoView", n), {
      setters: [function(e) {
        r = e.isPresent;
      }],
      execute: function() {
        i = function() {
          function e(e) {
            this._view = e;
          }
          return $traceurRuntime.createClass(e, {
            get render() {
              return this._view.render;
            },
            get renderFragment() {
              return this._view.renderFragment;
            },
            setLocal: function(e, t) {
              this._view.setLocal(e, t);
            }
          }, {});
        }(), e("ViewRef", i), o = function() {
          function e(e) {
            this._protoView = e;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("ProtoViewRef", o);
      }
    };
  }), System.register("angular2/src/core/compiler/element_ref", ["angular2/src/facade/lang"], function(e) {
    "use strict";
    var t,
        n;
    return {
      setters: [function(e) {
        t = e.BaseException;
      }],
      execute: function() {
        n = function() {
          function e(e, t, n, r) {
            this._renderer = r, this.parentView = e, this.boundElementIndex = t, this.renderBoundElementIndex = n;
          }
          return $traceurRuntime.createClass(e, {
            get renderView() {
              return this.parentView.render;
            },
            set renderView(e) {
              throw new t("Abstract setter");
            },
            get nativeElement() {
              return this._renderer.getNativeElementSync(this);
            }
          }, {});
        }(), e("ElementRef", n);
      }
    };
  }), System.register("angular2/src/core/compiler/template_ref", ["angular2/src/core/compiler/view_ref"], function(e) {
    "use strict";
    var t,
        n;
    return {
      setters: [function(e) {
        t = e.internalView;
      }],
      execute: function() {
        n = function() {
          function e(e) {
            this.elementRef = e;
          }
          return $traceurRuntime.createClass(e, {
            _getProtoView: function() {
              var e = t(this.elementRef.parentView);
              return e.proto.elementBinders[this.elementRef.boundElementIndex - e.elementOffset].nestedProtoView;
            },
            get protoViewRef() {
              return this._getProtoView().ref;
            },
            hasLocal: function(e) {
              return this._getProtoView().variableBindings.has(e);
            }
          }, {});
        }(), e("TemplateRef", n);
      }
    };
  }), System.register("angular2/src/core/pipes/pipes", ["angular2/src/facade/lang"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i;
    return {
      setters: [function(e) {
        t = e.isBlank, n = e.BaseException;
      }],
      execute: function() {
        r = function() {
          function e(e) {
            var t = this;
            this.config = {}, e.forEach(function(e) {
              return t.config[e.name] = e;
            });
          }
          return $traceurRuntime.createClass(e, {get: function(e) {
              var r = this.config[e];
              if (t(r))
                throw new n("Cannot find pipe '" + e + "'.");
              return r;
            }}, {});
        }(), e("ProtoPipes", r), i = function() {
          function e(e, t) {
            this.proto = e, this.injector = t;
          }
          return $traceurRuntime.createClass(e, {get: function(e) {
              var t = this.proto.get(e);
              return this.injector.instantiateResolved(t);
            }}, {});
        }(), e("Pipes", i);
      }
    };
  }), System.register("angular2/src/core/compiler/view_pool", ["angular2/di", "angular2/src/facade/collection", "angular2/src/facade/lang"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d;
    return {
      setters: [function(e) {
        i = e.Inject, o = e.Injectable, s = e.OpaqueToken;
      }, function(e) {
        a = e.ListWrapper, c = e.Map;
      }, function(e) {
        u = e.isPresent, l = e.isBlank, f = e.CONST_EXPR;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, r = this && this.__param || function(e, t) {
          return function(n, r) {
            t(n, r, e);
          };
        }, h = f(new s("AppViewPool.viewPoolCapacity")), e("APP_VIEW_POOL_CAPACITY", h), d = $traceurRuntime.createClass(function(e) {
          this._pooledViewsPerProtoView = new c, this._poolCapacityPerProtoView = e;
        }, {
          getView: function(e) {
            var t = this._pooledViewsPerProtoView.get(e);
            return u(t) && t.length > 0 ? a.removeLast(t) : null;
          },
          returnView: function(e) {
            var t = e.proto,
                n = this._pooledViewsPerProtoView.get(t);
            l(n) && (n = [], this._pooledViewsPerProtoView.set(t, n));
            var r = n.length < this._poolCapacityPerProtoView;
            return r && n.push(e), r;
          }
        }, {}), e("AppViewPool", d), e("AppViewPool", d = t([o(), r(0, i(h)), n("design:paramtypes", [Object])], d));
      }
    };
  }), System.register("angular2/src/core/compiler/view_listener", ["angular2/di"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i;
    return {
      setters: [function(e) {
        r = e.Injectable;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, i = $traceurRuntime.createClass(function() {}, {
          viewCreated: function(e) {},
          viewDestroyed: function(e) {}
        }, {}), e("AppViewListener", i), e("AppViewListener", i = t([r(), n("design:paramtypes", [])], i));
      }
    };
  }), System.register("angular2/src/core/compiler/view_container_ref", ["angular2/src/facade/collection", "angular2/src/facade/lang", "angular2/src/core/compiler/view_ref"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i;
    return {
      setters: [function(e) {
        t = e.ListWrapper;
      }, function(e) {
        n = e.isPresent;
      }, function(e) {
        r = e.internalView;
      }],
      execute: function() {
        i = function() {
          function e(e, t) {
            this.viewManager = e, this.element = t;
          }
          return $traceurRuntime.createClass(e, {
            _getViews: function() {
              var e = r(this.element.parentView).viewContainers[this.element.boundElementIndex];
              return n(e) ? e.views : [];
            },
            clear: function() {
              for (var e = this.length - 1; e >= 0; e--)
                this.remove(e);
            },
            get: function(e) {
              return this._getViews()[e].ref;
            },
            get length() {
              return this._getViews().length;
            },
            createEmbeddedView: function(e) {
              var t = void 0 !== arguments[1] ? arguments[1] : -1;
              return -1 == t && (t = this.length), this.viewManager.createEmbeddedViewInContainer(this.element, t, e);
            },
            createHostView: function() {
              var e = void 0 !== arguments[0] ? arguments[0] : null,
                  t = void 0 !== arguments[1] ? arguments[1] : -1,
                  n = void 0 !== arguments[2] ? arguments[2] : null;
              return -1 == t && (t = this.length), this.viewManager.createHostViewInContainer(this.element, t, e, n);
            },
            insert: function(e) {
              var t = void 0 !== arguments[1] ? arguments[1] : -1;
              return -1 == t && (t = this.length), this.viewManager.attachViewInContainer(this.element, t, e);
            },
            indexOf: function(e) {
              return t.indexOf(this._getViews(), r(e));
            },
            remove: function() {
              var e = void 0 !== arguments[0] ? arguments[0] : -1;
              -1 == e && (e = this.length - 1), this.viewManager.destroyViewInContainer(this.element, e);
            },
            detach: function() {
              var e = void 0 !== arguments[0] ? arguments[0] : -1;
              return -1 == e && (e = this.length - 1), this.viewManager.detachViewInContainer(this.element, e);
            }
          }, {});
        }(), e("ViewContainerRef", i);
      }
    };
  }), System.register("angular2/src/core/compiler/directive_lifecycle_reflector", ["angular2/src/facade/lang", "angular2/metadata"], function(e) {
    "use strict";
    function t(e, t, o) {
      if (r(o.lifecycle))
        return -1 !== o.lifecycle.indexOf(e);
      if (!(t instanceof n))
        return !1;
      var s = t.prototype;
      switch (e) {
        case i.onAllChangesDone:
          return !!s.onAllChangesDone;
        case i.onChange:
          return !!s.onChange;
        case i.onCheck:
          return !!s.onCheck;
        case i.onDestroy:
          return !!s.onDestroy;
        case i.onInit:
          return !!s.onInit;
        default:
          return !1;
      }
    }
    var n,
        r,
        i;
    return e("hasLifecycleHook", t), {
      setters: [function(e) {
        n = e.Type, r = e.isPresent;
      }, function(e) {
        i = e.LifecycleEvent;
      }],
      execute: function() {}
    };
  }), System.register("angular2/src/core/compiler/query_list", ["angular2/src/facade/collection"], function(e) {
    "use strict";
    var t,
        n;
    return {
      setters: [function(e) {
        t = e.ListWrapper;
      }],
      execute: function() {
        n = function() {
          function e() {
            this._results = [], this._callbacks = [], this._dirty = !1;
          }
          var n;
          return $traceurRuntime.createClass(e, (n = {}, Object.defineProperty(n, "reset", {
            value: function(e) {
              this._results = e, this._dirty = !0;
            },
            configurable: !0,
            enumerable: !0,
            writable: !0
          }), Object.defineProperty(n, "add", {
            value: function(e) {
              this._results.push(e), this._dirty = !0;
            },
            configurable: !0,
            enumerable: !0,
            writable: !0
          }), Object.defineProperty(n, "fireCallbacks", {
            value: function() {
              this._dirty && (t.forEach(this._callbacks, function(e) {
                return e();
              }), this._dirty = !1);
            },
            configurable: !0,
            enumerable: !0,
            writable: !0
          }), Object.defineProperty(n, "onChange", {
            value: function(e) {
              this._callbacks.push(e);
            },
            configurable: !0,
            enumerable: !0,
            writable: !0
          }), Object.defineProperty(n, "removeCallback", {
            value: function(e) {
              t.remove(this._callbacks, e);
            },
            configurable: !0,
            enumerable: !0,
            writable: !0
          }), Object.defineProperty(n, "toString", {
            value: function() {
              return this._results.toString();
            },
            configurable: !0,
            enumerable: !0,
            writable: !0
          }), Object.defineProperty(n, "length", {
            get: function() {
              return this._results.length;
            },
            configurable: !0,
            enumerable: !0
          }), Object.defineProperty(n, "first", {
            get: function() {
              return t.first(this._results);
            },
            configurable: !0,
            enumerable: !0
          }), Object.defineProperty(n, "last", {
            get: function() {
              return t.last(this._results);
            },
            configurable: !0,
            enumerable: !0
          }), Object.defineProperty(n, "map", {
            value: function(e) {
              return this._results.map(e);
            },
            configurable: !0,
            enumerable: !0,
            writable: !0
          }), Object.defineProperty(n, Symbol.iterator, {
            value: function() {
              return this._results[Symbol.iterator]();
            },
            configurable: !0,
            enumerable: !0,
            writable: !0
          }), n), {});
        }(), e("QueryList", n);
      }
    };
  }), System.register("angular2/src/core/pipes/pipe_binding", ["angular2/di"], function(e) {
    "use strict";
    var t,
        n,
        r;
    return {
      setters: [function(e) {
        t = e.ResolvedBinding, n = e.Binding;
      }],
      execute: function() {
        r = function(e) {
          function t(e, n, r, i) {
            $traceurRuntime.superConstructor(t).call(this, n, r, i), this.name = e;
          }
          return $traceurRuntime.createClass(t, {}, {createFromType: function(e, r) {
              var i = new n(e, {toClass: e}),
                  o = i.resolve();
              return new t(r.name, o.key, o.factory, o.dependencies);
            }}, e);
        }(t), e("PipeBinding", r);
      }
    };
  }), System.register("angular2/src/core/compiler/view_resolver", ["angular2/di", "angular2/src/core/metadata/view", "angular2/src/facade/lang", "angular2/src/facade/collection", "angular2/src/reflection/reflection"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l;
    return {
      setters: [function(e) {
        r = e.Injectable;
      }, function(e) {
        i = e.ViewMetadata;
      }, function(e) {
        o = e.stringify, s = e.isBlank, a = e.BaseException;
      }, function(e) {
        c = e.Map;
      }, function(e) {
        u = e.reflector;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, l = $traceurRuntime.createClass(function() {
          this._cache = new c;
        }, {
          resolve: function(e) {
            var t = this._cache.get(e);
            return s(t) && (t = this._resolve(e), this._cache.set(e, t)), t;
          },
          _resolve: function(e) {
            for (var t = u.annotations(e),
                n = 0; n < t.length; n++) {
              var r = t[n];
              if (r instanceof i)
                return r;
            }
            throw new a("No View annotation found on component " + o(e));
          }
        }, {}), e("ViewResolver", l), e("ViewResolver", l = t([r(), n("design:paramtypes", [])], l));
      }
    };
  }), System.register("angular2/src/core/compiler/pipe_resolver", ["angular2/di", "angular2/src/facade/lang", "angular2/src/core/metadata/directives", "angular2/src/reflection/reflection"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l;
    return {
      setters: [function(e) {
        r = e.resolveForwardRef, i = e.Injectable;
      }, function(e) {
        o = e.isPresent, s = e.BaseException, a = e.stringify;
      }, function(e) {
        c = e.PipeMetadata;
      }, function(e) {
        u = e.reflector;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, l = $traceurRuntime.createClass(function() {}, {resolve: function(e) {
            var t = u.annotations(r(e));
            if (o(t))
              for (var n = 0; n < t.length; n++) {
                var i = t[n];
                if (i instanceof c)
                  return i;
              }
            throw new s("No Pipe decorator found on " + a(e));
          }}, {}), e("PipeResolver", l), e("PipeResolver", l = t([i(), n("design:paramtypes", [])], l));
      }
    };
  }), System.register("angular2/src/core/compiler/component_url_mapper", ["angular2/di", "angular2/src/facade/lang", "angular2/src/facade/collection"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a;
    return {
      setters: [function(e) {
        r = e.Injectable;
      }, function(e) {
        i = e.isPresent;
      }, function(e) {
        o = e.Map;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, s = $traceurRuntime.createClass(function() {}, {getUrl: function(e) {
            return "./";
          }}, {}), e("ComponentUrlMapper", s), e("ComponentUrlMapper", s = t([r(), n("design:paramtypes", [])], s)), a = function(e) {
          function t() {
            $traceurRuntime.superConstructor(t).call(this), this._componentUrls = new o;
          }
          return $traceurRuntime.createClass(t, {
            setComponentUrl: function(e, t) {
              this._componentUrls.set(e, t);
            },
            getUrl: function(e) {
              var n = this._componentUrls.get(e);
              return i(n) ? n : $traceurRuntime.superGet(this, t.prototype, "getUrl").call(this, e);
            }
          }, {}, e);
        }(s), e("RuntimeComponentUrlMapper", a);
      }
    };
  }), System.register("angular2/src/core/compiler/proto_view_factory", ["angular2/di", "angular2/src/facade/collection", "angular2/src/facade/lang", "angular2/src/reflection/reflection", "angular2/src/change_detection/change_detection", "angular2/src/core/pipes/pipes", "angular2/src/render/api", "angular2/src/core/compiler/view", "angular2/src/core/compiler/element_injector"], function(e) {
    "use strict";
    function t(e, t, i) {
      var o = n(t),
          s = a(o);
      return r(e, o, s, i);
    }
    function n(e) {
      var t = void 0 !== arguments[1] ? arguments[1] : null,
          r = void 0 !== arguments[2] ? arguments[2] : null,
          i = void 0 !== arguments[3] ? arguments[3] : null;
      R(i) && (i = []), i.push(new $(e, i.length, t, r));
      var o = i.length - 1,
          s = 0;
      return b.forEach(e.elementBinders, function(e) {
        C(e.nestedProtoView) && n(e.nestedProtoView, o, s, i), s++;
      }), i;
    }
    function r(e, t, n, r) {
      return b.map(t, function(t) {
        var i,
            o = t.renderProtoView.elementBinders,
            s = new L,
            a = s.getPropertyBindingRecords(t.renderProtoView.textBindings, o, r),
            c = s.getEventBindingRecords(o, r),
            u = s.getDirectiveRecords(o, r),
            l = O;
        t.renderProtoView.type === k.COMPONENT ? (l = e.changeDetection, i = "comp") : i = t.renderProtoView.type === k.HOST ? "host" : "embedded";
        var f = e.id + "_" + i + "_" + t.index,
            h = n[t.index];
        return new T(f, l, h, a, c, u, x());
      });
    }
    function i(e, t, n, r, i) {
      var o = e.elementBinders,
          s = new j(i),
          a = new M(e.type, e.transitiveNgContentCount > 0, e.render, t, n, u(o), e.textBindings.length, s);
      return l(a, o, r), a;
    }
    function o(e) {
      return b.map(e, function(e) {
        return s(e.renderProtoView);
      });
    }
    function s(e) {
      var t = new Map;
      return w.forEach(e.variableBindings, function(e, n) {
        t.set(n, e);
      }), t;
    }
    function a(e) {
      var t = b.createFixedSize(e.length);
      return b.forEach(e, function(e) {
        var n = C(e.parentIndex) ? t[e.parentIndex] : null;
        t[e.index] = c(n, e.renderProtoView);
      }), t;
    }
    function c(e, t) {
      var n = R(e) ? [] : b.clone(e);
      return w.forEach(t.variableBindings, function(e, t) {
        n.push(e);
      }), b.forEach(t.elementBinders, function(e) {
        w.forEach(e.variableBindings, function(e, t) {
          n.push(e);
        });
      }), n;
    }
    function u(e) {
      for (var t = new Map,
          n = 0; n < e.length; n++) {
        var r = e[n];
        w.forEach(r.variableBindings, function(e, r) {
          t.set(e, n);
        });
      }
      return t;
    }
    function l(e, t, n) {
      for (var r = 0; r < t.length; r++) {
        var i = t[r],
            o = t[r].directives,
            s = f(r, e.elementBinders, t),
            a = b.map(o, function(e) {
              return n[e.directiveIndex];
            }),
            c = null;
        a.length > 0 && a[0].metadata.type === N.COMPONENT_TYPE && (c = a[0]);
        var u = h(r, s, i, c, a);
        d(e, r, i, u, c, a);
      }
    }
    function f(e, t, n) {
      var r = 0;
      do {
        var i = n[e];
        if (e = i.parentIndex, -1 !== e) {
          r += i.distanceToParent;
          var o = t[e];
          if (C(o.protoElementInjector))
            return new H(o.protoElementInjector, r);
        }
      } while (-1 !== e);
      return new H(null, 0);
    }
    function h(e, t, n, r, i) {
      var o = null,
          s = w.size(n.variableBindings) > 0;
      if (i.length > 0 || s || C(n.nestedProtoView)) {
        var a = p(n, i);
        o = B.create(t.protoElementInjector, e, i, C(r), t.distance, a), o.attributes = n.readAttributes;
      }
      return o;
    }
    function d(e, t, n, r, i, o) {
      var s = null;
      -1 !== n.parentIndex && (s = e.elementBinders[n.parentIndex]);
      var a = e.bindElement(s, n.distanceToParent, r, i);
      return w.forEach(n.variableBindings, function(t, n) {
        e.protoLocals.set(t, null);
      }), a;
    }
    function p(e, t) {
      var n = new Map;
      return w.forEach(e.variableBindings, function(r, i) {
        var o = g(e, t, i);
        n.set(r, o);
      }), n;
    }
    function g(e, t, n) {
      for (var r,
          i = null,
          o = 0; o < t.length; ++o) {
        var s = t[o];
        if (m(s) == n) {
          if (C(r))
            throw new E("More than one directive have exportAs = '" + n + "'. Directives: [" + r.displayName + ", " + s.displayName + "]");
          i = o, r = s;
        }
      }
      if (R(r) && "$implicit" !== n)
        throw new E("Cannot find directive with exportAs = '" + n + "'");
      return i;
    }
    function m(e) {
      var t = e.metadata.exportAs;
      return R(t) && e.metadata.type === N.COMPONENT_TYPE ? "$implicit" : t;
    }
    var v,
        _,
        y,
        b,
        w,
        C,
        R,
        E,
        x,
        S,
        D,
        I,
        P,
        A,
        O,
        T,
        j,
        N,
        V,
        k,
        M,
        B,
        L,
        F,
        $,
        H;
    return e("getChangeDetectorDefinitions", t), e("createVariableLocations", u), e("createDirectiveVariableBindings", p), {
      setters: [function(e) {
        y = e.Injectable;
      }, function(e) {
        b = e.ListWrapper, w = e.MapWrapper;
      }, function(e) {
        C = e.isPresent, R = e.isBlank, E = e.BaseException, x = e.assertionsEnabled;
      }, function(e) {
        S = e.reflector;
      }, function(e) {
        D = e.ChangeDetection, I = e.DirectiveIndex, P = e.BindingRecord, A = e.DirectiveRecord, O = e.DEFAULT, T = e.ChangeDetectorDefinition;
      }, function(e) {
        j = e.ProtoPipes;
      }, function(e) {
        N = e.RenderDirectiveMetadata, V = e.PropertyBindingType, k = e.ViewType;
      }, function(e) {
        M = e.AppProtoView;
      }, function(e) {
        B = e.ProtoElementInjector;
      }],
      execute: function() {
        v = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, _ = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, L = function() {
          function e() {
            this._directiveRecordsMap = new Map;
          }
          return $traceurRuntime.createClass(e, {
            getEventBindingRecords: function(e, t) {
              for (var n = [],
                  r = 0; r < e.length; r++) {
                var i = e[r];
                this._createTemplateEventRecords(n, i, r), this._createHostEventRecords(n, i, t, r);
              }
              return n;
            },
            _createTemplateEventRecords: function(e, t, n) {
              t.eventBindings.forEach(function(t) {
                e.push(P.createForEvent(t.source, t.fullName, n));
              });
            },
            _createHostEventRecords: function(e, t, n, r) {
              for (var i = 0; i < t.directives.length; ++i) {
                var o = t.directives[i],
                    s = n[o.directiveIndex],
                    a = this._getDirectiveRecord(r, i, s);
                o.eventBindings.forEach(function(t) {
                  e.push(P.createForHostEvent(t.source, t.fullName, a));
                });
              }
            },
            getPropertyBindingRecords: function(e, t, n) {
              var r = [];
              this._createTextNodeRecords(r, e);
              for (var i = 0; i < t.length; i++) {
                var o = t[i];
                this._createElementPropertyRecords(r, i, o), this._createDirectiveRecords(r, i, o.directives, n);
              }
              return r;
            },
            getDirectiveRecords: function(e, t) {
              for (var n = [],
                  r = 0; r < e.length; ++r)
                for (var i = e[r].directives,
                    o = 0; o < i.length; ++o)
                  n.push(this._getDirectiveRecord(r, o, t[i[o].directiveIndex]));
              return n;
            },
            _createTextNodeRecords: function(e, t) {
              for (var n = 0; n < t.length; n++)
                e.push(P.createForTextNode(t[n], n));
            },
            _createElementPropertyRecords: function(e, t, n) {
              b.forEach(n.propertyBindings, function(n) {
                n.type === V.PROPERTY ? e.push(P.createForElementProperty(n.astWithSource, t, n.property)) : n.type === V.ATTRIBUTE ? e.push(P.createForElementAttribute(n.astWithSource, t, n.property)) : n.type === V.CLASS ? e.push(P.createForElementClass(n.astWithSource, t, n.property)) : n.type === V.STYLE && e.push(P.createForElementStyle(n.astWithSource, t, n.property, n.unit));
              });
            },
            _createDirectiveRecords: function(e, t, n, r) {
              for (var i = 0; i < n.length; i++) {
                var o = n[i],
                    s = r[o.directiveIndex],
                    a = this._getDirectiveRecord(t, i, s);
                w.forEach(o.propertyBindings, function(t, n) {
                  var r = S.setter(n);
                  e.push(P.createForDirective(t, n, r, a));
                }), a.callOnChange && e.push(P.createDirectiveOnChange(a)), a.callOnInit && e.push(P.createDirectiveOnInit(a)), a.callOnCheck && e.push(P.createDirectiveOnCheck(a));
              }
              for (var i = 0; i < n.length; i++) {
                var o = n[i];
                b.forEach(o.hostPropertyBindings, function(n) {
                  var r = new I(t, i);
                  n.type === V.PROPERTY ? e.push(P.createForHostProperty(r, n.astWithSource, n.property)) : n.type === V.ATTRIBUTE ? e.push(P.createForHostAttribute(r, n.astWithSource, n.property)) : n.type === V.CLASS ? e.push(P.createForHostClass(r, n.astWithSource, n.property)) : n.type === V.STYLE && e.push(P.createForHostStyle(r, n.astWithSource, n.property, n.unit));
                });
              }
            },
            _getDirectiveRecord: function(e, t, n) {
              var r = 100 * e + t;
              return this._directiveRecordsMap.has(r) || this._directiveRecordsMap.set(r, new A({
                directiveIndex: new I(e, t),
                callOnAllChangesDone: n.callOnAllChangesDone,
                callOnChange: n.callOnChange,
                callOnCheck: n.callOnCheck,
                callOnInit: n.callOnInit,
                changeDetection: n.changeDetection
              })), this._directiveRecordsMap.get(r);
            }
          }, {});
        }(), e("BindingRecordsCreator", L), F = $traceurRuntime.createClass(function(e) {
          this._changeDetection = e;
        }, {createAppProtoViews: function(e, t, s, c) {
            var u = this,
                l = b.map(s, function(e) {
                  return e.metadata;
                }),
                f = n(t),
                h = o(f),
                d = a(f),
                p = r(e.metadata, f, d, l),
                g = b.map(p, function(e) {
                  return u._changeDetection.createProtoChangeDetector(e);
                }),
                m = b.createFixedSize(f.length);
            return b.forEach(f, function(e) {
              var t = i(e.renderProtoView, g[e.index], h[e.index], s, c);
              if (C(e.parentIndex)) {
                var n = m[e.parentIndex];
                n.elementBinders[e.boundElementIndex].nestedProtoView = t;
              }
              m[e.index] = t;
            }), m;
          }}, {}), e("ProtoViewFactory", F), e("ProtoViewFactory", F = v([y(), _("design:paramtypes", [D])], F)), $ = function() {
          function e(e, t, n, r) {
            this.renderProtoView = e, this.index = t, this.parentIndex = n, this.boundElementIndex = r;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), H = function() {
          function e(e, t) {
            this.protoElementInjector = e, this.distance = t;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }();
      }
    };
  }), System.register("angular2/src/services/url_resolver", ["angular2/di", "angular2/src/facade/lang", "angular2/src/facade/collection"], function(e) {
    "use strict";
    function t(e, t, n, r, i, o, s) {
      var a = [];
      return u(e) && a.push(e + ":"), u(n) && (a.push("//"), u(t) && a.push(t + "@"), a.push(n), u(r) && a.push(":" + r)), u(i) && a.push(i), u(o) && a.push("?" + o), u(s) && a.push("#" + s), a.join("");
    }
    function n(e) {
      return f.firstMatch(p, e);
    }
    function r(e) {
      if ("/" == e)
        return "/";
      for (var t = "/" == e[0] ? "/" : "",
          n = "/" === e[e.length - 1] ? "/" : "",
          r = e.split("/"),
          i = [],
          o = 0,
          s = 0; s < r.length; s++) {
        var a = r[s];
        switch (a) {
          case "":
          case ".":
            break;
          case "..":
            i.length > 0 ? h.removeAt(i, i.length - 1) : o++;
            break;
          default:
            i.push(a);
        }
      }
      if ("" == t) {
        for (; o-- > 0; )
          h.insert(i, 0, "..");
        0 === i.length && i.push(".");
      }
      return t + i.join("/") + n;
    }
    function i(e) {
      var n = e[g.PATH];
      return n = l(n) ? "" : r(n), e[g.PATH] = n, t(e[g.SCHEME], e[g.USER_INFO], e[g.DOMAIN], e[g.PORT], n, e[g.QUERY_DATA], e[g.FRAGMENT]);
    }
    function o(e, t) {
      var r = n(encodeURI(t)),
          o = n(e);
      if (u(r[g.SCHEME]))
        return i(r);
      r[g.SCHEME] = o[g.SCHEME];
      for (var s = g.SCHEME; s <= g.PORT; s++)
        l(r[s]) && (r[s] = o[s]);
      if ("/" == r[g.PATH][0])
        return i(r);
      var a = o[g.PATH];
      l(a) && (a = "/");
      var c = a.lastIndexOf("/");
      return a = a.substring(0, c + 1) + r[g.PATH], r[g.PATH] = a, i(r);
    }
    var s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g;
    return {
      setters: [function(e) {
        c = e.Injectable;
      }, function(e) {
        u = e.isPresent, l = e.isBlank, f = e.RegExpWrapper;
      }, function(e) {
        h = e.ListWrapper;
      }],
      execute: function() {
        s = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, a = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, d = $traceurRuntime.createClass(function() {}, {resolve: function(e, t) {
            return o(e, t);
          }}, {}), e("UrlResolver", d), e("UrlResolver", d = s([c(), a("design:paramtypes", [])], d)), p = f.create("^(?:([^:/?#.]+):)?(?://(?:([^/?#]*)@)?([\\w\\d\\-\\u0100-\\uffff.%]*)(?::([0-9]+))?)?([^?#]+)?(?:\\?([^#]*))?(?:#(.*))?$"), function(e) {
          e[e.SCHEME = 1] = "SCHEME", e[e.USER_INFO = 2] = "USER_INFO", e[e.DOMAIN = 3] = "DOMAIN", e[e.PORT = 4] = "PORT", e[e.PATH = 5] = "PATH", e[e.QUERY_DATA = 6] = "QUERY_DATA", e[e.FRAGMENT = 7] = "FRAGMENT";
        }(g || (g = {}));
      }
    };
  }), System.register("angular2/src/services/app_root_url", ["angular2/di"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i;
    return {
      setters: [function(e) {
        r = e.Injectable;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, i = $traceurRuntime.createClass(function(e) {
          this._value = e;
        }, {
          get value() {
            return this._value;
          },
          set value(e) {
            this._value = e;
          }
        }, {}), e("AppRootUrl", i), e("AppRootUrl", i = t([r(), n("design:paramtypes", [String])], i));
      }
    };
  }), System.register("angular2/src/pipes/invalid_pipe_argument_exception", ["angular2/src/facade/lang"], function(e) {
    "use strict";
    var t,
        n;
    return {
      setters: [function(e) {
        t = e.BaseException;
      }],
      execute: function() {
        n = function(e) {
          function t(e, n) {
            $traceurRuntime.superConstructor(t).call(this, "Invalid argument '" + n + "' for pipe '" + e + "'");
          }
          return $traceurRuntime.createClass(t, {}, {}, e);
        }(t), e("InvalidPipeArgumentException", n);
      }
    };
  }), System.register("angular2/src/pipes/lowercase_pipe", ["angular2/src/facade/lang", "angular2/di", "angular2/src/pipes/invalid_pipe_argument_exception", "angular2/src/core/metadata"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l;
    return {
      setters: [function(e) {
        r = e.isString, i = e.StringWrapper, o = e.CONST, s = e.isBlank;
      }, function(e) {
        a = e.Injectable;
      }, function(e) {
        c = e.InvalidPipeArgumentException;
      }, function(e) {
        u = e.Pipe;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, l = $traceurRuntime.createClass(function() {}, {transform: function(e) {
            if (void 0 !== arguments[1] ? arguments[1] : null, s(e))
              return e;
            if (!r(e))
              throw new c(l, e);
            return i.toLowerCase(e);
          }}, {}), e("LowerCasePipe", l), e("LowerCasePipe", l = t([o(), u({name: "lowercase"}), a(), n("design:paramtypes", [])], l));
      }
    };
  }), System.register("angular2/src/pipes/async_pipe", ["angular2/src/facade/lang", "angular2/src/facade/async", "angular2/di", "angular2/change_detection", "angular2/src/pipes/invalid_pipe_argument_exception", "angular2/src/core/metadata"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m;
    return {
      setters: [function(e) {
        r = e.isBlank, i = e.isPresent, o = e.isPromise;
      }, function(e) {
        s = e.ObservableWrapper;
      }, function(e) {
        a = e.Injectable;
      }, function(e) {
        c = e.WrappedValue, l = e.ChangeDetectorRef;
      }, function(e) {
        u = e.InvalidPipeArgumentException;
      }, function(e) {
        f = e.Pipe;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, h = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {
            createSubscription: function(e, t) {
              return s.subscribe(e, t, function(e) {
                throw e;
              });
            },
            dispose: function(e) {
              s.dispose(e);
            },
            onDestroy: function(e) {
              s.dispose(e);
            }
          }, {});
        }(), d = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {
            createSubscription: function(e, t) {
              return e.then(t);
            },
            dispose: function(e) {},
            onDestroy: function(e) {}
          }, {});
        }(), p = new d, g = new h, m = $traceurRuntime.createClass(function(e) {
          this._ref = e, this._latestValue = null, this._latestReturnedValue = null, this._subscription = null, this._obj = null, this._strategy = null;
        }, {
          onDestroy: function() {
            i(this._subscription) && this._dispose();
          },
          transform: function(e, t) {
            return r(this._obj) ? (i(e) && this._subscribe(e), null) : e !== this._obj ? (this._dispose(), this.transform(e)) : this._latestValue === this._latestReturnedValue ? this._latestReturnedValue : (this._latestReturnedValue = this._latestValue, c.wrap(this._latestValue));
          },
          _subscribe: function(e) {
            var t = this;
            this._obj = e, this._strategy = this._selectStrategy(e), this._subscription = this._strategy.createSubscription(e, function(n) {
              return t._updateLatestValue(e, n);
            });
          },
          _selectStrategy: function(e) {
            if (o(e))
              return p;
            if (s.isObservable(e))
              return g;
            throw new u(m, e);
          },
          _dispose: function() {
            this._strategy.dispose(this._subscription), this._latestValue = null, this._latestReturnedValue = null, this._subscription = null, this._obj = null;
          },
          _updateLatestValue: function(e, t) {
            e === this._obj && (this._latestValue = t, this._ref.requestCheck());
          }
        }, {}), e("AsyncPipe", m), e("AsyncPipe", m = t([f({name: "async"}), a(), n("design:paramtypes", [l])], m));
      }
    };
  }), System.register("angular2/src/pipes/json_pipe", ["angular2/src/facade/lang", "angular2/di", "angular2/src/core/metadata"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a;
    return {
      setters: [function(e) {
        r = e.Json, i = e.CONST;
      }, function(e) {
        o = e.Injectable;
      }, function(e) {
        s = e.Pipe;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, a = $traceurRuntime.createClass(function() {}, {transform: function(e) {
            return void 0 !== arguments[1] ? arguments[1] : null, r.stringify(e);
          }}, {}), e("JsonPipe", a), e("JsonPipe", a = t([i(), s({name: "json"}), o(), n("design:paramtypes", [])], a));
      }
    };
  }), System.register("angular2/src/facade/intl", [], function(e) {
    "use strict";
    function t(e) {
      return 2 == e ? "2-digit" : "numeric";
    }
    function n(e) {
      return 4 > e ? "short" : "long";
    }
    function r(e) {
      for (var r,
          i = {},
          o = 0; o < e.length; ) {
        for (r = o; r < e.length && e[r] == e[o]; )
          r++;
        var s = r - o;
        switch (e[o]) {
          case "G":
            i.era = n(s);
            break;
          case "y":
            i.year = t(s);
            break;
          case "M":
            i.month = s >= 3 ? n(s) : t(s);
            break;
          case "d":
            i.day = t(s);
            break;
          case "E":
            i.weekday = n(s);
            break;
          case "j":
            i.hour = t(s);
            break;
          case "h":
            i.hour = t(s), i.hour12 = !0;
            break;
          case "H":
            i.hour = t(s), i.hour12 = !1;
            break;
          case "m":
            i.minute = t(s);
            break;
          case "s":
            i.second = t(s);
            break;
          case "z":
            i.timeZoneName = "long";
            break;
          case "Z":
            i.timeZoneName = "short";
        }
        o = r;
      }
      return i;
    }
    var i,
        o,
        s,
        a;
    return {
      setters: [],
      execute: function() {
        e("NumberFormatStyle", i), function(e) {
          e[e.DECIMAL = 0] = "DECIMAL", e[e.PERCENT = 1] = "PERCENT", e[e.CURRENCY = 2] = "CURRENCY";
        }(i || e("NumberFormatStyle", i = {})), o = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {}, {format: function(e, t, n) {
              var r,
                  o,
                  s,
                  a,
                  c = void 0 !== arguments[3] ? arguments[3] : {},
                  u = void 0 === (r = c.minimumIntegerDigits) ? 1 : r,
                  l = void 0 === (o = c.minimumFractionDigits) ? 0 : o,
                  f = void 0 === (s = c.maximumFractionDigits) ? 3 : s,
                  h = c.currency,
                  d = void 0 === (a = c.currencyAsSymbol) ? !1 : a,
                  p = {
                    minimumIntegerDigits: u,
                    minimumFractionDigits: l,
                    maximumFractionDigits: f
                  };
              return p.style = i[n].toLowerCase(), n == i.CURRENCY && (p.currency = h, p.currencyDisplay = d ? "symbol" : "code"), new Intl.NumberFormat(t, p).format(e);
            }});
        }(), e("NumberFormatter", o), s = new Map, a = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {}, {format: function(e, t, n) {
              var i = t + n;
              if (s.has(i))
                return s.get(i).format(e);
              var o = new Intl.DateTimeFormat(t, r(n));
              return s.set(i, o), o.format(e);
            }});
        }(), e("DateFormatter", a);
      }
    };
  }), System.register("angular2/src/pipes/number_pipe", ["angular2/src/facade/lang", "angular2/src/facade/intl", "angular2/di", "angular2/src/facade/collection", "angular2/src/pipes/invalid_pipe_argument_exception", "angular2/src/core/metadata"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y,
        b,
        w;
    return {
      setters: [function(e) {
        r = e.isNumber, i = e.isPresent, o = e.isBlank, s = e.NumberWrapper, a = e.RegExpWrapper, c = e.BaseException, u = e.CONST;
      }, function(e) {
        l = e.NumberFormatter, f = e.NumberFormatStyle;
      }, function(e) {
        h = e.Injectable;
      }, function(e) {
        d = e.ListWrapper;
      }, function(e) {
        p = e.InvalidPipeArgumentException;
      }, function(e) {
        g = e.Pipe;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, m = "en-US", v = a.create("^(\\d+)?\\.((\\d+)(\\-(\\d+))?)?$"), _ = $traceurRuntime.createClass(function() {}, {}, {_format: function(e, t, n) {
            var u = void 0 !== arguments[3] ? arguments[3] : null,
                f = void 0 !== arguments[4] ? arguments[4] : !1;
            if (o(e))
              return null;
            if (!r(e))
              throw new p(_, e);
            var h = 1,
                d = 0,
                g = 3;
            if (i(n)) {
              var y = a.firstMatch(v, n);
              if (o(y))
                throw new c(n + " is not a valid digit info for number pipes");
              i(y[1]) && (h = s.parseIntAutoRadix(y[1])), i(y[3]) && (d = s.parseIntAutoRadix(y[3])), i(y[5]) && (g = s.parseIntAutoRadix(y[5]));
            }
            return l.format(e, m, t, {
              minimumIntegerDigits: h,
              minimumFractionDigits: d,
              maximumFractionDigits: g,
              currency: u,
              currencyAsSymbol: f
            });
          }}), e("NumberPipe", _), e("NumberPipe", _ = t([u(), h(), n("design:paramtypes", [])], _)), y = function(e) {
          function t() {
            $traceurRuntime.superConstructor(t).apply(this, arguments);
          }
          return $traceurRuntime.createClass(t, {transform: function(e, t) {
              var n = d.first(t);
              return _._format(e, f.DECIMAL, n);
            }}, {}, e);
        }(_), e("DecimalPipe", y), e("DecimalPipe", y = t([u(), g({name: "number"}), h(), n("design:paramtypes", [])], y)), b = function(e) {
          function t() {
            $traceurRuntime.superConstructor(t).apply(this, arguments);
          }
          return $traceurRuntime.createClass(t, {transform: function(e, t) {
              var n = d.first(t);
              return _._format(e, f.PERCENT, n);
            }}, {}, e);
        }(_), e("PercentPipe", b), e("PercentPipe", b = t([u(), g({name: "percent"}), h(), n("design:paramtypes", [])], b)), w = function(e) {
          function t() {
            $traceurRuntime.superConstructor(t).apply(this, arguments);
          }
          return $traceurRuntime.createClass(t, {transform: function(e, t) {
              var n = i(t) && t.length > 0 ? t[0] : "USD",
                  r = i(t) && t.length > 1 ? t[1] : !1,
                  o = i(t) && t.length > 2 ? t[2] : null;
              return _._format(e, f.CURRENCY, o, n, r);
            }}, {}, e);
        }(_), e("CurrencyPipe", w), e("CurrencyPipe", w = t([u(), g({name: "currency"}), h(), n("design:paramtypes", [])], w));
      }
    };
  }), System.register("angular2/src/facade/math", ["angular2/src/facade/lang"], function(e) {
    "use strict";
    var t,
        n,
        r;
    return {
      setters: [function(e) {
        t = e.global;
      }],
      execute: function() {
        n = t.Math, e("Math", n), r = typeof r, e("NaN", r);
      }
    };
  }), System.register("angular2/src/pipes/default_pipes", ["angular2/src/pipes/async_pipe", "angular2/src/pipes/uppercase_pipe", "angular2/src/pipes/lowercase_pipe", "angular2/src/pipes/json_pipe", "angular2/src/pipes/limit_to_pipe", "angular2/src/pipes/date_pipe", "angular2/src/pipes/number_pipe", "angular2/src/facade/lang", "angular2/di"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g;
    return {
      setters: [function(e) {
        t = e.AsyncPipe;
      }, function(e) {
        n = e.UpperCasePipe;
      }, function(e) {
        r = e.LowerCasePipe;
      }, function(e) {
        i = e.JsonPipe;
      }, function(e) {
        o = e.LimitToPipe;
      }, function(e) {
        s = e.DatePipe;
      }, function(e) {
        a = e.DecimalPipe, c = e.PercentPipe, u = e.CurrencyPipe;
      }, function(e) {
        l = e.CONST_EXPR;
      }, function(e) {
        f = e.Binding, h = e.OpaqueToken;
      }],
      execute: function() {
        d = l([t, n, r, i, o, a, c, u, s]), p = l(new h("Default Pipes")), e("DEFAULT_PIPES_TOKEN", p), g = l(new f(p, {toValue: d})), e("DEFAULT_PIPES", g);
      }
    };
  }), System.register("angular2/src/core/exception_handler", ["angular2/di", "angular2/src/facade/lang", "angular2/src/facade/collection"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u;
    return {
      setters: [function(e) {
        r = e.Injectable;
      }, function(e) {
        i = e.isPresent, o = e.isBlank, s = e.BaseException;
      }, function(e) {
        a = e.isListLikeIterable;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, c = function() {
          function e() {
            this.res = [];
          }
          return $traceurRuntime.createClass(e, {
            log: function(e) {
              this.res.push(e);
            },
            logGroup: function(e) {
              this.res.push(e);
            },
            logGroupEnd: function() {}
          }, {});
        }(), u = $traceurRuntime.createClass(function(e) {
          var t = void 0 !== arguments[1] ? arguments[1] : !0;
          this.logger = e, this.rethrowException = t;
        }, {
          call: function(e) {
            var t = void 0 !== arguments[1] ? arguments[1] : null,
                n = void 0 !== arguments[2] ? arguments[2] : null,
                r = this._findOriginalException(e),
                s = this._findOriginalStack(e),
                a = this._findContext(e);
            if (this.logger.logGroup("EXCEPTION: " + e), i(t) && o(s) && (this.logger.log("STACKTRACE:"), this.logger.log(this._longStackTrace(t))), i(n) && this.logger.log("REASON: " + n), i(r) && this.logger.log("ORIGINAL EXCEPTION: " + r), i(s) && (this.logger.log("ORIGINAL STACKTRACE:"), this.logger.log(this._longStackTrace(s))), i(a) && (this.logger.log("ERROR CONTEXT:"), this.logger.log(a)), this.logger.logGroupEnd(), this.rethrowException)
              throw e;
          },
          _longStackTrace: function(e) {
            return a(e) ? e.join("\n\n-----async gap-----\n") : e.toString();
          },
          _findContext: function(e) {
            try {
              return e instanceof s ? i(e.context) ? e.context : this._findContext(e.originalException) : null;
            } catch (t) {
              return null;
            }
          },
          _findOriginalException: function(e) {
            if (!(e instanceof s))
              return null;
            for (var t = e.originalException; t instanceof s && i(t.originalException); )
              t = t.originalException;
            return t;
          },
          _findOriginalStack: function(e) {
            if (!(e instanceof s))
              return null;
            for (var t = e,
                n = e.originalStack; t instanceof s && i(t.originalException); )
              t = t.originalException, t instanceof s && i(t.originalException) && (n = t.originalStack);
            return n;
          }
        }, {exceptionToString: function(e) {
            var t = void 0 !== arguments[1] ? arguments[1] : null,
                n = void 0 !== arguments[2] ? arguments[2] : null,
                r = new c,
                i = new u(r, !1);
            return i.call(e, t, n), r.res.join("\n");
          }}), e("ExceptionHandler", u), e("ExceptionHandler", u = t([r(), n("design:paramtypes", [Object, Boolean])], u));
      }
    };
  }), System.register("angular2/src/render/xhr", [], function(e) {
    "use strict";
    var t;
    return {
      setters: [],
      execute: function() {
        t = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {get: function(e) {
              return null;
            }}, {});
        }(), e("XHR", t);
      }
    };
  }), System.register("angular2/src/render/dom/compiler/style_url_resolver", ["angular2/di", "angular2/src/facade/lang", "angular2/src/services/url_resolver"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f;
    return {
      setters: [function(e) {
        r = e.Injectable;
      }, function(e) {
        i = e.RegExpWrapper, o = e.StringWrapper;
      }, function(e) {
        s = e.UrlResolver;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, a = $traceurRuntime.createClass(function(e) {
          this._resolver = e;
        }, {
          resolveUrls: function(e, t) {
            return e = this._replaceUrls(e, c, t), e = this._replaceUrls(e, u, t);
          },
          _replaceUrls: function(e, t, n) {
            var r = this;
            return o.replaceAllMapped(e, t, function(e) {
              var t = e[1],
                  s = e[2];
              if (i.test(f, s))
                return e[0];
              var a = o.replaceAll(s, l, ""),
                  c = e[3],
                  u = r._resolver.resolve(n, a);
              return t + "'" + u + "'" + c;
            });
          }
        }, {}), e("StyleUrlResolver", a), e("StyleUrlResolver", a = t([r(), n("design:paramtypes", [s])], a)), c = /(url\()([^)]*)(\))/g, u = /(@import[\s]+(?!url\())['"]([^'"]*)['"](.*;)/g, l = /['"]/g, f = /^['"]?data:/g;
      }
    };
  }), System.register("angular2/src/core/zone/ng_zone", ["angular2/src/facade/collection", "angular2/src/facade/lang", "angular2/src/profile/profile"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c;
    return {
      setters: [function(e) {
        t = e.ListWrapper, n = e.StringMapWrapper;
      }, function(e) {
        r = e.normalizeBlank, i = e.isPresent, o = e.global;
      }, function(e) {
        s = e.wtfLeave, a = e.wtfCreateScope;
      }],
      execute: function() {
        c = function() {
          function e(e) {
            var t = e.enableLongStackTrace;
            this._zone_run_scope = a("NgZone#run()"), this._zone_microtask = a("NgZone#microtask()"), this._inVmTurnDone = !1, this._pendingTimeouts = [], this._onTurnStart = null, this._onTurnDone = null, this._onEventDone = null, this._onErrorHandler = null, this._pendingMicrotasks = 0, this._hasExecutedCodeInInnerZone = !1, this._nestedRun = 0, o.zone ? (this._disabled = !1, this._mountZone = o.zone, this._innerZone = this._createInnerZone(this._mountZone, t)) : (this._disabled = !0, this._mountZone = null);
          }
          return $traceurRuntime.createClass(e, {
            overrideOnTurnStart: function(e) {
              this._onTurnStart = r(e);
            },
            overrideOnTurnDone: function(e) {
              this._onTurnDone = r(e);
            },
            overrideOnEventDone: function(e, t) {
              var n = this,
                  i = r(e);
              this._onEventDone = t ? function() {
                n._pendingTimeouts.length || i();
              } : i;
            },
            overrideOnErrorHandler: function(e) {
              this._onErrorHandler = r(e);
            },
            run: function(e) {
              if (!this._disabled)
                return this._innerZone.run(e);
              var t = this._zone_run_scope();
              try {
                return e();
              } finally {
                s(t);
              }
            },
            runOutsideAngular: function(e) {
              return this._disabled ? e() : this._mountZone.run(e);
            },
            _createInnerZone: function(e, r) {
              var o,
                  a = this._zone_microtask,
                  c = this;
              return o = r ? n.merge(Zone.longStackTraceZone, {onError: function(e) {
                  c._onError(this, e);
                }}) : {onError: function(e) {
                  c._onError(this, e);
                }}, e.fork(o).fork({
                $run: function(e) {
                  return function() {
                    try {
                      return c._nestedRun++, c._hasExecutedCodeInInnerZone || (c._hasExecutedCodeInInnerZone = !0, c._onTurnStart && e.call(c._innerZone, c._onTurnStart)), e.apply(this, arguments);
                    } finally {
                      if (c._nestedRun--, 0 == c._pendingMicrotasks && 0 == c._nestedRun && !this._inVmTurnDone && c._onTurnDone && c._hasExecutedCodeInInnerZone)
                        try {
                          this._inVmTurnDone = !0, e.call(c._innerZone, c._onTurnDone), 0 === c._pendingMicrotasks && i(c._onEventDone) && c.runOutsideAngular(c._onEventDone);
                        } finally {
                          this._inVmTurnDone = !1, c._hasExecutedCodeInInnerZone = !1;
                        }
                    }
                  };
                },
                $scheduleMicrotask: function(e) {
                  return function(t) {
                    c._pendingMicrotasks++;
                    var n = function() {
                      var e = a();
                      try {
                        t();
                      } finally {
                        c._pendingMicrotasks--, s(e);
                      }
                    };
                    e.call(this, n);
                  };
                },
                $setTimeout: function(e) {
                  return function(n, r) {
                    for (var i = [],
                        o = 2; o < arguments.length; o++)
                      i[o - 2] = arguments[o];
                    var s,
                        a = function() {
                          n(), t.remove(c._pendingTimeouts, s);
                        };
                    return s = e(a, r, i), c._pendingTimeouts.push(s), s;
                  };
                },
                $clearTimeout: function(e) {
                  return function(n) {
                    e(n), t.remove(c._pendingTimeouts, n);
                  };
                },
                _innerZone: !0
              });
            },
            _onError: function(e, t) {
              if (!i(this._onErrorHandler))
                throw console.log("## _onError ##"), console.log(t.stack), t;
              for (var n = [r(t.stack)]; e && e.constructedAtException; )
                n.push(e.constructedAtException.get()), e = e.parent;
              this._onErrorHandler(t, n);
            }
          }, {});
        }(), e("NgZone", c);
      }
    };
  }), System.register("angular2/src/core/life_cycle/life_cycle", ["angular2/di", "angular2/src/facade/lang", "angular2/src/profile/profile"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c;
    return {
      setters: [function(e) {
        r = e.Injectable;
      }, function(e) {
        i = e.isPresent, o = e.BaseException;
      }, function(e) {
        s = e.wtfLeave, a = e.wtfCreateScope;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, c = $traceurRuntime.createClass(function() {
          var e = void 0 !== arguments[0] ? arguments[0] : null,
              t = void 0 !== arguments[1] ? arguments[1] : !1;
          this._runningTick = !1, this._changeDetector = e, this._enforceNoNewChanges = t;
        }, {
          registerWith: function(e) {
            var t = void 0 !== arguments[1] ? arguments[1] : null,
                n = this;
            i(t) && (this._changeDetector = t), e.overrideOnTurnDone(function() {
              return n.tick();
            });
          },
          tick: function() {
            if (this._runningTick)
              throw new o("LifeCycle.tick is called recursively");
            var e = c._scope_tick();
            try {
              this._runningTick = !0, this._changeDetector.detectChanges(), this._enforceNoNewChanges && this._changeDetector.checkNoChanges();
            } finally {
              this._runningTick = !1, s(e);
            }
          }
        }, {}), e("LifeCycle", c), c._scope_tick = a("LifeCycle#tick()"), e("LifeCycle", c = t([r(), n("design:paramtypes", [Object, Boolean])], c));
      }
    };
  }), System.register("angular2/src/render/xhr_impl", ["angular2/di", "angular2/src/facade/async", "angular2/src/facade/lang", "angular2/src/render/xhr"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a;
    return {
      setters: [function(e) {
        r = e.Injectable;
      }, function(e) {
        i = e.PromiseWrapper;
      }, function(e) {
        o = e.isPresent;
      }, function(e) {
        s = e.XHR;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, a = function(e) {
          function t() {
            $traceurRuntime.superConstructor(t).apply(this, arguments);
          }
          return $traceurRuntime.createClass(t, {get: function(e) {
              var t = i.completer(),
                  n = new XMLHttpRequest;
              return n.open("GET", e, !0), n.responseType = "text", n.onload = function() {
                var r = o(n.response) ? n.response : n.responseText,
                    i = 1223 === n.status ? 204 : n.status;
                0 === i && (i = r ? 200 : 0), i >= 200 && 300 >= i ? t.resolve(r) : t.reject("Failed to load " + e, null);
              }, n.onerror = function() {
                t.reject("Failed to load " + e, null);
              }, n.send(), t.promise;
            }}, {}, e);
        }(s), e("XHRImpl", a), e("XHRImpl", a = t([r(), n("design:paramtypes", [])], a));
      }
    };
  }), System.register("angular2/src/render/dom/events/event_manager", ["angular2/src/facade/lang", "angular2/src/dom/dom_adapter"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a;
    return {
      setters: [function(e) {
        t = e.BaseException, n = e.StringWrapper;
      }, function(e) {
        r = e.DOM;
      }],
      execute: function() {
        i = "^", o = function() {
          function e(e, t) {
            this._plugins = e, this._zone = t;
            for (var n = 0; n < e.length; n++)
              e[n].manager = this;
          }
          return $traceurRuntime.createClass(e, {
            addEventListener: function(e, t, n) {
              var r = this._removeBubbleSymbol(t),
                  i = this._findPluginFor(r);
              i.addEventListener(e, r, n, r != t);
            },
            addGlobalEventListener: function(e, t, n) {
              var r = this._removeBubbleSymbol(t),
                  i = this._findPluginFor(r);
              return i.addGlobalEventListener(e, r, n, r != t);
            },
            getZone: function() {
              return this._zone;
            },
            _findPluginFor: function(e) {
              for (var n = this._plugins,
                  r = 0; r < n.length; r++) {
                var i = n[r];
                if (i.supports(e))
                  return i;
              }
              throw new t("No event manager plugin found for event " + e);
            },
            _removeBubbleSymbol: function(e) {
              return e[0] == i ? n.substring(e, 1) : e;
            }
          }, {});
        }(), e("EventManager", o), s = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {
            supports: function(e) {
              return !1;
            },
            addEventListener: function(e, t, n, r) {
              throw "not implemented";
            },
            addGlobalEventListener: function(e, t, n, r) {
              throw "not implemented";
            }
          }, {});
        }(), e("EventManagerPlugin", s), a = function(e) {
          function t() {
            $traceurRuntime.superConstructor(t).apply(this, arguments);
          }
          return $traceurRuntime.createClass(t, {
            supports: function(e) {
              return !0;
            },
            addEventListener: function(e, t, n, i) {
              var o = this._getOutsideHandler(i, e, n, this.manager._zone);
              this.manager._zone.runOutsideAngular(function() {
                r.on(e, t, o);
              });
            },
            addGlobalEventListener: function(e, t, n, i) {
              var o = r.getGlobalEventTarget(e),
                  s = this._getOutsideHandler(i, o, n, this.manager._zone);
              return this.manager._zone.runOutsideAngular(function() {
                return r.onAndCancel(o, t, s);
              });
            },
            _getOutsideHandler: function(e, n, r, i) {
              return e ? t.bubbleCallback(n, r, i) : t.sameElementCallback(n, r, i);
            }
          }, {
            sameElementCallback: function(e, t, n) {
              return function(r) {
                r.target === e && n.run(function() {
                  return t(r);
                });
              };
            },
            bubbleCallback: function(e, t, n) {
              return function(e) {
                return n.run(function() {
                  return t(e);
                });
              };
            }
          }, e);
        }(s), e("DomEventsPlugin", a);
      }
    };
  }), System.register("angular2/src/render/dom/events/key_events", ["angular2/src/dom/dom_adapter", "angular2/src/facade/lang", "angular2/src/facade/collection", "angular2/src/render/dom/events/event_manager"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u;
    return {
      setters: [function(e) {
        t = e.DOM;
      }, function(e) {
        n = e.isPresent, r = e.StringWrapper;
      }, function(e) {
        i = e.StringMapWrapper, o = e.ListWrapper;
      }, function(e) {
        s = e.EventManagerPlugin;
      }],
      execute: function() {
        a = ["alt", "control", "meta", "shift"], c = {
          alt: function(e) {
            return e.altKey;
          },
          control: function(e) {
            return e.ctrlKey;
          },
          meta: function(e) {
            return e.metaKey;
          },
          shift: function(e) {
            return e.shiftKey;
          }
        }, u = function(e) {
          function s() {
            $traceurRuntime.superConstructor(s).call(this);
          }
          return $traceurRuntime.createClass(s, {
            supports: function(e) {
              return n(s.parseEventName(e));
            },
            addEventListener: function(e, n, r, o) {
              var a = s.parseEventName(n),
                  c = s.eventCallback(e, o, i.get(a, "fullKey"), r, this.manager.getZone());
              this.manager.getZone().runOutsideAngular(function() {
                t.on(e, i.get(a, "domEventName"), c);
              });
            }
          }, {
            parseEventName: function(e) {
              var t = e.toLowerCase().split("."),
                  n = o.removeAt(t, 0);
              if (0 === t.length || !r.equals(n, "keydown") && !r.equals(n, "keyup"))
                return null;
              var c = s._normalizeKey(o.removeLast(t)),
                  u = "";
              if (o.forEach(a, function(e) {
                o.contains(t, e) && (o.remove(t, e), u += e + ".");
              }), u += c, 0 != t.length || 0 === c.length)
                return null;
              var l = i.create();
              return i.set(l, "domEventName", n), i.set(l, "fullKey", u), l;
            },
            getEventFullKey: function(e) {
              var n = "",
                  s = t.getEventKey(e);
              return s = s.toLowerCase(), r.equals(s, " ") ? s = "space" : r.equals(s, ".") && (s = "dot"), o.forEach(a, function(t) {
                if (t != s) {
                  var r = i.get(c, t);
                  r(e) && (n += t + ".");
                }
              }), n += s;
            },
            eventCallback: function(e, t, n, i, o) {
              return function(a) {
                var c = t || a.target === e;
                c && r.equals(s.getEventFullKey(a), n) && o.run(function() {
                  return i(a);
                });
              };
            },
            _normalizeKey: function(e) {
              switch (e) {
                case "esc":
                  return "escape";
                default:
                  return e;
              }
            }
          }, e);
        }(s), e("KeyEventsPlugin", u);
      }
    };
  }), System.register("angular2/src/render/dom/events/hammer_common", ["angular2/src/render/dom/events/event_manager", "angular2/src/facade/collection"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i;
    return {
      setters: [function(e) {
        t = e.EventManagerPlugin;
      }, function(e) {
        n = e.StringMapWrapper;
      }],
      execute: function() {
        r = {
          pan: !0,
          panstart: !0,
          panmove: !0,
          panend: !0,
          pancancel: !0,
          panleft: !0,
          panright: !0,
          panup: !0,
          pandown: !0,
          pinch: !0,
          pinchstart: !0,
          pinchmove: !0,
          pinchend: !0,
          pinchcancel: !0,
          pinchin: !0,
          pinchout: !0,
          press: !0,
          pressup: !0,
          rotate: !0,
          rotatestart: !0,
          rotatemove: !0,
          rotateend: !0,
          rotatecancel: !0,
          swipe: !0,
          swipeleft: !0,
          swiperight: !0,
          swipeup: !0,
          swipedown: !0,
          tap: !0
        }, i = function(e) {
          function t() {
            $traceurRuntime.superConstructor(t).call(this);
          }
          return $traceurRuntime.createClass(t, {supports: function(e) {
              return e = e.toLowerCase(), n.contains(r, e);
            }}, {}, e);
        }(t), e("HammerGesturesPluginCommon", i);
      }
    };
  }), System.register("angular2/src/services/anchor_based_app_root_url", ["angular2/src/services/app_root_url", "angular2/src/dom/dom_adapter", "angular2/di"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s;
    return {
      setters: [function(e) {
        r = e.AppRootUrl;
      }, function(e) {
        i = e.DOM;
      }, function(e) {
        o = e.Injectable;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, s = function(e) {
          function t() {
            $traceurRuntime.superConstructor(t).call(this, "");
            var e,
                n = i.createElement("a");
            i.resolveAndSetHref(n, "./", null), e = i.getHref(n), this.value = e;
          }
          return $traceurRuntime.createClass(t, {}, {}, e);
        }(r), e("AnchorBasedAppRootUrl", s), e("AnchorBasedAppRootUrl", s = t([o(), n("design:paramtypes", [])], s));
      }
    };
  }), System.register("angular2/src/core/compiler/dynamic_component_loader", ["angular2/di", "angular2/src/core/compiler/compiler", "angular2/src/core/compiler/view_manager"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a;
    return {
      setters: [function(e) {
        r = e.Injectable;
      }, function(e) {
        i = e.Compiler;
      }, function(e) {
        o = e.AppViewManager;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, s = function() {
          function e(e, t, n) {
            this._dispose = n, this.location = e, this.instance = t;
          }
          return $traceurRuntime.createClass(e, {
            get hostView() {
              return this.location.parentView;
            },
            dispose: function() {
              this._dispose();
            }
          }, {});
        }(), e("ComponentRef", s), a = $traceurRuntime.createClass(function(e, t) {
          this._compiler = e, this._viewManager = t;
        }, {
          loadAsRoot: function(e, t, n) {
            var r = this;
            return this._compiler.compileInHost(e).then(function(e) {
              var i = r._viewManager.createRootHostView(e, t, n),
                  o = r._viewManager.getHostElement(i),
                  a = r._viewManager.getComponent(o),
                  c = function() {
                    r._viewManager.destroyRootHostView(i);
                  };
              return new s(o, a, c);
            });
          },
          loadIntoLocation: function(e, t, n) {
            var r = void 0 !== arguments[3] ? arguments[3] : null;
            return this.loadNextToLocation(e, this._viewManager.getNamedElementInComponentView(t, n), r);
          },
          loadNextToLocation: function(e, t) {
            var n = void 0 !== arguments[2] ? arguments[2] : null,
                r = this;
            return this._compiler.compileInHost(e).then(function(e) {
              var i = r._viewManager.getViewContainer(t),
                  o = i.createHostView(e, i.length, n),
                  a = r._viewManager.getHostElement(o),
                  c = r._viewManager.getComponent(a),
                  u = function() {
                    var e = i.indexOf(o);
                    -1 !== e && i.remove(e);
                  };
              return new s(a, c, u);
            });
          }
        }, {}), e("DynamicComponentLoader", a), e("DynamicComponentLoader", a = t([r(), n("design:paramtypes", [i, o])], a));
      }
    };
  }), System.register("angular2/src/core/testability/get_testability", ["angular2/src/facade/lang"], function(e) {
    "use strict";
    var t,
        n,
        r;
    return {
      setters: [function(e) {
        t = e.global;
      }],
      execute: function() {
        n = function() {
          function e(e) {
            this._testability = e;
          }
          return $traceurRuntime.createClass(e, {
            whenStable: function(e) {
              this._testability.whenStable(e);
            },
            findBindings: function(e, t, n) {
              return this._testability.findBindings(e, t, n);
            }
          }, {});
        }(), r = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {}, {addToWindow: function(e) {
              t.getAngularTestability = function(t) {
                var r = void 0 !== arguments[1] ? arguments[1] : !0,
                    i = e.findTestabilityInTree(t, r);
                if (null == i)
                  throw new Error("Could not find testability for element.");
                return new n(i);
              }, t.getAllAngularTestabilities = function() {
                var t = e.getAllTestabilities();
                return t.map(function(e) {
                  return new n(e);
                });
              };
            }});
        }(), e("GetTestability", r);
      }
    };
  }), System.register("angular2/src/render/dom/dom_tokens", ["angular2/di", "angular2/src/facade/lang"], function(e) {
    "use strict";
    function t() {
      return "" + n() + n() + n();
    }
    function n() {
      return s.fromCharCode(97 + a.floor(25 * a.random()));
    }
    var r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h;
    return {
      setters: [function(e) {
        r = e.OpaqueToken, i = e.Binding;
      }, function(e) {
        o = e.CONST_EXPR, s = e.StringWrapper, a = e.Math;
      }],
      execute: function() {
        c = o(new r("DocumentToken")), e("DOCUMENT", c), u = o(new r("DomReflectPropertiesAsAttributes")), e("DOM_REFLECT_PROPERTIES_AS_ATTRIBUTES", u), l = o(new r("AppId")), e("APP_ID", l), f = o(new i(l, {
          toFactory: t,
          deps: []
        })), e("APP_ID_RANDOM_BINDING", f), h = o(new r("MaxInMemoryElementsPerTemplate")), e("MAX_IN_MEMORY_ELEMENTS_PER_TEMPLATE", h);
      }
    };
  }), System.register("angular2/src/render/dom/compiler/compile_element", ["angular2/src/facade/collection", "angular2/src/dom/dom_adapter", "angular2/src/facade/lang"], function(e) {
    "use strict";
    function t(e) {
      var t = new a,
          o = i.attributeMap(e);
      return t.add("<"), t.add(i.tagName(e).toLowerCase()), n(t, "id", o.get("id")), n(t, "class", o.get("class")), r.forEach(o, function(e, r) {
        "id" !== r && "class" !== r && n(t, r, e);
      }), t.add(">"), t.toString();
    }
    function n(e, t, n) {
      s(n) && e.add(0 === n.length ? " " + t : " " + t + '="' + n + '"');
    }
    var r,
        i,
        o,
        s,
        a,
        c,
        u;
    return {
      setters: [function(e) {
        r = e.MapWrapper;
      }, function(e) {
        i = e.DOM;
      }, function(e) {
        o = e.isBlank, s = e.isPresent, a = e.StringJoiner, c = e.assertionsEnabled;
      }],
      execute: function() {
        u = function() {
          function e(e) {
            var n = void 0 !== arguments[1] ? arguments[1] : "";
            this.element = e, this._attrs = null, this._classList = null, this.isViewRoot = !1, this.inheritedProtoView = null, this.distanceToInheritedBinder = 0, this.inheritedElementBinder = null, this.compileChildren = !0;
            var r = c() ? t(e) : null;
            "" !== n ? (this.elementDescription = n, s(r) && (this.elementDescription += ": " + r)) : this.elementDescription = r;
          }
          return $traceurRuntime.createClass(e, {
            isBound: function() {
              return s(this.inheritedElementBinder) && 0 === this.distanceToInheritedBinder;
            },
            bindElement: function() {
              if (!this.isBound()) {
                var e = this.inheritedElementBinder;
                this.inheritedElementBinder = this.inheritedProtoView.bindElement(this.element, this.elementDescription), s(e) && this.inheritedElementBinder.setParent(e, this.distanceToInheritedBinder), this.distanceToInheritedBinder = 0;
              }
              return this.inheritedElementBinder;
            },
            attrs: function() {
              return o(this._attrs) && (this._attrs = i.attributeMap(this.element)), this._attrs;
            },
            classList: function() {
              if (o(this._classList)) {
                this._classList = [];
                for (var e = i.classList(this.element),
                    t = 0; t < e.length; t++)
                  this._classList.push(e[t]);
              }
              return this._classList;
            }
          }, {});
        }(), e("CompileElement", u);
      }
    };
  }), System.register("angular2/src/render/dom/compiler/compile_control", ["angular2/src/facade/lang"], function(e) {
    "use strict";
    var t,
        n;
    return {
      setters: [function(e) {
        t = e.isBlank;
      }],
      execute: function() {
        n = function() {
          function e(e) {
            this._steps = e, this._currentStepIndex = 0, this._parent = null, this._results = null, this._additionalChildren = null;
          }
          return $traceurRuntime.createClass(e, {
            internalProcess: function(e, t, n, r) {
              this._results = e;
              var i = this._currentStepIndex,
                  o = this._parent;
              this._ignoreCurrentElement = !1;
              for (var s = t; s < this._steps.length && !this._ignoreCurrentElement; s++) {
                var a = this._steps[s];
                this._parent = n, this._currentStepIndex = s, a.processElement(n, r, this), n = this._parent;
              }
              this._ignoreCurrentElement || e.push(r), this._currentStepIndex = i, this._parent = o;
              var c = this._additionalChildren;
              return this._additionalChildren = null, c;
            },
            addParent: function(e) {
              this.internalProcess(this._results, this._currentStepIndex + 1, this._parent, e), this._parent = e;
            },
            addChild: function(e) {
              t(this._additionalChildren) && (this._additionalChildren = []), this._additionalChildren.push(e);
            },
            ignoreCurrentElement: function() {
              this._ignoreCurrentElement = !0;
            }
          }, {});
        }(), e("CompileControl", n);
      }
    };
  }), System.register("angular2/src/render/dom/view/proto_view", ["angular2/src/render/api", "angular2/src/dom/dom_adapter"], function(e) {
    "use strict";
    function t(e) {
      return e._protoView;
    }
    var n,
        r,
        i,
        o;
    return e("resolveInternalDomProtoView", t), {
      setters: [function(e) {
        n = e.RenderProtoViewRef;
      }, function(e) {
        r = e.DOM;
      }],
      execute: function() {
        i = function(e) {
          function t(e) {
            $traceurRuntime.superConstructor(t).call(this), this._protoView = e;
          }
          return $traceurRuntime.createClass(t, {}, {}, e);
        }(n), e("DomProtoViewRef", i), o = function() {
          function e(e, t, n, r, i, o, s, a, c) {
            this.type = e, this.cloneableTemplate = t, this.encapsulation = n, this.elementBinders = r, this.hostAttributes = i, this.rootTextNodeIndices = o, this.boundTextNodeCount = s, this.fragmentsRootNodeCount = a, this.isSingleElementFragment = c;
          }
          return $traceurRuntime.createClass(e, {}, {create: function(t, n, i, o, s, a, c, u) {
              for (var l = a.length,
                  f = 0; f < c.length; f++)
                l += c[f].textNodeIndices.length;
              var h = 1 === s.length && 1 === s[0] && r.isElementNode(r.firstChild(r.content(i)));
              return new e(n, t.prepareForClone(i), o, c, u, a, l, s, h);
            }});
        }(), e("DomProtoView", o);
      }
    };
  }), System.register("angular2/src/render/dom/view/element_binder", ["angular2/src/facade/lang"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i;
    return {
      setters: [function(e) {
        t = e.isPresent;
      }],
      execute: function() {
        n = function() {
          function e() {
            var e = void 0 !== arguments[0] ? arguments[0] : {},
                n = e.textNodeIndices,
                r = e.hasNestedProtoView,
                i = e.eventLocals,
                o = e.localEvents,
                s = e.globalEvents,
                a = e.hasNativeShadowRoot;
            this.textNodeIndices = n, this.hasNestedProtoView = r, this.eventLocals = i, this.localEvents = o, this.globalEvents = s, this.hasNativeShadowRoot = t(a) ? a : !1;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("DomElementBinder", n), r = function() {
          function e(e, t, n) {
            this.name = e, this.target = t, this.fullName = n;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("Event", r), i = function() {
          function e(e, t, n) {
            this.actionName = e, this.actionExpression = t, this.expression = n;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("HostAction", i);
      }
    };
  }), System.register("angular2/src/render/dom/util", ["angular2/src/facade/lang", "angular2/src/dom/dom_adapter", "angular2/src/facade/collection"], function(e) {
    "use strict";
    function t(e) {
      return l.replaceAllMapped(e, w, function(e) {
        return "-" + e[1].toLowerCase();
      });
    }
    function n(e) {
      return l.replaceAllMapped(e, C, function(e) {
        return e[1].toUpperCase();
      });
    }
    function r(e, t) {
      var n,
          r,
          i = 0;
      if (t) {
        var o = d.firstChild(e),
            s = d.hasClass(o, m);
        r = d.getElementsByClassName(o, m), n = p.createFixedSize(r.length + (s ? 1 : 0)), s && (n[i++] = o);
      } else
        r = d.querySelectorAll(e, g), n = p.createFixedSize(r.length);
      for (var a = 0; a < r.length; a++)
        n[i++] = r[a];
      return n;
    }
    function i(e, t, n) {
      var i = e.cloneContent(t.cloneableTemplate, n),
          a = r(i, t.isSingleElementFragment),
          c = s(i, t.rootTextNodeIndices, a, t.elementBinders, t.boundTextNodeCount),
          u = o(i, t.fragmentsRootNodeCount);
      return new R(t, u, a, c);
    }
    function o(e, t) {
      for (var n = p.createGrowableSize(t.length),
          r = d.firstChild(e),
          i = 0; i < n.length; i++) {
        var o = p.createFixedSize(t[i]);
        n[i] = o, i >= 1 && (r = d.nextSibling(r));
        for (var s = 0; s < o.length; s++)
          o[s] = r, r = d.nextSibling(r);
      }
      return n;
    }
    function s(e, t, n, r, i) {
      var o = p.createFixedSize(i),
          s = 0;
      if (t.length > 0)
        for (var a = d.childNodes(e),
            c = 0; c < t.length; c++)
          o[s++] = a[t[c]];
      for (var c = 0; c < r.length; c++) {
        var u = r[c],
            l = n[c];
        if (u.textNodeIndices.length > 0)
          for (var f = d.childNodes(l),
              h = 0; h < u.textNodeIndices.length; h++)
            o[s++] = f[u.textNodeIndices[h]];
      }
      return o;
    }
    function a(e, t) {
      return d.isElementNode(e) && d.tagName(e).toLowerCase() == t.toLowerCase();
    }
    function c(e, t, n) {
      for (var r = d.childNodes(e),
          i = 0; i < r.length; i++) {
        var o = r[i];
        t.has(o) && n(o, i, t.get(o));
      }
    }
    function u(e, t) {
      var n = null;
      t.forEach(function(t) {
        if (h(n)) {
          var r = d.firstChild(e);
          f(r) ? d.insertBefore(r, t) : d.appendChild(e, t);
        } else
          d.insertAfter(n, t);
        n = t;
      });
    }
    var l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y,
        b,
        w,
        C,
        R;
    return e("camelCaseToDashCase", t), e("dashCaseToCamelCase", n), e("queryBoundElements", r), e("cloneAndQueryProtoView", i), e("isElementWithTag", a), e("queryBoundTextNodeIndices", c), e("prependAll", u), {
      setters: [function(e) {
        l = e.StringWrapper, f = e.isPresent, h = e.isBlank;
      }, function(e) {
        d = e.DOM;
      }, function(e) {
        p = e.ListWrapper;
      }],
      execute: function() {
        g = ".ng-binding", e("NG_BINDING_CLASS_SELECTOR", g), m = "ng-binding", e("NG_BINDING_CLASS", m), v = ":", e("EVENT_TARGET_SEPARATOR", v), _ = "ng-content", e("NG_CONTENT_ELEMENT_NAME", _), y = "shadow-root", e("NG_SHADOW_ROOT_ELEMENT_NAME", y), b = 20, w = /([A-Z])/g, C = /-([a-z])/g, R = function() {
          function e(e, t, n, r) {
            this.original = e, this.fragments = t, this.boundElements = n, this.boundTextNodes = r;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("ClonedProtoView", R);
      }
    };
  }), System.register("angular2/src/render/dom/compiler/property_binding_parser", ["angular2/src/facade/lang", "angular2/src/facade/collection", "angular2/src/render/dom/util"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a;
    return {
      setters: [function(e) {
        t = e.isPresent, n = e.RegExpWrapper, r = e.StringWrapper;
      }, function(e) {
        i = e.MapWrapper;
      }, function(e) {
        o = e.dashCaseToCamelCase;
      }],
      execute: function() {
        s = /^(?:(?:(?:(bind-)|(var-|#)|(on-)|(onbubble-)|(bindon-))(.+))|\[\(([^\)]+)\)\]|\[([^\]]+)\]|\(([^\)]+)\))$/g, a = function() {
          function e(e) {
            this._parser = e;
          }
          return $traceurRuntime.createClass(e, {
            processStyle: function(e) {
              return e;
            },
            processElement: function(e, r, o) {
              var a = this,
                  c = r.attrs(),
                  u = new Map;
              i.forEach(c, function(e, i) {
                i = a._normalizeAttributeName(i);
                var o = n.firstMatch(s, i);
                if (t(o))
                  if (t(o[1]))
                    a._bindProperty(o[6], e, r, u);
                  else if (t(o[2])) {
                    var c = o[6],
                        l = "" == e ? "$implicit" : e;
                    a._bindVariable(c, l, r, u);
                  } else
                    t(o[3]) ? a._bindEvent(o[6], e, r, u) : t(o[4]) ? a._bindEvent("^" + o[6], e, r, u) : t(o[5]) ? (a._bindProperty(o[6], e, r, u), a._bindAssignmentEvent(o[6], e, r, u)) : t(o[7]) ? (a._bindProperty(o[7], e, r, u), a._bindAssignmentEvent(o[7], e, r, u)) : t(o[8]) ? a._bindProperty(o[8], e, r, u) : t(o[9]) && a._bindEvent(o[9], e, r, u);
                else {
                  var f = a._parser.parseInterpolation(e, r.elementDescription);
                  t(f) && a._bindPropertyAst(i, f, r, u);
                }
              }), i.forEach(u, function(e, t) {
                c.set(t, e);
              });
            },
            _normalizeAttributeName: function(e) {
              return r.startsWith(e, "data-") ? r.substring(e, 5) : e;
            },
            _bindVariable: function(e, t, n, r) {
              n.bindElement().bindVariable(o(e), t), r.set(e, t);
            },
            _bindProperty: function(e, t, n, r) {
              this._bindPropertyAst(e, this._parser.parseBinding(t, n.elementDescription), n, r);
            },
            _bindPropertyAst: function(e, t, n, r) {
              var i = n.bindElement();
              i.bindProperty(o(e), t), r.set(e, t.source);
            },
            _bindAssignmentEvent: function(e, t, n, r) {
              this._bindEvent(e, t + "=$event", n, r);
            },
            _bindEvent: function(e, t, n, r) {
              n.bindElement().bindEvent(o(e), this._parser.parseAction(t, n.elementDescription));
            }
          }, {});
        }(), e("PropertyBindingParser", a);
      }
    };
  }), System.register("angular2/src/render/dom/compiler/text_interpolation_parser", ["angular2/src/facade/lang", "angular2/src/dom/dom_adapter"], function(e) {
    "use strict";
    var t,
        n,
        r;
    return {
      setters: [function(e) {
        t = e.isPresent;
      }, function(e) {
        n = e.DOM;
      }],
      execute: function() {
        r = function() {
          function e(e) {
            this._parser = e;
          }
          return $traceurRuntime.createClass(e, {
            processStyle: function(e) {
              return e;
            },
            processElement: function(e, r, i) {
              if (r.compileChildren)
                for (var o = r.element,
                    s = n.childNodes(n.templateAwareRoot(o)),
                    a = 0; a < s.length; a++) {
                  var c = s[a];
                  if (n.isTextNode(c)) {
                    var u = c,
                        l = n.nodeValue(u),
                        f = this._parser.parseInterpolation(l, r.elementDescription);
                    t(f) && (n.setText(u, " "), r.element === r.inheritedProtoView.rootElement ? r.inheritedProtoView.bindRootText(u, f) : r.bindElement().bindText(u, f));
                  }
                }
            }
          }, {});
        }(), e("TextInterpolationParser", r);
      }
    };
  }), System.register("angular2/src/render/dom/compiler/selector", ["angular2/src/facade/collection", "angular2/src/facade/lang"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p;
    return {
      setters: [function(e) {
        t = e.Map, n = e.ListWrapper;
      }, function(e) {
        r = e.isPresent, i = e.isBlank, o = e.RegExpWrapper, s = e.RegExpMatcherWrapper, a = e.StringWrapper, c = e.BaseException;
      }],
      execute: function() {
        u = "", l = o.create("(\\:not\\()|([-\\w]+)|(?:\\.([-\\w]+))|(?:\\[([-\\w*]+)(?:=([^\\]]*))?\\])|(\\))|(\\s*,\\s*)"), f = function() {
          function e() {
            this.element = null, this.classNames = [], this.attrs = [], this.notSelectors = [];
          }
          return $traceurRuntime.createClass(e, {
            isElementSelector: function() {
              return r(this.element) && n.isEmpty(this.classNames) && n.isEmpty(this.attrs) && 0 === this.notSelectors.length;
            },
            setElement: function() {
              var e = void 0 !== arguments[0] ? arguments[0] : null;
              r(e) && (e = e.toLowerCase()), this.element = e;
            },
            getMatchingElementTemplate: function() {
              for (var e = r(this.element) ? this.element : "div",
                  t = this.classNames.length > 0 ? ' class="' + this.classNames.join(" ") + '"' : "",
                  n = "",
                  i = 0; i < this.attrs.length; i += 2) {
                var o = this.attrs[i],
                    s = "" !== this.attrs[i + 1] ? '="' + this.attrs[i + 1] + '"' : "";
                n += " " + o + s;
              }
              return "<" + e + t + n + "></" + e + ">";
            },
            addAttribute: function(e) {
              var t = void 0 !== arguments[1] ? arguments[1] : u;
              this.attrs.push(e.toLowerCase()), t = r(t) ? t.toLowerCase() : u, this.attrs.push(t);
            },
            addClassName: function(e) {
              this.classNames.push(e.toLowerCase());
            },
            toString: function() {
              var e = "";
              if (r(this.element) && (e += this.element), r(this.classNames))
                for (var t = 0; t < this.classNames.length; t++)
                  e += "." + this.classNames[t];
              if (r(this.attrs))
                for (var t = 0; t < this.attrs.length; ) {
                  var i = this.attrs[t++],
                      o = this.attrs[t++];
                  e += "[" + i, o.length > 0 && (e += "=" + o), e += "]";
                }
              return n.forEach(this.notSelectors, function(t) {
                e += ":not(" + t.toString() + ")";
              }), e;
            }
          }, {parse: function(t) {
              for (var a,
                  u = [],
                  f = function(e, t) {
                    t.notSelectors.length > 0 && i(t.element) && n.isEmpty(t.classNames) && n.isEmpty(t.attrs) && (t.element = "*"), e.push(t);
                  },
                  h = new e,
                  d = o.matcher(l, t),
                  p = h,
                  g = !1; r(a = s.next(d)); ) {
                if (r(a[1])) {
                  if (g)
                    throw new c("Nesting :not is not allowed in a selector");
                  g = !0, p = new e, h.notSelectors.push(p);
                }
                if (r(a[2]) && p.setElement(a[2]), r(a[3]) && p.addClassName(a[3]), r(a[4]) && p.addAttribute(a[4], a[5]), r(a[6]) && (g = !1, p = h), r(a[7])) {
                  if (g)
                    throw new c("Multiple selectors in :not are not supported");
                  f(u, h), h = p = new e;
                }
              }
              return f(u, h), u;
            }});
        }(), e("CssSelector", f), h = function() {
          function e() {
            this._elementMap = new t, this._elementPartialMap = new t, this._classMap = new t, this._classPartialMap = new t, this._attrValueMap = new t, this._attrValuePartialMap = new t, this._listContexts = [];
          }
          return $traceurRuntime.createClass(e, {
            addSelectables: function(e, t) {
              var n = null;
              e.length > 1 && (n = new d(e), this._listContexts.push(n));
              for (var r = 0; r < e.length; r++)
                this._addSelectable(e[r], t, n);
            },
            _addSelectable: function(e, n, o) {
              var s = this,
                  a = e.element,
                  c = e.classNames,
                  u = e.attrs,
                  l = new p(e, n, o);
              if (r(a)) {
                var f = 0 === u.length && 0 === c.length;
                f ? this._addTerminal(s._elementMap, a, l) : s = this._addPartial(s._elementPartialMap, a);
              }
              if (r(c))
                for (var h = 0; h < c.length; h++) {
                  var f = 0 === u.length && h === c.length - 1,
                      d = c[h];
                  f ? this._addTerminal(s._classMap, d, l) : s = this._addPartial(s._classPartialMap, d);
                }
              if (r(u))
                for (var h = 0; h < u.length; ) {
                  var f = h === u.length - 2,
                      g = u[h++],
                      m = u[h++];
                  if (f) {
                    var v = s._attrValueMap,
                        _ = v.get(g);
                    i(_) && (_ = new t, v.set(g, _)), this._addTerminal(_, m, l);
                  } else {
                    var y = s._attrValuePartialMap,
                        b = y.get(g);
                    i(b) && (b = new t, y.set(g, b)), s = this._addPartial(b, m);
                  }
                }
            },
            _addTerminal: function(e, t, n) {
              var r = e.get(t);
              i(r) && (r = [], e.set(t, r)), r.push(n);
            },
            _addPartial: function(t, n) {
              var r = t.get(n);
              return i(r) && (r = new e, t.set(n, r)), r;
            },
            match: function(e, t) {
              for (var n = !1,
                  i = e.element,
                  o = e.classNames,
                  s = e.attrs,
                  c = 0; c < this._listContexts.length; c++)
                this._listContexts[c].alreadyMatched = !1;
              if (n = this._matchTerminal(this._elementMap, i, e, t) || n, n = this._matchPartial(this._elementPartialMap, i, e, t) || n, r(o))
                for (var l = 0; l < o.length; l++) {
                  var f = o[l];
                  n = this._matchTerminal(this._classMap, f, e, t) || n, n = this._matchPartial(this._classPartialMap, f, e, t) || n;
                }
              if (r(s))
                for (var l = 0; l < s.length; ) {
                  var h = s[l++],
                      d = s[l++],
                      p = this._attrValueMap.get(h);
                  a.equals(d, u) || (n = this._matchTerminal(p, u, e, t) || n), n = this._matchTerminal(p, d, e, t) || n;
                  var g = this._attrValuePartialMap.get(h);
                  a.equals(d, u) || (n = this._matchPartial(g, u, e, t) || n), n = this._matchPartial(g, d, e, t) || n;
                }
              return n;
            },
            _matchTerminal: function(e, t, o, s) {
              if (i(e) || i(t))
                return !1;
              var a = e.get(t),
                  c = e.get("*");
              if (r(c) && (a = n.concat(a, c)), i(a))
                return !1;
              for (var u,
                  l = !1,
                  f = 0; f < a.length; f++)
                u = a[f], l = u.finalize(o, s) || l;
              return l;
            },
            _matchPartial: function(e, t, n, r) {
              if (i(e) || i(t))
                return !1;
              var o = e.get(t);
              return i(o) ? !1 : o.match(n, r);
            }
          }, {createNotMatcher: function(t) {
              var n = new e;
              return n.addSelectables(t, null), n;
            }});
        }(), e("SelectorMatcher", h), d = function() {
          function e(e) {
            this.selectors = e, this.alreadyMatched = !1;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("SelectorListContext", d), p = function() {
          function e(e, t, n) {
            this.selector = e, this.cbContext = t, this.listContext = n, this.notSelectors = e.notSelectors;
          }
          return $traceurRuntime.createClass(e, {finalize: function(e, t) {
              var n = !0;
              if (this.notSelectors.length > 0 && (i(this.listContext) || !this.listContext.alreadyMatched)) {
                var o = h.createNotMatcher(this.notSelectors);
                n = !o.match(e, null);
              }
              return n && r(t) && (i(this.listContext) || !this.listContext.alreadyMatched) && (r(this.listContext) && (this.listContext.alreadyMatched = !0), t(this.selector, this.cbContext)), n;
            }}, {});
        }(), e("SelectorContext", p);
      }
    };
  }), System.register("angular2/src/render/dom/compiler/view_splitter", ["angular2/src/facade/lang", "angular2/src/dom/dom_adapter", "angular2/src/facade/collection", "angular2/src/render/dom/compiler/compile_element", "angular2/src/render/dom/util"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c;
    return {
      setters: [function(e) {
        t = e.isPresent, n = e.BaseException, r = e.StringWrapper;
      }, function(e) {
        i = e.DOM;
      }, function(e) {
        o = e.MapWrapper;
      }, function(e) {
        s = e.CompileElement;
      }, function(e) {
        a = e.dashCaseToCamelCase;
      }],
      execute: function() {
        c = function() {
          function e(e) {
            this._parser = e;
          }
          return $traceurRuntime.createClass(e, {
            processStyle: function(e) {
              return e;
            },
            processElement: function(e, a, c) {
              var u = a.attrs(),
                  l = u.get("template"),
                  f = t(l);
              if (o.forEach(u, function(e, t) {
                if (r.startsWith(t, "*")) {
                  var i = r.substring(t, 1);
                  if (f)
                    throw new n("Only one template directive per element is allowed: " + (l + " and " + i + " cannot be used simultaneously ") + ("in " + a.elementDescription));
                  l = 0 == e.length ? i : i + " " + e, f = !0;
                }
              }), t(e)) {
                if (i.isTemplateElement(a.element) && !a.isViewRoot) {
                  var h = new s(i.createTemplate(""));
                  h.inheritedProtoView = a.bindElement().bindNestedProtoView(h.element), h.elementDescription = a.elementDescription, h.isViewRoot = !0, this._moveChildNodes(i.content(a.element), i.content(h.element)), c.addChild(h);
                }
                if (f) {
                  var d = new s(i.createTemplate(""));
                  d.inheritedProtoView = a.inheritedProtoView, d.inheritedElementBinder = a.inheritedElementBinder, d.distanceToInheritedBinder = a.distanceToInheritedBinder, d.elementDescription = a.elementDescription;
                  var h = new s(i.createTemplate(""));
                  h.inheritedProtoView = d.bindElement().bindNestedProtoView(h.element), h.elementDescription = a.elementDescription, h.isViewRoot = !0, a.inheritedProtoView = h.inheritedProtoView, a.inheritedElementBinder = null, a.distanceToInheritedBinder = 0, this._parseTemplateBindings(l, d), i.insertBefore(a.element, d.element), c.addParent(d), i.appendChild(i.content(h.element), a.element), c.addParent(h);
                }
              }
            },
            _moveChildNodes: function(e, n) {
              for (var r = i.firstChild(e); t(r); )
                i.appendChild(n, r), r = i.firstChild(e);
            },
            _parseTemplateBindings: function(e, n) {
              for (var r = this._parser.parseTemplateBindings(e, n.elementDescription),
                  o = 0; o < r.length; o++) {
                var s = r[o];
                s.keyIsVar ? (n.bindElement().bindVariable(a(s.key), s.name), n.attrs().set(s.key, s.name)) : t(s.expression) ? (n.bindElement().bindProperty(a(s.key), s.expression), n.attrs().set(s.key, s.expression.source)) : i.setAttribute(n.element, s.key, "");
              }
            }
          }, {});
        }(), e("ViewSplitter", c);
      }
    };
  }), System.register("angular2/src/render/dom/compiler/shadow_css", ["angular2/src/dom/dom_adapter", "angular2/src/facade/collection", "angular2/src/facade/lang"], function(e) {
    "use strict";
    function t(e) {
      return r.cssToRules(e);
    }
    function n(e, n) {
      if (!u(n)) {
        var r = t(e);
        n(r);
      }
    }
    var r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y,
        b,
        w,
        C,
        R,
        E;
    return {
      setters: [function(e) {
        r = e.DOM;
      }, function(e) {
        i = e.ListWrapper;
      }, function(e) {
        o = e.StringWrapper, s = e.RegExpWrapper, a = e.RegExpMatcherWrapper, c = e.isPresent, u = e.isBlank;
      }],
      execute: function() {
        l = function() {
          function e() {
            this.strictStyling = !0;
          }
          return $traceurRuntime.createClass(e, {
            shimStyle: function(e, t) {
              var n = void 0 !== arguments[2] ? arguments[2] : "",
                  i = r.getText(e);
              return this.shimCssText(i, t, n);
            },
            shimCssText: function(e, t) {
              var n = void 0 !== arguments[2] ? arguments[2] : "";
              return e = this._insertDirectives(e), this._scopeCssText(e, t, n);
            },
            _insertDirectives: function(e) {
              return e = this._insertPolyfillDirectivesInCssText(e), this._insertPolyfillRulesInCssText(e);
            },
            _insertPolyfillDirectivesInCssText: function(e) {
              return o.replaceAllMapped(e, f, function(e) {
                return e[1] + "{";
              });
            },
            _insertPolyfillRulesInCssText: function(e) {
              return o.replaceAllMapped(e, h, function(e) {
                var t = e[0];
                return t = o.replace(t, e[1], ""), t = o.replace(t, e[2], ""), e[3] + t;
              });
            },
            _scopeCssText: function(e, t, r) {
              var i = this,
                  o = this._extractUnscopedRulesFromCssText(e);
              return e = this._insertPolyfillHostInCssText(e), e = this._convertColonHost(e), e = this._convertColonHostContext(e), e = this._convertShadowDOMSelectors(e), c(t) && n(e, function(n) {
                e = i._scopeRules(n, t, r);
              }), e = e + "\n" + o, e.trim();
            },
            _extractUnscopedRulesFromCssText: function(e) {
              for (var t,
                  n = "",
                  r = s.matcher(d, e); c(t = a.next(r)); ) {
                var i = t[0];
                i = o.replace(i, t[2], ""), i = o.replace(i, t[1], t[3]), n += i + "\n\n";
              }
              return n;
            },
            _convertColonHost: function(e) {
              return this._convertColonRule(e, v, this._colonHostPartReplacer);
            },
            _convertColonHostContext: function(e) {
              return this._convertColonRule(e, _, this._colonHostContextPartReplacer);
            },
            _convertColonRule: function(e, t, n) {
              return o.replaceAllMapped(e, t, function(e) {
                if (c(e[2])) {
                  for (var t = e[2].split(","),
                      r = [],
                      i = 0; i < t.length; i++) {
                    var o = t[i];
                    if (u(o))
                      break;
                    o = o.trim(), r.push(n(y, o, e[3]));
                  }
                  return r.join(",");
                }
                return y + e[3];
              });
            },
            _colonHostContextPartReplacer: function(e, t, n) {
              return o.contains(t, p) ? this._colonHostPartReplacer(e, t, n) : e + t + n + ", " + t + " " + e + n;
            },
            _colonHostPartReplacer: function(e, t, n) {
              return e + o.replace(t, p, "") + n;
            },
            _convertShadowDOMSelectors: function(e) {
              for (var t = 0; t < b.length; t++)
                e = o.replaceAll(e, b[t], " ");
              return e;
            },
            _scopeRules: function(e, t, n) {
              var i = "";
              if (c(e))
                for (var o = 0; o < e.length; o++) {
                  var s = e[o];
                  if (r.isStyleRule(s) || r.isPageRule(s))
                    i += this._scopeSelector(s.selectorText, t, n, this.strictStyling) + " {\n", i += this._propertiesFromRule(s) + "\n}\n\n";
                  else if (r.isMediaRule(s))
                    i += "@media " + s.media.mediaText + " {\n", i += this._scopeRules(s.cssRules, t, n), i += "\n}\n\n";
                  else
                    try {
                      c(s.cssText) && (i += s.cssText + "\n\n");
                    } catch (a) {
                      r.isKeyframesRule(s) && c(s.cssRules) && (i += this._ieSafeCssTextFromKeyFrameRule(s));
                    }
                }
              return i;
            },
            _ieSafeCssTextFromKeyFrameRule: function(e) {
              for (var t = "@keyframes " + e.name + " {",
                  n = 0; n < e.cssRules.length; n++) {
                var r = e.cssRules[n];
                t += " " + r.keyText + " {" + r.style.cssText + "}";
              }
              return t += " }";
            },
            _scopeSelector: function(e, t, n, r) {
              for (var i = [],
                  s = e.split(","),
                  a = 0; a < s.length; a++) {
                var c = s[a];
                c = c.trim(), this._selectorNeedsScoping(c, t) && (c = r && !o.contains(c, y) ? this._applyStrictSelectorScope(c, t) : this._applySelectorScope(c, t, n)), i.push(c);
              }
              return i.join(", ");
            },
            _selectorNeedsScoping: function(e, t) {
              var n = this._makeScopeMatcher(t);
              return !c(s.firstMatch(n, e));
            },
            _makeScopeMatcher: function(e) {
              var t = /\[/g,
                  n = /\]/g;
              return e = o.replaceAll(e, t, "\\["), e = o.replaceAll(e, n, "\\]"), s.create("^(" + e + ")" + w, "m");
            },
            _applySelectorScope: function(e, t, n) {
              return this._applySimpleSelectorScope(e, t, n);
            },
            _applySimpleSelectorScope: function(e, t, n) {
              if (c(s.firstMatch(C, e))) {
                var r = this.strictStyling ? "[" + n + "]" : t;
                return e = o.replace(e, y, r), o.replaceAll(e, C, r + " ");
              }
              return t + " " + e;
            },
            _applyStrictSelectorScope: function(e, t) {
              var n = /\[is=([^\]]*)\]/g;
              t = o.replaceAllMapped(t, n, function(e) {
                return e[1];
              });
              for (var r = [" ", ">", "+", "~"],
                  a = e,
                  u = "[" + t + "]",
                  l = 0; l < r.length; l++) {
                var f = r[l],
                    h = a.split(f);
                a = i.map(h, function(e) {
                  var t = o.replaceAll(e.trim(), C, "");
                  if (t.length > 0 && !i.contains(r, t) && !o.contains(t, u)) {
                    var n = /([^:]*)(:*)(.*)/g,
                        a = s.firstMatch(n, t);
                    c(a) && (e = a[1] + u + a[2] + a[3]);
                  }
                  return e;
                }).join(f);
              }
              return a;
            },
            _insertPolyfillHostInCssText: function(e) {
              return e = o.replaceAll(e, E, g), e = o.replaceAll(e, R, p);
            },
            _propertiesFromRule: function(e) {
              var t = e.style.cssText,
                  n = /['"]+|attr/g;
              if (e.style.content.length > 0 && !c(s.firstMatch(n, e.style.content))) {
                var r = /content:[^;]*;/g;
                t = o.replaceAll(t, r, "content: '" + e.style.content + "';");
              }
              return t;
            }
          }, {});
        }(), e("ShadowCss", l), f = /polyfill-next-selector[^}]*content:[\s]*?['"](.*?)['"][;\s]*}([^{]*?){/gim, h = /(polyfill-rule)[^}]*(content:[\s]*['"](.*?)['"])[;\s]*[^}]*}/gim, d = /(polyfill-unscoped-rule)[^}]*(content:[\s]*['"](.*?)['"])[;\s]*[^}]*}/gim, p = "-shadowcsshost", g = "-shadowcsscontext", m = ")(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))?([^,{]*)", v = s.create("(" + p + m, "im"), _ = s.create("(" + g + m, "im"), y = p + "-no-combinator", b = [/>>>/g, /::shadow/g, /::content/g, /\/deep\//g, /\/shadow-deep\//g, /\/shadow\//g], w = "([>\\s~+[.,{:][\\s\\S]*)?$", C = s.create(p, "im"), R = /:host/gim, E = /:host-context/gim;
      }
    };
  }), System.register("angular2/src/render/dom/schema/element_schema_registry", [], function(e) {
    "use strict";
    var t;
    return {
      setters: [],
      execute: function() {
        t = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {
            hasProperty: function(e, t) {
              return !0;
            },
            getMappedPropName: function(e) {
              return e;
            }
          }, {});
        }(), e("ElementSchemaRegistry", t);
      }
    };
  }), System.register("angular2/src/render/dom/view/proto_view_merger", ["angular2/src/dom/dom_adapter", "angular2/src/facade/lang", "angular2/src/facade/collection", "angular2/src/render/dom/view/proto_view", "angular2/src/render/dom/view/element_binder", "angular2/src/render/api", "angular2/src/render/dom/util"], function(e) {
    "use strict";
    function t(e, t) {
      var s = [],
          c = [];
      n(e, t, s, c);
      var u = s[0];
      o(s, c);
      var l = [],
          f = new Set;
      a(s, c, l, f), r(s);
      var h = l.map(function(e) {
        return e.length;
      }),
          d = m(l),
          p = S.content(d),
          g = W(p, !1),
          y = new Map,
          b = i(s),
          x = v(p, b, y),
          D = _(s, g, f, b, y),
          I = w(s, g),
          P = C(s, y),
          A = R(s, c),
          O = E(c),
          T = j.create(e, u.original.type, d, u.original.encapsulation, h, x, D, new Map);
      return new M(new N(T), h.length, I, g.length, P, A, O);
    }
    function n(e, t, r, i) {
      var o = V(t[0]),
          s = r.length;
      r.push(H(e, o, !1)), 0 === i.length && i.push([null, null]);
      for (var a = 1,
          c = 0; c < o.elementBinders.length; c++) {
        var u = o.elementBinders[c];
        if (u.hasNestedProtoView) {
          var l = t[a++];
          D(l) && (i.push([s, c]), P(l) ? n(e, l, r, i) : r.push(H(e, V(l), !1)));
        }
      }
    }
    function r(e) {
      e.forEach(function(e) {
        e.boundTextNodes.forEach(function(e) {
          var t = e.parentNode;
          D(t) && S.isElementNode(t) && S.addClass(t, F);
        });
      });
    }
    function i(e) {
      for (var t = new Map,
          n = 0; n < e.length; n++) {
        var r = e[n];
        r.boundTextNodes.forEach(function(e) {
          t.set(e, null);
        });
      }
      return t;
    }
    function o(e, t) {
      for (var n = s(e, t),
          r = 1; r < e.length; r++) {
        var i = e[r];
        if (i.original.type === B.EMBEDDED) {
          var o = n[r],
              a = e[o];
          i.fragments.forEach(function(e) {
            return a.fragments.push(e);
          });
        }
      }
    }
    function s(e, t) {
      var n = A.createFixedSize(e.length);
      n[0] = null;
      for (var r = 1; r < t.length; r++) {
        var i = t[r][0],
            o = e[i];
        n[r] = 0 === i || o.original.type === B.COMPONENT ? i : n[i];
      }
      return n;
    }
    function a(e, t, n, r) {
      var i = e[0];
      i.fragments.forEach(function(e) {
        return n.push(e);
      });
      for (var o = 1; o < e.length; o++) {
        var s = t[o][0],
            a = t[o][1],
            i = e[s],
            u = e[o];
        u.original.type === B.COMPONENT && c(i, a, u, n, r);
      }
    }
    function c(e, t, n, r, i) {
      for (var o = e.boundElements[t],
          s = u(n.fragments),
          a = f(s),
          c = S.childNodesAsList(o),
          p = 0; p < a.length; p++) {
        var g = a[p],
            m = S.getAttribute(g, "select");
        c = d(m, g, c);
      }
      var v = l(s),
          _ = n.original.encapsulation === L.NATIVE;
      _ && i.add(o), T.forEach(n.original.hostAttributes, function(e, t) {
        S.setAttribute(o, t, e);
      }), h(e, t, v[0], _);
      for (var p = 1; p < v.length; p++)
        r.push(v[p]);
    }
    function u(e) {
      return e.map(function(e) {
        var t = S.createTemplate("");
        return e.forEach(function(e) {
          return S.appendChild(S.content(t), e);
        }), t;
      });
    }
    function l(e) {
      return e.map(function(e) {
        return S.childNodesAsList(S.content(e));
      });
    }
    function f(e) {
      var t = [];
      return e.forEach(function(e) {
        for (var n = S.querySelectorAll(S.content(e), $),
            r = 0; r < n.length; r++)
          t.push(n[r]);
      }), g(t);
    }
    function h(e, t, n, r) {
      var i = e.boundElements[t];
      if (r) {
        for (var o = S.createElement(q),
            s = 0; s < n.length; s++)
          S.appendChild(o, n[s]);
        var a = S.firstChild(i);
        D(a) ? S.insertBefore(a, o) : S.appendChild(i, o);
      } else {
        S.clearNodes(i);
        for (var s = 0; s < n.length; s++)
          S.appendChild(i, n[s]);
      }
    }
    function d(e, t, n) {
      var r = [];
      S.insertBefore(t, S.createComment("["));
      for (var i = 0; i < n.length; i++) {
        var o = n[i],
            s = !1;
        p(e) ? s = !0 : S.isElementNode(o) && S.elementMatches(o, e) && (s = !0), s ? S.insertBefore(t, o) : r.push(o);
      }
      return S.insertBefore(t, S.createComment("]")), S.remove(t), r;
    }
    function p(e) {
      return I(e) || 0 === e.length || "*" == e;
    }
    function g(e) {
      var t = null,
          n = [];
      return e.forEach(function(e) {
        var r = S.getAttribute(e, "select");
        p(r) ? I(t) && (t = e) : n.push(e);
      }), D(t) && n.push(t), n;
    }
    function m(e) {
      for (var t = S.createTemplate(""),
          n = S.content(t),
          r = 0; r < e.length; r++) {
        var i = e[r];
        r >= 1 && S.appendChild(n, S.createComment("|")), i.forEach(function(e) {
          S.appendChild(n, e);
        });
      }
      return t;
    }
    function v(e, t, n) {
      var r = [];
      return U(e, t, function(e, t, i) {
        r.push(t), n.set(e, n.size);
      }), r;
    }
    function _(e, t, n, r, i) {
      for (var o = y(e),
          s = [],
          a = 0; a < t.length; a++) {
        var c = t[a],
            u = [];
        U(c, r, function(e, t, n) {
          u.push(t), i.set(e, i.size);
        }), s.push(b(o.get(c), u, O.has(n, c)));
      }
      return s;
    }
    function y(e) {
      var t = new Map;
      return e.forEach(function(e) {
        for (var n = 0; n < e.boundElements.length; n++) {
          var r = e.boundElements[n];
          D(r) && t.set(r, e.original.elementBinders[n]);
        }
      }), t;
    }
    function b(e, t, n) {
      var r;
      return r = new k(I(e) ? {
        textNodeIndices: t,
        hasNestedProtoView: !1,
        eventLocals: null,
        localEvents: [],
        globalEvents: [],
        hasNativeShadowRoot: !1
      } : {
        textNodeIndices: t,
        hasNestedProtoView: !1,
        eventLocals: e.eventLocals,
        localEvents: e.localEvents,
        globalEvents: e.globalEvents,
        hasNativeShadowRoot: n
      });
    }
    function w(e, t) {
      var n = x(t),
          r = [];
      return e.forEach(function(e) {
        e.boundElements.forEach(function(e) {
          var t = n.get(e);
          r.push(t);
        });
      }), r;
    }
    function C(e, t) {
      var n = [];
      return e.forEach(function(e) {
        e.boundTextNodes.forEach(function(e) {
          var r = t.get(e);
          n.push(r);
        });
      }), n;
    }
    function R(e, t) {
      for (var n = [null],
          r = [0],
          i = e[0].original.elementBinders.length,
          o = 1; o < t.length; o++) {
        r.push(i), i += e[o].original.elementBinders.length;
        var s = t[o][0],
            a = t[o][1];
        n.push(r[s] + a);
      }
      return n;
    }
    function E(e) {
      var t = A.createFixedSize(e.length);
      A.fill(t, 0);
      for (var n = e.length - 1; n >= 1; n--) {
        var r = e[n];
        D(r) && (t[r[0]] += t[n] + 1);
      }
      return t;
    }
    function x(e) {
      for (var t = new Map,
          n = 0; n < e.length; n++)
        t.set(e[n], n);
      return t;
    }
    var S,
        D,
        I,
        P,
        A,
        O,
        T,
        j,
        N,
        V,
        k,
        M,
        B,
        L,
        F,
        $,
        H,
        W,
        U,
        q;
    return e("mergeProtoViewsRecursively", t), {
      setters: [function(e) {
        S = e.DOM;
      }, function(e) {
        D = e.isPresent, I = e.isBlank, P = e.isArray;
      }, function(e) {
        A = e.ListWrapper, O = e.SetWrapper, T = e.MapWrapper;
      }, function(e) {
        j = e.DomProtoView, N = e.DomProtoViewRef, V = e.resolveInternalDomProtoView;
      }, function(e) {
        k = e.DomElementBinder;
      }, function(e) {
        M = e.RenderProtoViewMergeMapping, B = e.ViewType, L = e.ViewEncapsulation;
      }, function(e) {
        F = e.NG_BINDING_CLASS, $ = e.NG_CONTENT_ELEMENT_NAME, H = e.cloneAndQueryProtoView, W = e.queryBoundElements, U = e.queryBoundTextNodeIndices, q = e.NG_SHADOW_ROOT_ELEMENT_NAME;
      }],
      execute: function() {}
    };
  }), System.register("angular2/src/render/dom/template_cloner", ["angular2/src/facade/lang", "angular2/di", "angular2/src/dom/dom_adapter", "angular2/src/render/dom/dom_tokens"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u;
    return {
      setters: [function(e) {
        i = e.isString;
      }, function(e) {
        o = e.Injectable, s = e.Inject;
      }, function(e) {
        a = e.DOM;
      }, function(e) {
        c = e.MAX_IN_MEMORY_ELEMENTS_PER_TEMPLATE;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, r = this && this.__param || function(e, t) {
          return function(n, r) {
            t(n, r, e);
          };
        }, u = $traceurRuntime.createClass(function(e) {
          this.maxInMemoryElementsPerTemplate = e;
        }, {
          prepareForClone: function(e) {
            var t = a.querySelectorAll(a.content(e), "*").length;
            return this.maxInMemoryElementsPerTemplate >= 0 && t >= this.maxInMemoryElementsPerTemplate ? a.getInnerHTML(e) : e;
          },
          cloneContent: function(e, t) {
            var n;
            return i(e) ? (n = a.content(a.createTemplate(e)), t && (n = a.importIntoDoc(n))) : (n = a.content(e), n = t ? a.importIntoDoc(n) : a.clone(n)), n;
          }
        }, {}), e("TemplateCloner", u), e("TemplateCloner", u = t([o(), r(0, s(c)), n("design:paramtypes", [Object])], u));
      }
    };
  }), System.register("angular2/src/render/dom/view/view", ["angular2/src/dom/dom_adapter", "angular2/src/facade/collection", "angular2/src/facade/lang", "angular2/src/render/api", "angular2/src/render/dom/util"], function(e) {
    "use strict";
    function t(e) {
      return e._view;
    }
    var n,
        r,
        i,
        o,
        s,
        a,
        c,
        u;
    return e("resolveInternalDomView", t), {
      setters: [function(e) {
        n = e.DOM;
      }, function(e) {
        r = e.Map;
      }, function(e) {
        i = e.isPresent, o = e.stringify;
      }, function(e) {
        s = e.RenderViewRef;
      }, function(e) {
        a = e.camelCaseToDashCase;
      }],
      execute: function() {
        c = function(e) {
          function t(e) {
            $traceurRuntime.superConstructor(t).call(this), this._view = e;
          }
          return $traceurRuntime.createClass(t, {}, {}, e);
        }(s), e("DomViewRef", c), u = function() {
          function e(e, t, n) {
            this.proto = e, this.boundTextNodes = t, this.boundElements = n, this.hydrated = !1, this.eventDispatcher = null, this.eventHandlerRemovers = [];
          }
          return $traceurRuntime.createClass(e, {
            setElementProperty: function(e, t, r) {
              n.setProperty(this.boundElements[e], t, r);
            },
            setElementAttribute: function(e, t, r) {
              var s = this.boundElements[e],
                  c = a(t);
              i(r) ? n.setAttribute(s, c, o(r)) : n.removeAttribute(s, c);
            },
            setElementClass: function(e, t, r) {
              var i = this.boundElements[e];
              r ? n.addClass(i, t) : n.removeClass(i, t);
            },
            setElementStyle: function(e, t, r) {
              var s = this.boundElements[e],
                  c = a(t);
              i(r) ? n.setStyle(s, c, o(r)) : n.removeStyle(s, c);
            },
            invokeElementMethod: function(e, t, r) {
              var i = this.boundElements[e];
              n.invoke(i, t, r);
            },
            setText: function(e, t) {
              n.setText(this.boundTextNodes[e], t);
            },
            dispatchEvent: function(e, t, o) {
              var s = !0;
              if (i(this.eventDispatcher)) {
                var a = new r;
                a.set("$event", o), s = this.eventDispatcher.dispatchRenderEvent(e, t, a), s || n.preventDefault(o);
              }
              return s;
            }
          }, {});
        }(), e("DomView", u);
      }
    };
  }), System.register("angular2/src/render/dom/view/fragment", ["angular2/src/render/api"], function(e) {
    "use strict";
    function t(e) {
      return e._nodes;
    }
    var n,
        r;
    return e("resolveInternalDomFragment", t), {
      setters: [function(e) {
        n = e.RenderFragmentRef;
      }],
      execute: function() {
        r = function(e) {
          function t(e) {
            $traceurRuntime.superConstructor(t).call(this), this._nodes = e;
          }
          return $traceurRuntime.createClass(t, {}, {}, e);
        }(n), e("DomFragmentRef", r);
      }
    };
  }), System.register("angular2/src/render/dom/schema/dom_element_schema_registry", ["angular2/src/facade/lang", "angular2/src/facade/collection", "angular2/src/dom/dom_adapter", "angular2/src/render/dom/schema/element_schema_registry"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o;
    return {
      setters: [function(e) {
        t = e.isPresent;
      }, function(e) {
        n = e.StringMapWrapper;
      }, function(e) {
        r = e.DOM;
      }, function(e) {
        i = e.ElementSchemaRegistry;
      }],
      execute: function() {
        o = function(e) {
          function i() {
            $traceurRuntime.superConstructor(i).apply(this, arguments);
          }
          return $traceurRuntime.createClass(i, {
            hasProperty: function(e, t) {
              var n = r.tagName(e);
              return -1 !== n.indexOf("-") ? !0 : r.hasProperty(e, t);
            },
            getMappedPropName: function(e) {
              var i = n.get(r.attrToPropMap, e);
              return t(i) ? i : e;
            }
          }, {}, e);
        }(i), e("DomElementSchemaRegistry", o);
      }
    };
  }), System.register("angular2/src/profile/wtf_init", [], function(e) {
    "use strict";
    function t() {}
    return e("wtfInit", t), {
      setters: [],
      execute: function() {}
    };
  }), System.register("angular2/src/core/platform_bindings", ["angular2/di", "angular2/src/core/exception_handler", "angular2/src/dom/dom_adapter"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i;
    return {
      setters: [function(e) {
        t = e.bind;
      }, function(e) {
        n = e.ExceptionHandler;
      }, function(e) {
        r = e.DOM;
      }],
      execute: function() {
        i = t(n).toFactory(function() {
          return new n(r, !1);
        }, []), e("EXCEPTION_BINDING", i);
      }
    };
  }), System.register("angular2/src/directives/ng_class", ["angular2/src/facade/lang", "angular2/metadata", "angular2/core", "angular2/src/render/api", "angular2/change_detection", "angular2/src/facade/collection"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p;
    return {
      setters: [function(e) {
        r = e.isPresent, i = e.isString;
      }, function(e) {
        o = e.Directive, s = e.LifecycleEvent;
      }, function(e) {
        a = e.ElementRef;
      }, function(e) {
        c = e.Renderer;
      }, function(e) {
        u = e.IterableDiffers, l = e.KeyValueDiffers;
      }, function(e) {
        f = e.ListWrapper, h = e.StringMapWrapper, d = e.isListLikeIterable;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, p = $traceurRuntime.createClass(function(e, t, n, r) {
          this._iterableDiffers = e, this._keyValueDiffers = t, this._ngEl = n, this._renderer = r, this._initialClasses = [];
        }, {
          set initialClasses(e) {
            this._applyInitialClasses(!0), this._initialClasses = r(e) && i(e) ? e.split(" ") : [], this._applyInitialClasses(!1), this._applyClasses(this._rawClass, !1);
          },
          set rawClass(e) {
            this._cleanupClasses(this._rawClass), i(e) && (e = e.split(" ")), this._rawClass = e, r(e) ? d(e) ? (this._differ = this._iterableDiffers.find(e).create(null), this._mode = "iterable") : (this._differ = this._keyValueDiffers.find(e).create(null), this._mode = "keyValue") : this._differ = null;
          },
          onCheck: function() {
            if (r(this._differ)) {
              var e = this._differ.diff(this._rawClass);
              r(e) && ("iterable" == this._mode ? this._applyIterableChanges(e) : this._applyKeyValueChanges(e));
            }
          },
          onDestroy: function() {
            this._cleanupClasses(this._rawClass);
          },
          _cleanupClasses: function(e) {
            this._applyClasses(e, !0), this._applyInitialClasses(!1);
          },
          _applyKeyValueChanges: function(e) {
            var t = this;
            e.forEachAddedItem(function(e) {
              t._toggleClass(e.key, e.currentValue);
            }), e.forEachChangedItem(function(e) {
              t._toggleClass(e.key, e.currentValue);
            }), e.forEachRemovedItem(function(e) {
              e.previousValue && t._toggleClass(e.key, !1);
            });
          },
          _applyIterableChanges: function(e) {
            var t = this;
            e.forEachAddedItem(function(e) {
              t._toggleClass(e.item, !0);
            }), e.forEachRemovedItem(function(e) {
              t._toggleClass(e.item, !1);
            });
          },
          _applyInitialClasses: function(e) {
            var t = this;
            f.forEach(this._initialClasses, function(n) {
              t._toggleClass(n, !e);
            });
          },
          _applyClasses: function(e, t) {
            var n = this;
            r(e) && (d(e) ? f.forEach(e, function(e) {
              return n._toggleClass(e, !t);
            }) : h.forEach(e, function(e, r) {
              e && n._toggleClass(r, !t);
            }));
          },
          _toggleClass: function(e, t) {
            this._renderer.setElementClass(this._ngEl, e, t);
          }
        }, {}), e("NgClass", p), e("NgClass", p = t([o({
          selector: "[ng-class]",
          lifecycle: [s.onCheck, s.onDestroy],
          properties: ["rawClass: ng-class", "initialClasses: class"]
        }), n("design:paramtypes", [u, l, a, c])], p));
      }
    };
  }), System.register("angular2/src/directives/ng_for", ["angular2/metadata", "angular2/core", "angular2/change_detection", "angular2/src/facade/lang"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h;
    return {
      setters: [function(e) {
        r = e.Directive, i = e.LifecycleEvent;
      }, function(e) {
        o = e.ViewContainerRef, s = e.TemplateRef;
      }, function(e) {
        a = e.ChangeDetectorRef, c = e.IterableDiffers;
      }, function(e) {
        u = e.isPresent, l = e.isBlank;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, f = $traceurRuntime.createClass(function(e, t, n, r) {
          this.viewContainer = e, this.templateRef = t, this.iterableDiffers = n, this.cdr = r;
        }, {
          set ngForOf(e) {
            this._ngForOf = e, l(this._differ) && u(e) && (this._differ = this.iterableDiffers.find(e).create(this.cdr));
          },
          onCheck: function() {
            if (u(this._differ)) {
              var e = this._differ.diff(this._ngForOf);
              u(e) && this._applyChanges(e);
            }
          },
          _applyChanges: function(e) {
            var t = [];
            e.forEachRemovedItem(function(e) {
              return t.push(new h(e, null));
            }), e.forEachMovedItem(function(e) {
              return t.push(new h(e, null));
            });
            var n = f.bulkRemove(t, this.viewContainer);
            e.forEachAddedItem(function(e) {
              return n.push(new h(e, null));
            }), f.bulkInsert(n, this.viewContainer, this.templateRef);
            for (var r = 0; r < n.length; r++)
              this._perViewChange(n[r].view, n[r].record);
          },
          _perViewChange: function(e, t) {
            e.setLocal("$implicit", t.item), e.setLocal("index", t.currentIndex);
          }
        }, {
          bulkRemove: function(e, t) {
            e.sort(function(e, t) {
              return e.record.previousIndex - t.record.previousIndex;
            });
            for (var n = [],
                r = e.length - 1; r >= 0; r--) {
              var i = e[r];
              u(i.record.currentIndex) ? (i.view = t.detach(i.record.previousIndex), n.push(i)) : t.remove(i.record.previousIndex);
            }
            return n;
          },
          bulkInsert: function(e, t, n) {
            e.sort(function(e, t) {
              return e.record.currentIndex - t.record.currentIndex;
            });
            for (var r = 0; r < e.length; r++) {
              var i = e[r];
              u(i.view) ? t.insert(i.view, i.record.currentIndex) : i.view = t.createEmbeddedView(n, i.record.currentIndex);
            }
            return e;
          }
        }), e("NgFor", f), e("NgFor", f = t([r({
          selector: "[ng-for][ng-for-of]",
          properties: ["ngForOf"],
          lifecycle: [i.onCheck]
        }), n("design:paramtypes", [o, s, c, a])], f)), h = function() {
          function e(e, t) {
            this.record = e, this.view = t;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("RecordViewTuple", h);
      }
    };
  }), System.register("angular2/src/directives/ng_if", ["angular2/metadata", "angular2/core", "angular2/src/facade/lang"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a;
    return {
      setters: [function(e) {
        r = e.Directive;
      }, function(e) {
        i = e.ViewContainerRef, o = e.TemplateRef;
      }, function(e) {
        s = e.isBlank;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, a = $traceurRuntime.createClass(function(e, t) {
          this._viewContainer = e, this._templateRef = t, this._prevCondition = null;
        }, {set ngIf(e) {
            !e || !s(this._prevCondition) && this._prevCondition ? e || !s(this._prevCondition) && !this._prevCondition || (this._prevCondition = !1, this._viewContainer.clear()) : (this._prevCondition = !0, this._viewContainer.createEmbeddedView(this._templateRef));
          }}, {}), e("NgIf", a), e("NgIf", a = t([r({
          selector: "[ng-if]",
          properties: ["ngIf"]
        }), n("design:paramtypes", [i, o])], a));
      }
    };
  }), System.register("angular2/src/directives/ng_non_bindable", ["angular2/metadata"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i;
    return {
      setters: [function(e) {
        r = e.Directive;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, i = $traceurRuntime.createClass(function() {}, {}, {}), e("NgNonBindable", i), e("NgNonBindable", i = t([r({
          selector: "[ng-non-bindable]",
          compileChildren: !1
        }), n("design:paramtypes", [])], i));
      }
    };
  }), System.register("angular2/src/directives/ng_switch", ["angular2/metadata", "angular2/di", "angular2/core", "angular2/src/facade/lang", "angular2/src/facade/collection"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _;
    return {
      setters: [function(e) {
        i = e.Directive;
      }, function(e) {
        o = e.Host;
      }, function(e) {
        s = e.ViewContainerRef, a = e.TemplateRef;
      }, function(e) {
        c = e.isPresent, u = e.isBlank, l = e.normalizeBlank, f = e.CONST_EXPR;
      }, function(e) {
        h = e.ListWrapper, d = e.Map;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, r = this && this.__param || function(e, t) {
          return function(n, r) {
            t(n, r, e);
          };
        }, p = f(new Object), g = function() {
          function e(e, t) {
            this._viewContainerRef = e, this._templateRef = t;
          }
          return $traceurRuntime.createClass(e, {
            create: function() {
              this._viewContainerRef.createEmbeddedView(this._templateRef);
            },
            destroy: function() {
              this._viewContainerRef.clear();
            }
          }, {});
        }(), e("SwitchView", g), m = $traceurRuntime.createClass(function() {
          this._useDefault = !1, this._valueViews = new d, this._activeViews = [];
        }, {
          set ngSwitch(e) {
            this._emptyAllActiveViews(), this._useDefault = !1;
            var t = this._valueViews.get(e);
            u(t) && (this._useDefault = !0, t = l(this._valueViews.get(p))), this._activateViews(t), this._switchValue = e;
          },
          _onWhenValueChanged: function(e, t, n) {
            this._deregisterView(e, n), this._registerView(t, n), e === this._switchValue ? (n.destroy(), h.remove(this._activeViews, n)) : t === this._switchValue && (this._useDefault && (this._useDefault = !1, this._emptyAllActiveViews()), n.create(), this._activeViews.push(n)), 0 !== this._activeViews.length || this._useDefault || (this._useDefault = !0, this._activateViews(this._valueViews.get(p)));
          },
          _emptyAllActiveViews: function() {
            for (var e = this._activeViews,
                t = 0; t < e.length; t++)
              e[t].destroy();
            this._activeViews = [];
          },
          _activateViews: function(e) {
            if (c(e)) {
              for (var t = 0; t < e.length; t++)
                e[t].create();
              this._activeViews = e;
            }
          },
          _registerView: function(e, t) {
            var n = this._valueViews.get(e);
            u(n) && (n = [], this._valueViews.set(e, n)), n.push(t);
          },
          _deregisterView: function(e, t) {
            if (e !== p) {
              var n = this._valueViews.get(e);
              1 == n.length ? this._valueViews["delete"](e) : h.remove(n, t);
            }
          }
        }, {}), e("NgSwitch", m), e("NgSwitch", m = t([i({
          selector: "[ng-switch]",
          properties: ["ngSwitch"]
        }), n("design:paramtypes", [])], m)), v = $traceurRuntime.createClass(function(e, t, n) {
          this._switch = n, this._value = p, this._view = new g(e, t);
        }, {set ngSwitchWhen(e) {
            this._switch._onWhenValueChanged(this._value, e, this._view), this._value = e;
          }}, {}), e("NgSwitchWhen", v), e("NgSwitchWhen", v = t([i({
          selector: "[ng-switch-when]",
          properties: ["ngSwitchWhen"]
        }), r(2, o()), n("design:paramtypes", [s, a, m])], v)), _ = $traceurRuntime.createClass(function(e, t, n) {
          n._registerView(p, new g(e, t));
        }, {}, {}), e("NgSwitchDefault", _), e("NgSwitchDefault", _ = t([i({selector: "[ng-switch-default]"}), r(2, o()), n("design:paramtypes", [s, a, m])], _));
      }
    };
  }), System.register("angular2/src/directives/ng_style", ["angular2/metadata", "angular2/core", "angular2/change_detection", "angular2/src/facade/lang", "angular2/src/render/api"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l;
    return {
      setters: [function(e) {
        r = e.Directive, i = e.LifecycleEvent;
      }, function(e) {
        o = e.ElementRef;
      }, function(e) {
        s = e.KeyValueDiffers;
      }, function(e) {
        a = e.isPresent, c = e.isBlank;
      }, function(e) {
        u = e.Renderer;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, l = $traceurRuntime.createClass(function(e, t, n) {
          this._differs = e, this._ngEl = t, this._renderer = n;
        }, {
          set rawStyle(e) {
            this._rawStyle = e, c(this._differ) && a(e) && (this._differ = this._differs.find(this._rawStyle).create(null));
          },
          onCheck: function() {
            if (a(this._differ)) {
              var e = this._differ.diff(this._rawStyle);
              a(e) && this._applyChanges(e);
            }
          },
          _applyChanges: function(e) {
            var t = this;
            e.forEachAddedItem(function(e) {
              t._setStyle(e.key, e.currentValue);
            }), e.forEachChangedItem(function(e) {
              t._setStyle(e.key, e.currentValue);
            }), e.forEachRemovedItem(function(e) {
              t._setStyle(e.key, null);
            });
          },
          _setStyle: function(e, t) {
            this._renderer.setElementStyle(this._ngEl, e, t);
          }
        }, {}), e("NgStyle", l), e("NgStyle", l = t([r({
          selector: "[ng-style]",
          lifecycle: [i.onCheck],
          properties: ["rawStyle: ng-style"]
        }), n("design:paramtypes", [s, o, u])], l));
      }
    };
  }), System.register("angular2/src/forms/validators", ["angular2/src/facade/lang", "angular2/src/facade/collection"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o;
    return {
      setters: [function(e) {
        t = e.isBlank, n = e.isPresent;
      }, function(e) {
        r = e.ListWrapper, i = e.StringMapWrapper;
      }],
      execute: function() {
        o = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {}, {
            required: function(e) {
              return t(e.value) || "" == e.value ? {required: !0} : null;
            },
            nullValidator: function(e) {
              return null;
            },
            compose: function(e) {
              return function(t) {
                var o = r.reduce(e, function(e, r) {
                  var o = r(t);
                  return n(o) ? i.merge(e, o) : e;
                }, {});
                return i.isEmpty(o) ? null : o;
              };
            },
            group: function(t) {
              var r = {};
              return i.forEach(t.controls, function(i, o) {
                t.contains(o) && n(i.errors) && e._mergeErrors(i, r);
              }), i.isEmpty(r) ? null : r;
            },
            array: function(t) {
              var o = {};
              return r.forEach(t.controls, function(t) {
                n(t.errors) && e._mergeErrors(t, o);
              }), i.isEmpty(o) ? null : o;
            },
            _mergeErrors: function(e, t) {
              i.forEach(e.errors, function(n, r) {
                i.contains(t, r) || (t[r] = []);
                var o = t[r];
                o.push(e);
              });
            }
          });
        }(), e("Validators", o);
      }
    };
  }), System.register("angular2/src/forms/directives/abstract_control_directive", [], function(e) {
    "use strict";
    var t;
    return {
      setters: [],
      execute: function() {
        t = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {
            get control() {
              return null;
            },
            get value() {
              return this.control.value;
            },
            get valid() {
              return this.control.valid;
            },
            get errors() {
              return this.control.errors;
            },
            get pristine() {
              return this.control.pristine;
            },
            get dirty() {
              return this.control.dirty;
            },
            get touched() {
              return this.control.touched;
            },
            get untouched() {
              return this.control.untouched;
            }
          }, {});
        }(), e("AbstractControlDirective", t);
      }
    };
  }), System.register("angular2/src/forms/directives/control_container", ["angular2/src/forms/directives/abstract_control_directive"], function(e) {
    "use strict";
    var t,
        n;
    return {
      setters: [function(e) {
        t = e.AbstractControlDirective;
      }],
      execute: function() {
        n = function(e) {
          function t() {
            $traceurRuntime.superConstructor(t).apply(this, arguments);
          }
          return $traceurRuntime.createClass(t, {
            get formDirective() {
              return null;
            },
            get path() {
              return null;
            }
          }, {}, e);
        }(t), e("ControlContainer", n);
      }
    };
  }), System.register("angular2/src/forms/directives/ng_control", ["angular2/src/forms/directives/abstract_control_directive"], function(e) {
    "use strict";
    var t,
        n;
    return {
      setters: [function(e) {
        t = e.AbstractControlDirective;
      }],
      execute: function() {
        n = function(e) {
          function t() {
            for (var e,
                n = [],
                r = 0; r < arguments.length; r++)
              n[r] = arguments[r];
            (e = $traceurRuntime.superConstructor(t)).call.apply(e, $traceurRuntime.spread([this], n)), this.name = null, this.valueAccessor = null;
          }
          return $traceurRuntime.createClass(t, {
            get validator() {
              return null;
            },
            get path() {
              return null;
            },
            viewToModelUpdate: function(e) {}
          }, {}, e);
        }(t), e("NgControl", n);
      }
    };
  }), System.register("angular2/src/forms/directives/validators", ["angular2/di", "angular2/src/facade/lang", "angular2/metadata", "angular2/src/forms/validators"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l;
    return {
      setters: [function(e) {
        r = e.forwardRef, i = e.Binding;
      }, function(e) {
        o = e.CONST_EXPR;
      }, function(e) {
        s = e.Directive;
      }, function(e) {
        a = e.Validators;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, c = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {get validator() {
              throw "Is not implemented";
            }}, {});
        }(), e("NgValidator", c), u = o(new i(c, {toAlias: r(function() {
            return l;
          })})), l = function(e) {
          function t() {
            $traceurRuntime.superConstructor(t).apply(this, arguments);
          }
          return $traceurRuntime.createClass(t, {get validator() {
              return a.required;
            }}, {}, e);
        }(c), e("NgRequiredValidator", l), e("NgRequiredValidator", l = t([s({
          selector: "[required][ng-control],[required][ng-form-control],[required][ng-model]",
          bindings: [u]
        }), n("design:paramtypes", [])], l));
      }
    };
  }), System.register("angular2/src/forms/directives/shared", ["angular2/src/facade/collection", "angular2/src/facade/lang", "angular2/src/forms/validators"], function(e) {
    "use strict";
    function t(e, t) {
      var n = a.clone(t.path);
      return n.push(e), n;
    }
    function n(e, t) {
      u(e) && i(t, "Cannot find control"), u(t.valueAccessor) && i(t, "No value accessor for"), e.validator = h.compose([e.validator, t.validator]), t.valueAccessor.writeValue(e.value), t.valueAccessor.registerOnChange(function(n) {
        t.viewToModelUpdate(n), e.updateValue(n, {emitModelToViewChange: !1}), e.markAsDirty();
      }), e.registerOnChange(function(e) {
        return t.valueAccessor.writeValue(e);
      }), t.valueAccessor.registerOnTouched(function() {
        return e.markAsTouched();
      });
    }
    function r(e) {
      return u(e) ? h.nullValidator : h.compose(e.map(function(e) {
        return e.validator;
      }));
    }
    function i(e, t) {
      var n = a.join(e.path, " -> ");
      throw new l(t + " '" + n + "'");
    }
    function o(e, t, n, r) {
      e.setElementProperty(t, n, r);
    }
    function s(e, t) {
      if (!c.contains(e, "model"))
        return !1;
      var n = e.model;
      return n.isFirstChange() ? !0 : !f(t, n.currentValue);
    }
    var a,
        c,
        u,
        l,
        f,
        h;
    return e("controlPath", t), e("setUpControl", n), e("composeNgValidator", r), e("setProperty", o), e("isPropertyUpdated", s), {
      setters: [function(e) {
        a = e.ListWrapper, c = e.StringMapWrapper;
      }, function(e) {
        u = e.isBlank, l = e.BaseException, f = e.looseIdentical;
      }, function(e) {
        h = e.Validators;
      }],
      execute: function() {}
    };
  }), System.register("angular2/src/forms/directives/ng_form_control", ["angular2/src/facade/lang", "angular2/src/facade/async", "angular2/core", "angular2/metadata", "angular2/di", "angular2/src/forms/directives/ng_control", "angular2/src/forms/directives/validators", "angular2/src/forms/directives/shared"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y;
    return {
      setters: [function(e) {
        i = e.CONST_EXPR;
      }, function(e) {
        o = e.EventEmitter, s = e.ObservableWrapper;
      }, function(e) {
        a = e.QueryList;
      }, function(e) {
        c = e.Query, u = e.Directive, l = e.LifecycleEvent;
      }, function(e) {
        f = e.forwardRef, h = e.Binding;
      }, function(e) {
        d = e.NgControl;
      }, function(e) {
        p = e.NgValidator;
      }, function(e) {
        g = e.setUpControl, m = e.composeNgValidator, v = e.isPropertyUpdated;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, r = this && this.__param || function(e, t) {
          return function(n, r) {
            t(n, r, e);
          };
        }, _ = i(new h(d, {toAlias: f(function() {
            return y;
          })})), y = function(e) {
          function t(e) {
            $traceurRuntime.superConstructor(t).call(this), this.update = new o, this._added = !1, this.ngValidators = e;
          }
          return $traceurRuntime.createClass(t, {
            onChange: function(e) {
              this._added || (g(this.form, this), this.form.updateValidity(), this._added = !0), v(e, this.viewModel) && this.form.updateValue(this.model);
            },
            get path() {
              return [];
            },
            get control() {
              return this.form;
            },
            get validator() {
              return m(this.ngValidators);
            },
            viewToModelUpdate: function(e) {
              this.viewModel = e, s.callNext(this.update, e);
            }
          }, {}, e);
        }(d), e("NgFormControl", y), e("NgFormControl", y = t([u({
          selector: "[ng-form-control]",
          bindings: [_],
          properties: ["form: ngFormControl", "model: ngModel"],
          events: ["update: ngModel"],
          lifecycle: [l.onChange],
          exportAs: "form"
        }), r(0, c(p)), n("design:paramtypes", [a])], y));
      }
    };
  }), System.register("angular2/src/forms/directives/ng_model", ["angular2/src/facade/lang", "angular2/src/facade/async", "angular2/core", "angular2/metadata", "angular2/di", "angular2/src/forms/directives/ng_control", "angular2/src/forms/model", "angular2/src/forms/directives/validators", "angular2/src/forms/directives/shared"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y,
        b;
    return {
      setters: [function(e) {
        i = e.CONST_EXPR;
      }, function(e) {
        o = e.EventEmitter, s = e.ObservableWrapper;
      }, function(e) {
        a = e.QueryList;
      }, function(e) {
        c = e.Query, u = e.Directive, l = e.LifecycleEvent;
      }, function(e) {
        f = e.forwardRef, h = e.Binding;
      }, function(e) {
        d = e.NgControl;
      }, function(e) {
        p = e.Control;
      }, function(e) {
        g = e.NgValidator;
      }, function(e) {
        m = e.setUpControl, v = e.composeNgValidator, _ = e.isPropertyUpdated;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, r = this && this.__param || function(e, t) {
          return function(n, r) {
            t(n, r, e);
          };
        }, y = i(new h(d, {toAlias: f(function() {
            return b;
          })})), b = function(e) {
          function t(e) {
            $traceurRuntime.superConstructor(t).call(this), this._control = new p, this._added = !1, this.update = new o, this.ngValidators = e;
          }
          return $traceurRuntime.createClass(t, {
            onChange: function(e) {
              this._added || (m(this._control, this), this._control.updateValidity(), this._added = !0), _(e, this.viewModel) && this._control.updateValue(this.model);
            },
            get control() {
              return this._control;
            },
            get path() {
              return [];
            },
            get validator() {
              return v(this.ngValidators);
            },
            viewToModelUpdate: function(e) {
              this.viewModel = e, s.callNext(this.update, e);
            }
          }, {}, e);
        }(d), e("NgModel", b), e("NgModel", b = t([u({
          selector: "[ng-model]:not([ng-control]):not([ng-form-control])",
          bindings: [y],
          properties: ["model: ngModel"],
          events: ["update: ngModel"],
          lifecycle: [l.onChange],
          exportAs: "form"
        }), r(0, c(g)), n("design:paramtypes", [a])], b));
      }
    };
  }), System.register("angular2/src/forms/directives/ng_control_group", ["angular2/metadata", "angular2/di", "angular2/src/facade/lang", "angular2/src/forms/directives/control_container", "angular2/src/forms/directives/shared"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p;
    return {
      setters: [function(e) {
        i = e.Directive, o = e.LifecycleEvent;
      }, function(e) {
        s = e.Host, a = e.SkipSelf, c = e.forwardRef, u = e.Binding;
      }, function(e) {
        l = e.CONST_EXPR;
      }, function(e) {
        f = e.ControlContainer;
      }, function(e) {
        h = e.controlPath;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, r = this && this.__param || function(e, t) {
          return function(n, r) {
            t(n, r, e);
          };
        }, d = l(new u(f, {toAlias: c(function() {
            return p;
          })})), p = function(e) {
          function t(e) {
            $traceurRuntime.superConstructor(t).call(this), this._parent = e;
          }
          return $traceurRuntime.createClass(t, {
            onInit: function() {
              this.formDirective.addControlGroup(this);
            },
            onDestroy: function() {
              this.formDirective.removeControlGroup(this);
            },
            get control() {
              return this.formDirective.getControlGroup(this);
            },
            get path() {
              return h(this.name, this._parent);
            },
            get formDirective() {
              return this._parent.formDirective;
            }
          }, {}, e);
        }(f), e("NgControlGroup", p), e("NgControlGroup", p = t([i({
          selector: "[ng-control-group]",
          bindings: [d],
          properties: ["name: ng-control-group"],
          lifecycle: [o.onInit, o.onDestroy],
          exportAs: "form"
        }), r(0, s()), r(0, a()), n("design:paramtypes", [f])], p));
      }
    };
  }), System.register("angular2/src/forms/directives/ng_form_model", ["angular2/src/facade/lang", "angular2/src/facade/collection", "angular2/src/facade/async", "angular2/metadata", "angular2/di", "angular2/src/forms/directives/control_container", "angular2/src/forms/directives/shared"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p;
    return {
      setters: [function(e) {
        r = e.CONST_EXPR;
      }, function(e) {
        i = e.ListWrapper;
      }, function(e) {
        o = e.ObservableWrapper, s = e.EventEmitter;
      }, function(e) {
        a = e.Directive, c = e.LifecycleEvent;
      }, function(e) {
        u = e.forwardRef, l = e.Binding;
      }, function(e) {
        f = e.ControlContainer;
      }, function(e) {
        h = e.setUpControl;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, d = r(new l(f, {toAlias: u(function() {
            return p;
          })})), p = function(e) {
          function t() {
            for (var e,
                n = [],
                r = 0; r < arguments.length; r++)
              n[r] = arguments[r];
            (e = $traceurRuntime.superConstructor(t)).call.apply(e, $traceurRuntime.spread([this], n)), this.form = null, this.directives = [], this.ngSubmit = new s;
          }
          return $traceurRuntime.createClass(t, {
            onChange: function(e) {
              this._updateDomValue();
            },
            get formDirective() {
              return this;
            },
            get control() {
              return this.form;
            },
            get path() {
              return [];
            },
            addControl: function(e) {
              var t = this.form.find(e.path);
              h(t, e), t.updateValidity(), this.directives.push(e);
            },
            getControl: function(e) {
              return this.form.find(e.path);
            },
            removeControl: function(e) {
              i.remove(this.directives, e);
            },
            addControlGroup: function(e) {},
            removeControlGroup: function(e) {},
            getControlGroup: function(e) {
              return this.form.find(e.path);
            },
            updateModel: function(e, t) {
              var n = this.form.find(e.path);
              n.updateValue(t);
            },
            onSubmit: function() {
              return o.callNext(this.ngSubmit, null), !1;
            },
            _updateDomValue: function() {
              var e = this;
              i.forEach(this.directives, function(t) {
                var n = e.form.find(t.path);
                t.valueAccessor.writeValue(n.value);
              });
            }
          }, {}, e);
        }(f), e("NgFormModel", p), e("NgFormModel", p = t([a({
          selector: "[ng-form-model]",
          bindings: [d],
          properties: ["form: ng-form-model"],
          lifecycle: [c.onChange],
          host: {"(submit)": "onSubmit()"},
          events: ["ngSubmit"],
          exportAs: "form"
        }), n("design:paramtypes", [])], p));
      }
    };
  }), System.register("angular2/src/forms/directives/ng_form", ["angular2/src/facade/async", "angular2/src/facade/collection", "angular2/src/facade/lang", "angular2/metadata", "angular2/di", "angular2/src/forms/directives/control_container", "angular2/src/forms/model", "angular2/src/forms/directives/shared"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v;
    return {
      setters: [function(e) {
        r = e.PromiseWrapper, i = e.ObservableWrapper, o = e.EventEmitter;
      }, function(e) {
        s = e.ListWrapper;
      }, function(e) {
        a = e.isPresent, c = e.CONST_EXPR;
      }, function(e) {
        u = e.Directive;
      }, function(e) {
        l = e.forwardRef, f = e.Binding;
      }, function(e) {
        h = e.ControlContainer;
      }, function(e) {
        d = e.ControlGroup, p = e.Control;
      }, function(e) {
        g = e.setUpControl;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, m = c(new f(h, {toAlias: l(function() {
            return v;
          })})), v = function(e) {
          function t() {
            $traceurRuntime.superConstructor(t).call(this), this.ngSubmit = new o, this.form = new d({});
          }
          return $traceurRuntime.createClass(t, {
            get formDirective() {
              return this;
            },
            get control() {
              return this.form;
            },
            get path() {
              return [];
            },
            get controls() {
              return this.form.controls;
            },
            addControl: function(e) {
              var t = this;
              this._later(function(n) {
                var r = t._findContainer(e.path),
                    i = new p;
                g(i, e), r.addControl(e.name, i), i.updateValidity();
              });
            },
            getControl: function(e) {
              return this.form.find(e.path);
            },
            removeControl: function(e) {
              var t = this;
              this._later(function(n) {
                var r = t._findContainer(e.path);
                a(r) && (r.removeControl(e.name), r.updateValidity());
              });
            },
            addControlGroup: function(e) {
              var t = this;
              this._later(function(n) {
                var r = t._findContainer(e.path),
                    i = new d({});
                r.addControl(e.name, i), i.updateValidity();
              });
            },
            removeControlGroup: function(e) {
              var t = this;
              this._later(function(n) {
                var r = t._findContainer(e.path);
                a(r) && (r.removeControl(e.name), r.updateValidity());
              });
            },
            getControlGroup: function(e) {
              return this.form.find(e.path);
            },
            updateModel: function(e, t) {
              var n = this;
              this._later(function(r) {
                var i = n.form.find(e.path);
                i.updateValue(t);
              });
            },
            onSubmit: function() {
              return i.callNext(this.ngSubmit, null), !1;
            },
            _findContainer: function(e) {
              return s.removeLast(e), s.isEmpty(e) ? this.form : this.form.find(e);
            },
            _later: function(e) {
              var t = r.completer();
              r.then(t.promise, e, function(e) {}), t.resolve(null);
            }
          }, {}, e);
        }(h), e("NgForm", v), e("NgForm", v = t([u({
          selector: "form:not([ng-no-form]):not([ng-form-model]),ng-form,[ng-form]",
          bindings: [m],
          host: {"(submit)": "onSubmit()"},
          events: ["ngSubmit"],
          exportAs: "form"
        }), n("design:paramtypes", [])], v));
      }
    };
  }), System.register("angular2/render", ["angular2/src/render/render"], function(e) {
    "use strict";
    return {
      setters: [function(t) {
        e("RenderDirectiveMetadata", t.RenderDirectiveMetadata), e("DomRenderer", t.DomRenderer), e("Renderer", t.Renderer), e("RenderViewRef", t.RenderViewRef), e("RenderProtoViewRef", t.RenderProtoViewRef), e("RenderFragmentRef", t.RenderFragmentRef), e("RenderViewWithFragments", t.RenderViewWithFragments), e("ViewDefinition", t.ViewDefinition), e("DOCUMENT", t.DOCUMENT), e("APP_ID", t.APP_ID), e("DOM_REFLECT_PROPERTIES_AS_ATTRIBUTES", t.DOM_REFLECT_PROPERTIES_AS_ATTRIBUTES), e("MAX_IN_MEMORY_ELEMENTS_PER_TEMPLATE", t.MAX_IN_MEMORY_ELEMENTS_PER_TEMPLATE);
      }],
      execute: function() {}
    };
  }), System.register("angular2/src/forms/directives/checkbox_value_accessor", ["angular2/render", "angular2/metadata", "angular2/core", "angular2/di", "angular2/src/forms/directives/ng_control", "angular2/src/facade/lang", "angular2/src/forms/directives/shared"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f;
    return {
      setters: [function(e) {
        i = e.Renderer;
      }, function(e) {
        o = e.Directive;
      }, function(e) {
        s = e.ElementRef;
      }, function(e) {
        a = e.Self;
      }, function(e) {
        c = e.NgControl;
      }, function(e) {
        u = e.isPresent;
      }, function(e) {
        l = e.setProperty;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, r = this && this.__param || function(e, t) {
          return function(n, r) {
            t(n, r, e);
          };
        }, f = $traceurRuntime.createClass(function(e, t, n) {
          this.renderer = t, this.elementRef = n, this.onChange = function(e) {}, this.onTouched = function() {}, this.cd = e, e.valueAccessor = this;
        }, {
          writeValue: function(e) {
            l(this.renderer, this.elementRef, "checked", e);
          },
          get ngClassUntouched() {
            return u(this.cd.control) ? this.cd.control.untouched : !1;
          },
          get ngClassTouched() {
            return u(this.cd.control) ? this.cd.control.touched : !1;
          },
          get ngClassPristine() {
            return u(this.cd.control) ? this.cd.control.pristine : !1;
          },
          get ngClassDirty() {
            return u(this.cd.control) ? this.cd.control.dirty : !1;
          },
          get ngClassValid() {
            return u(this.cd.control) ? this.cd.control.valid : !1;
          },
          get ngClassInvalid() {
            return u(this.cd.control) ? !this.cd.control.valid : !1;
          },
          registerOnChange: function(e) {
            this.onChange = e;
          },
          registerOnTouched: function(e) {
            this.onTouched = e;
          }
        }, {}), e("CheckboxControlValueAccessor", f), e("CheckboxControlValueAccessor", f = t([o({
          selector: "input[type=checkbox][ng-control],input[type=checkbox][ng-form-control],input[type=checkbox][ng-model]",
          host: {
            "(change)": "onChange($event.target.checked)",
            "(blur)": "onTouched()",
            "[class.ng-untouched]": "ngClassUntouched",
            "[class.ng-touched]": "ngClassTouched",
            "[class.ng-pristine]": "ngClassPristine",
            "[class.ng-dirty]": "ngClassDirty",
            "[class.ng-valid]": "ngClassValid",
            "[class.ng-invalid]": "ngClassInvalid"
          }
        }), r(0, a()), n("design:paramtypes", [c, i, s])], f));
      }
    };
  }), System.register("angular2/src/forms/directives/select_control_value_accessor", ["angular2/render", "angular2/core", "angular2/di", "angular2/metadata", "angular2/src/forms/directives/ng_control", "angular2/src/facade/lang", "angular2/src/forms/directives/shared"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p;
    return {
      setters: [function(e) {
        i = e.Renderer;
      }, function(e) {
        o = e.ElementRef, s = e.QueryList;
      }, function(e) {
        a = e.Self;
      }, function(e) {
        c = e.Query, u = e.Directive;
      }, function(e) {
        l = e.NgControl;
      }, function(e) {
        f = e.isPresent;
      }, function(e) {
        h = e.setProperty;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, r = this && this.__param || function(e, t) {
          return function(n, r) {
            t(n, r, e);
          };
        }, d = $traceurRuntime.createClass(function() {}, {}, {}), e("NgSelectOption", d), e("NgSelectOption", d = t([u({selector: "option"}), n("design:paramtypes", [])], d)), p = $traceurRuntime.createClass(function(e, t, n, r) {
          this.renderer = t, this.elementRef = n, this.onChange = function(e) {}, this.onTouched = function() {}, this.cd = e, e.valueAccessor = this, this._updateValueWhenListOfOptionsChanges(r);
        }, {
          writeValue: function(e) {
            this.value = e, h(this.renderer, this.elementRef, "value", e);
          },
          get ngClassUntouched() {
            return f(this.cd.control) ? this.cd.control.untouched : !1;
          },
          get ngClassTouched() {
            return f(this.cd.control) ? this.cd.control.touched : !1;
          },
          get ngClassPristine() {
            return f(this.cd.control) ? this.cd.control.pristine : !1;
          },
          get ngClassDirty() {
            return f(this.cd.control) ? this.cd.control.dirty : !1;
          },
          get ngClassValid() {
            return f(this.cd.control) ? this.cd.control.valid : !1;
          },
          get ngClassInvalid() {
            return f(this.cd.control) ? !this.cd.control.valid : !1;
          },
          registerOnChange: function(e) {
            this.onChange = e;
          },
          registerOnTouched: function(e) {
            this.onTouched = e;
          },
          _updateValueWhenListOfOptionsChanges: function(e) {
            var t = this;
            e.onChange(function() {
              return t.writeValue(t.value);
            });
          }
        }, {}), e("SelectControlValueAccessor", p), e("SelectControlValueAccessor", p = t([u({
          selector: "select[ng-control],select[ng-form-control],select[ng-model]",
          host: {
            "(change)": "onChange($event.target.value)",
            "(input)": "onChange($event.target.value)",
            "(blur)": "onTouched()",
            "[class.ng-untouched]": "ngClassUntouched",
            "[class.ng-touched]": "ngClassTouched",
            "[class.ng-pristine]": "ngClassPristine",
            "[class.ng-dirty]": "ngClassDirty",
            "[class.ng-valid]": "ngClassValid",
            "[class.ng-invalid]": "ngClassInvalid"
          }
        }), r(0, a()), r(3, c(d, {descendants: !0})), n("design:paramtypes", [l, i, o, s])], p));
      }
    };
  }), System.register("angular2/src/forms/directives", ["angular2/src/facade/lang", "angular2/src/forms/directives/ng_control_name", "angular2/src/forms/directives/ng_form_control", "angular2/src/forms/directives/ng_model", "angular2/src/forms/directives/ng_control_group", "angular2/src/forms/directives/ng_form_model", "angular2/src/forms/directives/ng_form", "angular2/src/forms/directives/default_value_accessor", "angular2/src/forms/directives/checkbox_value_accessor", "angular2/src/forms/directives/select_control_value_accessor", "angular2/src/forms/directives/validators", "angular2/src/forms/directives/ng_control"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d;
    return {
      setters: [function(e) {
        t = e.CONST_EXPR;
      }, function(t) {
        n = t.NgControlName, e("NgControlName", t.NgControlName);
      }, function(t) {
        r = t.NgFormControl, e("NgFormControl", t.NgFormControl);
      }, function(t) {
        i = t.NgModel, e("NgModel", t.NgModel);
      }, function(t) {
        o = t.NgControlGroup, e("NgControlGroup", t.NgControlGroup);
      }, function(t) {
        s = t.NgFormModel, e("NgFormModel", t.NgFormModel);
      }, function(t) {
        a = t.NgForm, e("NgForm", t.NgForm);
      }, function(t) {
        c = t.DefaultValueAccessor, e("DefaultValueAccessor", t.DefaultValueAccessor);
      }, function(t) {
        u = t.CheckboxControlValueAccessor, e("CheckboxControlValueAccessor", t.CheckboxControlValueAccessor);
      }, function(t) {
        l = t.SelectControlValueAccessor, f = t.NgSelectOption, e("SelectControlValueAccessor", t.SelectControlValueAccessor), e("NgSelectOption", t.NgSelectOption);
      }, function(t) {
        h = t.NgRequiredValidator, e("NgValidator", t.NgValidator), e("NgRequiredValidator", t.NgRequiredValidator);
      }, function(t) {
        e("NgControl", t.NgControl);
      }],
      execute: function() {
        d = t([n, o, r, i, s, a, f, c, u, l, h]), e("FORM_DIRECTIVES", d);
      }
    };
  }), System.register("angular2/src/forms/form_builder", ["angular2/di", "angular2/src/facade/collection", "angular2/src/facade/lang", "angular2/src/forms/model"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u;
    return {
      setters: [function(e) {
        r = e.Injectable;
      }, function(e) {
        i = e.StringMapWrapper, o = e.ListWrapper;
      }, function(e) {
        s = e.isPresent, a = e.isArray;
      }, function(e) {
        c = e;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, u = $traceurRuntime.createClass(function() {}, {
          group: function(e) {
            var t = void 0 !== arguments[1] ? arguments[1] : null,
                n = this._reduceControls(e),
                r = s(t) ? i.get(t, "optionals") : null,
                o = s(t) ? i.get(t, "validator") : null;
            return s(o) ? new c.ControlGroup(n, r, o) : new c.ControlGroup(n, r);
          },
          control: function(e) {
            var t = void 0 !== arguments[1] ? arguments[1] : null;
            return s(t) ? new c.Control(e, t) : new c.Control(e);
          },
          array: function(e) {
            var t = void 0 !== arguments[1] ? arguments[1] : null,
                n = this,
                r = o.map(e, function(e) {
                  return n._createControl(e);
                });
            return s(t) ? new c.ControlArray(r, t) : new c.ControlArray(r);
          },
          _reduceControls: function(e) {
            var t = this,
                n = {};
            return i.forEach(e, function(e, r) {
              n[r] = t._createControl(e);
            }), n;
          },
          _createControl: function(e) {
            if (e instanceof c.Control || e instanceof c.ControlGroup || e instanceof c.ControlArray)
              return e;
            if (a(e)) {
              var t = o.get(e, 0),
                  n = e.length > 1 ? e[1] : null;
              return this.control(t, n);
            }
            return this.control(e);
          }
        }, {}), e("FormBuilder", u), e("FormBuilder", u = t([r(), n("design:paramtypes", [])], u));
      }
    };
  }), System.register("angular2/profile", ["angular2/src/profile/profile"], function(e) {
    "use strict";
    return {
      setters: [function(t) {
        e("wtfCreateScope", t.wtfCreateScope), e("wtfLeave", t.wtfLeave), e("wtfStartTimeRange", t.wtfStartTimeRange), e("wtfEndTimeRange", t.wtfEndTimeRange);
      }],
      execute: function() {}
    };
  }), System.register("angular2/src/di/decorators", ["angular2/src/di/metadata", "angular2/src/util/decorators"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p;
    return {
      setters: [function(e) {
        t = e.InjectMetadata, n = e.OptionalMetadata, r = e.InjectableMetadata, i = e.SelfMetadata, o = e.HostMetadata, s = e.SkipSelfMetadata;
      }, function(e) {
        a = e.makeDecorator, c = e.makeParamDecorator;
      }],
      execute: function() {
        u = c(t), e("Inject", u), l = c(n), e("Optional", l), f = a(r), e("Injectable", f), h = c(i), e("Self", h), d = c(o), e("Host", d), p = c(s), e("SkipSelf", p);
      }
    };
  }), System.register("angular2/src/reflection/reflection", ["angular2/src/reflection/reflector", "angular2/src/reflection/reflection_capabilities"], function(e) {
    "use strict";
    var t,
        n,
        r;
    return {
      setters: [function(n) {
        t = n.Reflector, e("Reflector", n.Reflector), e("ReflectionInfo", n.ReflectionInfo);
      }, function(e) {
        n = e.ReflectionCapabilities;
      }],
      execute: function() {
        r = new t(new n), e("reflector", r);
      }
    };
  }), System.register("angular2/src/di/key", ["angular2/src/facade/collection", "angular2/src/facade/lang", "angular2/src/di/type_literal", "angular2/src/di/forward_ref"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u;
    return {
      setters: [function(e) {
        t = e.MapWrapper;
      }, function(e) {
        n = e.stringify, r = e.isBlank, i = e.BaseException;
      }, function(t) {
        o = t.TypeLiteral, e("TypeLiteral", t.TypeLiteral);
      }, function(e) {
        s = e.resolveForwardRef;
      }],
      execute: function() {
        a = function() {
          function e(e, t) {
            if (this.token = e, this.id = t, r(e))
              throw new i("Token must be defined!");
          }
          return $traceurRuntime.createClass(e, {get displayName() {
              return n(this.token);
            }}, {
            get: function(e) {
              return u.get(s(e));
            },
            get numberOfKeys() {
              return u.numberOfKeys;
            }
          });
        }(), e("Key", a), c = function() {
          function e() {
            this._allKeys = new Map;
          }
          return $traceurRuntime.createClass(e, {
            get: function(e) {
              if (e instanceof a)
                return e;
              var t = e;
              if (e instanceof o && (t = e.type), e = t, this._allKeys.has(e))
                return this._allKeys.get(e);
              var n = new a(e, a.numberOfKeys);
              return this._allKeys.set(e, n), n;
            },
            get numberOfKeys() {
              return t.size(this._allKeys);
            }
          }, {});
        }(), e("KeyRegistry", c), u = new c;
      }
    };
  }), System.register("angular2/src/change_detection/change_detection_util", ["angular2/src/facade/lang", "angular2/src/facade/collection", "angular2/src/change_detection/constants", "angular2/src/change_detection/pipe_lifecycle_reflector"], function(e) {
    "use strict";
    function t(e, t) {
      var n = g++ % 20,
          r = m[n];
      return r.previousValue = e, r.currentValue = t, r;
    }
    var n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v;
    return {
      setters: [function(e) {
        n = e.CONST_EXPR, r = e.isPresent, i = e.isBlank, o = e.BaseException;
      }, function(e) {
        s = e.StringMapWrapper;
      }, function(e) {
        a = e.CHECK_ALWAYS, c = e.CHECK_ONCE, u = e.isDefaultChangeDetectionStrategy;
      }, function(e) {
        l = e.implementsOnDestroy;
      }],
      execute: function() {
        f = function() {
          function e(e) {
            this.wrapped = e;
          }
          return $traceurRuntime.createClass(e, {}, {wrap: function(e) {
              var t = h[d++ % 5];
              return t.wrapped = e, t;
            }});
        }(), e("WrappedValue", f), h = [new f(null), new f(null), new f(null), new f(null), new f(null)], d = 0, p = function() {
          function e(e, t) {
            this.previousValue = e, this.currentValue = t;
          }
          return $traceurRuntime.createClass(e, {isFirstChange: function() {
              return this.previousValue === v.uninitialized;
            }}, {});
        }(), e("SimpleChange", p), g = 0, m = [new p(null, null), new p(null, null), new p(null, null), new p(null, null), new p(null, null), new p(null, null), new p(null, null), new p(null, null), new p(null, null), new p(null, null), new p(null, null), new p(null, null), new p(null, null), new p(null, null), new p(null, null), new p(null, null), new p(null, null), new p(null, null), new p(null, null), new p(null, null)], v = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {}, {
            arrayFn0: function() {
              return [];
            },
            arrayFn1: function(e) {
              return [e];
            },
            arrayFn2: function(e, t) {
              return [e, t];
            },
            arrayFn3: function(e, t, n) {
              return [e, t, n];
            },
            arrayFn4: function(e, t, n, r) {
              return [e, t, n, r];
            },
            arrayFn5: function(e, t, n, r, i) {
              return [e, t, n, r, i];
            },
            arrayFn6: function(e, t, n, r, i, o) {
              return [e, t, n, r, i, o];
            },
            arrayFn7: function(e, t, n, r, i, o, s) {
              return [e, t, n, r, i, o, s];
            },
            arrayFn8: function(e, t, n, r, i, o, s, a) {
              return [e, t, n, r, i, o, s, a];
            },
            arrayFn9: function(e, t, n, r, i, o, s, a, c) {
              return [e, t, n, r, i, o, s, a, c];
            },
            operation_negate: function(e) {
              return !e;
            },
            operation_add: function(e, t) {
              return e + t;
            },
            operation_subtract: function(e, t) {
              return e - t;
            },
            operation_multiply: function(e, t) {
              return e * t;
            },
            operation_divide: function(e, t) {
              return e / t;
            },
            operation_remainder: function(e, t) {
              return e % t;
            },
            operation_equals: function(e, t) {
              return e == t;
            },
            operation_not_equals: function(e, t) {
              return e != t;
            },
            operation_identical: function(e, t) {
              return e === t;
            },
            operation_not_identical: function(e, t) {
              return e !== t;
            },
            operation_less_then: function(e, t) {
              return t > e;
            },
            operation_greater_then: function(e, t) {
              return e > t;
            },
            operation_less_or_equals_then: function(e, t) {
              return t >= e;
            },
            operation_greater_or_equals_then: function(e, t) {
              return e >= t;
            },
            operation_logical_and: function(e, t) {
              return e && t;
            },
            operation_logical_or: function(e, t) {
              return e || t;
            },
            cond: function(e, t, n) {
              return e ? t : n;
            },
            mapFn: function(e) {
              function t(t) {
                for (var n = s.create(),
                    r = 0; r < e.length; ++r)
                  s.set(n, e[r], t[r]);
                return n;
              }
              switch (e.length) {
                case 0:
                  return function() {
                    return [];
                  };
                case 1:
                  return function(e) {
                    return t([e]);
                  };
                case 2:
                  return function(e, n) {
                    return t([e, n]);
                  };
                case 3:
                  return function(e, n, r) {
                    return t([e, n, r]);
                  };
                case 4:
                  return function(e, n, r, i) {
                    return t([e, n, r, i]);
                  };
                case 5:
                  return function(e, n, r, i, o) {
                    return t([e, n, r, i, o]);
                  };
                case 6:
                  return function(e, n, r, i, o, s) {
                    return t([e, n, r, i, o, s]);
                  };
                case 7:
                  return function(e, n, r, i, o, s, a) {
                    return t([e, n, r, i, o, s, a]);
                  };
                case 8:
                  return function(e, n, r, i, o, s, a, c) {
                    return t([e, n, r, i, o, s, a, c]);
                  };
                case 9:
                  return function(e, n, r, i, o, s, a, c, u) {
                    return t([e, n, r, i, o, s, a, c, u]);
                  };
                default:
                  throw new o("Does not support literal maps with more than 9 elements");
              }
            },
            keyedAccess: function(e, t) {
              return e[t[0]];
            },
            unwrapValue: function(e) {
              return e instanceof f ? e.wrapped : e;
            },
            changeDetectionMode: function(e) {
              return u(e) ? a : c;
            },
            simpleChange: function(e, n) {
              return t(e, n);
            },
            isValueBlank: function(e) {
              return i(e);
            },
            s: function(e) {
              return r(e) ? "" + e : "";
            },
            protoByIndex: function(e, t) {
              return 1 > t ? null : e[t - 1];
            },
            callPipeOnDestroy: function(e) {
              l(e) && e.onDestroy();
            }
          });
        }(), e("ChangeDetectionUtil", v), v.uninitialized = n(new Object);
      }
    };
  }), System.register("angular2/src/profile/profile", ["angular2/src/profile/wtf_impl"], function(e) {
    "use strict";
    function t(e, t) {
      return null;
    }
    var n,
        r,
        i,
        o,
        s,
        a;
    return {
      setters: [function(e) {
        n = e;
      }],
      execute: function() {
        r = n.detectWTF(), e("wtfEnabled", r), i = r ? n.createScope : function(e, n) {
          return t;
        }, e("wtfCreateScope", i), o = r ? n.leave : function(e, t) {
          return t;
        }, e("wtfLeave", o), s = r ? n.startTimeRange : function(e, t) {
          return null;
        }, e("wtfStartTimeRange", s), a = r ? n.endTimeRange : function(e) {
          return null;
        }, e("wtfEndTimeRange", a);
      }
    };
  }), System.register("angular2/src/change_detection/codegen_logic_util", ["angular2/src/facade/collection", "angular2/src/facade/lang", "angular2/src/change_detection/codegen_facade", "angular2/src/change_detection/proto_record"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u;
    return {
      setters: [function(e) {
        t = e.ListWrapper;
      }, function(e) {
        n = e.BaseException, r = e.StringWrapper;
      }, function(e) {
        i = e.codify, o = e.combineGeneratedStrings, s = e.rawString;
      }, function(e) {
        a = e.RecordType;
      }],
      execute: function() {
        c = "ON_PUSH_OBSERVE", u = function() {
          function e(e, t, n) {
            this._names = e, this._utilName = t, this._changeDetection = n;
          }
          return $traceurRuntime.createClass(e, {
            genPropertyBindingEvalValue: function(e) {
              var t = this;
              return this.genEvalValue(e, function(e) {
                return t._names.getLocalName(e);
              }, this._names.getLocalsAccessorName());
            },
            genEventBindingEvalValue: function(e, t) {
              var n = this;
              return this.genEvalValue(t, function(t) {
                return n._names.getEventLocalName(e, t);
              }, "locals");
            },
            genEvalValue: function(e, r, o) {
              var c,
                  u = -1 == e.contextIndex ? this._names.getDirectiveName(e.directiveIndex) : r(e.contextIndex),
                  l = t.map(e.args, function(e) {
                    return r(e);
                  }).join(", ");
              switch (e.mode) {
                case a.SELF:
                  c = u;
                  break;
                case a.CONST:
                  c = i(e.funcOrValue);
                  break;
                case a.PROPERTY_READ:
                  c = this._observe(u + "." + e.name, e);
                  break;
                case a.SAFE_PROPERTY:
                  var f = this._observe(u + "." + e.name, e);
                  c = this._utilName + ".isValueBlank(" + u + ") ? null : " + this._observe(f, e);
                  break;
                case a.PROPERTY_WRITE:
                  c = u + "." + e.name + " = " + r(e.args[0]);
                  break;
                case a.LOCAL:
                  c = this._observe(o + ".get(" + s(e.name) + ")", e);
                  break;
                case a.INVOKE_METHOD:
                  c = this._observe(u + "." + e.name + "(" + l + ")", e);
                  break;
                case a.SAFE_INVOKE_METHOD:
                  var h = u + "." + e.name + "(" + l + ")";
                  c = this._utilName + ".isValueBlank(" + u + ") ? null : " + this._observe(h, e);
                  break;
                case a.INVOKE_CLOSURE:
                  c = u + "(" + l + ")";
                  break;
                case a.PRIMITIVE_OP:
                  c = this._utilName + "." + e.name + "(" + l + ")";
                  break;
                case a.COLLECTION_LITERAL:
                  c = this._utilName + "." + e.name + "(" + l + ")";
                  break;
                case a.INTERPOLATE:
                  c = this._genInterpolation(e);
                  break;
                case a.KEYED_READ:
                  c = this._observe(u + "[" + r(e.args[0]) + "]", e);
                  break;
                case a.KEYED_WRITE:
                  c = u + "[" + r(e.args[0]) + "] = " + r(e.args[1]);
                  break;
                case a.CHAIN:
                  c = "null";
                  break;
                default:
                  throw new n("Unknown operation " + e.mode);
              }
              return r(e.selfIndex) + " = " + c + ";";
            },
            _observe: function(e, t) {
              return r.equals(this._changeDetection, c) ? "this.observe(" + e + ", " + t.selfIndex + ")" : e;
            },
            _genInterpolation: function(e) {
              for (var t = [],
                  n = 0; n < e.args.length; ++n)
                t.push(i(e.fixedArgs[n])), t.push(this._utilName + ".s(" + this._names.getLocalName(e.args[n]) + ")");
              return t.push(i(e.fixedArgs[e.args.length])), o(t);
            }
          }, {});
        }(), e("CodegenLogicUtil", u);
      }
    };
  }), System.register("angular2/src/change_detection/proto_change_detector", ["angular2/src/facade/lang", "angular2/src/facade/collection", "angular2/src/change_detection/parser/ast", "angular2/src/change_detection/change_detection_util", "angular2/src/change_detection/dynamic_change_detector", "angular2/src/change_detection/directive_record", "angular2/src/change_detection/event_binding", "angular2/src/change_detection/coalesce", "angular2/src/change_detection/proto_record"], function(e) {
    "use strict";
    function t(e) {
      var t = new C;
      return h.forEach(e.bindingRecords, function(n) {
        t.add(n, e.variableNames);
      }), _(t.records);
    }
    function n(e) {
      var t = h.concat(["$event"], e.variableNames);
      return e.eventRecords.map(function(e) {
        var n = R.create(e, t),
            r = e.implicitReceiver instanceof m ? e.implicitReceiver : null;
        return new v(e.eventName, e.elementIndex, r, n);
      });
    }
    function r(e) {
      switch (e) {
        case 0:
          return p.arrayFn0;
        case 1:
          return p.arrayFn1;
        case 2:
          return p.arrayFn2;
        case 3:
          return p.arrayFn3;
        case 4:
          return p.arrayFn4;
        case 5:
          return p.arrayFn5;
        case 6:
          return p.arrayFn6;
        case 7:
          return p.arrayFn7;
        case 8:
          return p.arrayFn8;
        case 9:
          return p.arrayFn9;
        default:
          throw new u("Does not support literal maps with more than 9 elements");
      }
    }
    function i(e) {
      var t = h.join(h.map(e, function(e) {
        return f(e) ? '"' + e + '"' : "" + e;
      }), ", ");
      return "mapFn([" + t + "])";
    }
    function o(e) {
      switch (e) {
        case "+":
          return "operation_add";
        case "-":
          return "operation_subtract";
        case "*":
          return "operation_multiply";
        case "/":
          return "operation_divide";
        case "%":
          return "operation_remainder";
        case "==":
          return "operation_equals";
        case "!=":
          return "operation_not_equals";
        case "===":
          return "operation_identical";
        case "!==":
          return "operation_not_identical";
        case "<":
          return "operation_less_then";
        case ">":
          return "operation_greater_then";
        case "<=":
          return "operation_less_or_equals_then";
        case ">=":
          return "operation_greater_or_equals_then";
        case "&&":
          return "operation_logical_and";
        case "||":
          return "operation_logical_or";
        default:
          throw new u("Unsupported operation " + e);
      }
    }
    function s(e) {
      switch (e) {
        case "+":
          return p.operation_add;
        case "-":
          return p.operation_subtract;
        case "*":
          return p.operation_multiply;
        case "/":
          return p.operation_divide;
        case "%":
          return p.operation_remainder;
        case "==":
          return p.operation_equals;
        case "!=":
          return p.operation_not_equals;
        case "===":
          return p.operation_identical;
        case "!==":
          return p.operation_not_identical;
        case "<":
          return p.operation_less_then;
        case ">":
          return p.operation_greater_then;
        case "<=":
          return p.operation_less_or_equals_then;
        case ">=":
          return p.operation_greater_or_equals_then;
        case "&&":
          return p.operation_logical_and;
        case "||":
          return p.operation_logical_or;
        default:
          throw new u("Unsupported operation " + e);
      }
    }
    function a(e) {
      return l(e) ? "" + e : "";
    }
    function c(e) {
      var t = e.length,
          n = t > 0 ? e[0] : null,
          r = t > 1 ? e[1] : null,
          i = t > 2 ? e[2] : null,
          o = t > 3 ? e[3] : null,
          s = t > 4 ? e[4] : null,
          c = t > 5 ? e[5] : null,
          l = t > 6 ? e[6] : null,
          f = t > 7 ? e[7] : null,
          h = t > 8 ? e[8] : null,
          d = t > 9 ? e[9] : null;
      switch (t - 1) {
        case 1:
          return function(e) {
            return n + a(e) + r;
          };
        case 2:
          return function(e, t) {
            return n + a(e) + r + a(t) + i;
          };
        case 3:
          return function(e, t, s) {
            return n + a(e) + r + a(t) + i + a(s) + o;
          };
        case 4:
          return function(e, t, c, u) {
            return n + a(e) + r + a(t) + i + a(c) + o + a(u) + s;
          };
        case 5:
          return function(e, t, u, l, f) {
            return n + a(e) + r + a(t) + i + a(u) + o + a(l) + s + a(f) + c;
          };
        case 6:
          return function(e, t, u, f, h, d) {
            return n + a(e) + r + a(t) + i + a(u) + o + a(f) + s + a(h) + c + a(d) + l;
          };
        case 7:
          return function(e, t, u, h, d, p, g) {
            return n + a(e) + r + a(t) + i + a(u) + o + a(h) + s + a(d) + c + a(p) + l + a(g) + f;
          };
        case 8:
          return function(e, t, u, d, p, g, m, v) {
            return n + a(e) + r + a(t) + i + a(u) + o + a(d) + s + a(p) + c + a(g) + l + a(m) + f + a(v) + h;
          };
        case 9:
          return function(e, t, u, p, g, m, v, _, y) {
            return n + a(e) + r + a(t) + i + a(u) + o + a(p) + s + a(g) + c + a(m) + l + a(v) + f + a(_) + h + a(y) + d;
          };
        default:
          throw new u("Does not support more than 9 expressions");
      }
    }
    var u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y,
        b,
        w,
        C,
        R;
    return e("createPropertyRecords", t), e("createEventRecords", n), {
      setters: [function(e) {
        u = e.BaseException, l = e.isPresent, f = e.isString;
      }, function(e) {
        h = e.ListWrapper;
      }, function(e) {
        d = e.ImplicitReceiver;
      }, function(e) {
        p = e.ChangeDetectionUtil;
      }, function(e) {
        g = e.DynamicChangeDetector;
      }, function(e) {
        m = e.DirectiveIndex;
      }, function(e) {
        v = e.EventBinding;
      }, function(e) {
        _ = e.coalesce;
      }, function(e) {
        y = e.ProtoRecord, b = e.RecordType;
      }],
      execute: function() {
        w = function() {
          function e(e) {
            this.definition = e, this._propertyBindingRecords = t(e), this._eventBindingRecords = n(e);
          }
          return $traceurRuntime.createClass(e, {instantiate: function(e) {
              return new g(this.definition.id, this.definition.strategy, e, this._propertyBindingRecords, this._eventBindingRecords, this.definition.directiveRecords);
            }}, {});
        }(), e("DynamicProtoChangeDetector", w), C = function() {
          function e() {
            this.records = [];
          }
          return $traceurRuntime.createClass(e, {
            add: function(e) {
              var t = void 0 !== arguments[1] ? arguments[1] : null,
                  n = h.last(this.records);
              l(n) && n.bindingRecord.directiveRecord == e.directiveRecord && (n.lastInDirective = !1);
              var r = this.records.length;
              this._appendRecords(e, t);
              var i = h.last(this.records);
              l(i) && i !== n && (i.lastInBinding = !0, i.lastInDirective = !0, this._setArgumentToPureFunction(r));
            },
            _setArgumentToPureFunction: function(e) {
              for (var t = this,
                  n = e; n < this.records.length; ++n) {
                var r = this.records[n];
                r.isPureFunction() && r.args.forEach(function(e) {
                  return t.records[e - 1].argumentToPureFunction = !0;
                });
              }
            },
            _appendRecords: function(e, t) {
              e.isDirectiveLifecycle() ? this.records.push(new y(b.DIRECTIVE_LIFECYCLE, e.lifecycleEvent, null, [], [], -1, null, this.records.length + 1, e, null, !1, !1, !1, !1)) : R.append(this.records, e, t);
            }
          }, {});
        }(), e("ProtoRecordBuilder", C), R = function() {
          function e(e, t, n, r) {
            this._records = e, this._bindingRecord = t, this._expressionAsString = n, this._variableNames = r;
          }
          return $traceurRuntime.createClass(e, {
            visitImplicitReceiver: function(e) {
              return this._bindingRecord.implicitReceiver;
            },
            visitInterpolation: function(e) {
              var t = this._visitAll(e.expressions);
              return this._addRecord(b.INTERPOLATE, "interpolate", c(e.strings), t, e.strings, 0);
            },
            visitLiteralPrimitive: function(e) {
              return this._addRecord(b.CONST, "literal", e.value, [], null, 0);
            },
            visitPropertyRead: function(e) {
              var t = e.receiver.visit(this);
              return l(this._variableNames) && h.contains(this._variableNames, e.name) && e.receiver instanceof d ? this._addRecord(b.LOCAL, e.name, e.name, [], null, t) : this._addRecord(b.PROPERTY_READ, e.name, e.getter, [], null, t);
            },
            visitPropertyWrite: function(e) {
              if (l(this._variableNames) && h.contains(this._variableNames, e.name) && e.receiver instanceof d)
                throw new u("Cannot reassign a variable binding " + e.name);
              var t = e.receiver.visit(this),
                  n = e.value.visit(this);
              return this._addRecord(b.PROPERTY_WRITE, e.name, e.setter, [n], null, t);
            },
            visitKeyedWrite: function(e) {
              var t = e.obj.visit(this),
                  n = e.key.visit(this),
                  r = e.value.visit(this);
              return this._addRecord(b.KEYED_WRITE, null, null, [n, r], null, t);
            },
            visitSafePropertyRead: function(e) {
              var t = e.receiver.visit(this);
              return this._addRecord(b.SAFE_PROPERTY, e.name, e.getter, [], null, t);
            },
            visitMethodCall: function(e) {
              var t = e.receiver.visit(this),
                  n = this._visitAll(e.args);
              if (l(this._variableNames) && h.contains(this._variableNames, e.name)) {
                var r = this._addRecord(b.LOCAL, e.name, e.name, [], null, t);
                return this._addRecord(b.INVOKE_CLOSURE, "closure", null, n, null, r);
              }
              return this._addRecord(b.INVOKE_METHOD, e.name, e.fn, n, null, t);
            },
            visitSafeMethodCall: function(e) {
              var t = e.receiver.visit(this),
                  n = this._visitAll(e.args);
              return this._addRecord(b.SAFE_INVOKE_METHOD, e.name, e.fn, n, null, t);
            },
            visitFunctionCall: function(e) {
              var t = e.target.visit(this),
                  n = this._visitAll(e.args);
              return this._addRecord(b.INVOKE_CLOSURE, "closure", null, n, null, t);
            },
            visitLiteralArray: function(e) {
              var t = "arrayFn" + e.expressions.length;
              return this._addRecord(b.COLLECTION_LITERAL, t, r(e.expressions.length), this._visitAll(e.expressions), null, 0);
            },
            visitLiteralMap: function(e) {
              return this._addRecord(b.COLLECTION_LITERAL, i(e.keys), p.mapFn(e.keys), this._visitAll(e.values), null, 0);
            },
            visitBinary: function(e) {
              var t = e.left.visit(this),
                  n = e.right.visit(this);
              return this._addRecord(b.PRIMITIVE_OP, o(e.operation), s(e.operation), [t, n], null, 0);
            },
            visitPrefixNot: function(e) {
              var t = e.expression.visit(this);
              return this._addRecord(b.PRIMITIVE_OP, "operation_negate", p.operation_negate, [t], null, 0);
            },
            visitConditional: function(e) {
              var t = e.condition.visit(this),
                  n = e.trueExp.visit(this),
                  r = e.falseExp.visit(this);
              return this._addRecord(b.PRIMITIVE_OP, "cond", p.cond, [t, n, r], null, 0);
            },
            visitPipe: function(e) {
              var t = e.exp.visit(this),
                  n = this._visitAll(e.args);
              return this._addRecord(b.PIPE, e.name, e.name, n, null, t);
            },
            visitKeyedRead: function(e) {
              var t = e.obj.visit(this),
                  n = e.key.visit(this);
              return this._addRecord(b.KEYED_READ, "keyedAccess", p.keyedAccess, [n], null, t);
            },
            visitChain: function(e) {
              var t = this,
                  n = e.expressions.map(function(e) {
                    return e.visit(t);
                  });
              return this._addRecord(b.CHAIN, "chain", null, n, null, 0);
            },
            visitIf: function(e) {
              throw new u("Not supported");
            },
            _visitAll: function(e) {
              for (var t = h.createFixedSize(e.length),
                  n = 0; n < e.length; ++n)
                t[n] = e[n].visit(this);
              return t;
            },
            _addRecord: function(e, t, n, r, i, o) {
              var s = this._records.length + 1;
              return this._records.push(o instanceof m ? new y(e, t, n, r, i, -1, o, s, this._bindingRecord, this._expressionAsString, !1, !1, !1, !1) : new y(e, t, n, r, i, o, null, s, this._bindingRecord, this._expressionAsString, !1, !1, !1, !1)), s;
            }
          }, {
            append: function(t, n, r) {
              var i = new e(t, n, n.ast.toString(), r);
              n.ast.visit(i);
            },
            create: function(t, n) {
              var r = [];
              return e.append(r, t, n), r[r.length - 1].lastInBinding = !0, r;
            }
          });
        }();
      }
    };
  }), System.register("angular2/src/core/metadata/view", ["angular2/src/facade/lang", "angular2/src/render/api"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i;
    return {
      setters: [function(e) {
        r = e.CONST;
      }, function(t) {
        e("ViewEncapsulation", t.ViewEncapsulation);
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, i = $traceurRuntime.createClass(function() {
          var e = void 0 !== arguments[0] ? arguments[0] : {},
              t = e.templateUrl,
              n = e.template,
              r = e.directives,
              i = e.pipes,
              o = e.encapsulation,
              s = e.styles,
              a = e.styleUrls;
          this.templateUrl = t, this.template = n, this.styleUrls = a, this.styles = s, this.directives = r, this.pipes = i, this.encapsulation = o;
        }, {}, {}), e("ViewMetadata", i), e("ViewMetadata", i = t([r(), n("design:paramtypes", [Object])], i));
      }
    };
  }), System.register("angular2/src/dom/browser_adapter", ["angular2/src/facade/collection", "angular2/src/facade/lang", "angular2/src/dom/dom_adapter", "angular2/src/dom/generic_browser_adapter"], function(e) {
    "use strict";
    function t() {
      return i(p) && (p = document.querySelector("base"), i(p)) ? null : p.getAttribute("href");
    }
    function n(e) {
      return i(g) && (g = document.createElement("a")), g.setAttribute("href", e), "/" === g.pathname.charAt(0) ? g.pathname : "/" + g.pathname;
    }
    var r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g;
    return {
      setters: [function(e) {
        r = e.ListWrapper;
      }, function(e) {
        i = e.isBlank, o = e.isPresent, s = e.global;
      }, function(e) {
        a = e.setRootDomAdapter;
      }, function(e) {
        c = e.GenericBrowserDomAdapter;
      }],
      execute: function() {
        u = {
          "class": "className",
          innerHtml: "innerHTML",
          readonly: "readOnly",
          tabindex: "tabIndex"
        }, l = 3, f = {
          "\b": "Backspace",
          "	": "Tab",
          "": "Delete",
          "": "Escape",
          Del: "Delete",
          Esc: "Escape",
          Left: "ArrowLeft",
          Right: "ArrowRight",
          Up: "ArrowUp",
          Down: "ArrowDown",
          Menu: "ContextMenu",
          Scroll: "ScrollLock",
          Win: "OS"
        }, h = {
          A: "1",
          B: "2",
          C: "3",
          D: "4",
          E: "5",
          F: "6",
          G: "7",
          H: "8",
          I: "9",
          J: "*",
          K: "+",
          M: "-",
          N: ".",
          O: "/",
          "`": "0",
          "": "NumLock"
        }, d = function(e) {
          function c() {
            $traceurRuntime.superConstructor(c).apply(this, arguments);
          }
          return $traceurRuntime.createClass(c, {
            hasProperty: function(e, t) {
              return t in e;
            },
            setProperty: function(e, t, n) {
              e[t] = n;
            },
            getProperty: function(e, t) {
              return e[t];
            },
            invoke: function(e, t, n) {
              e[t].apply(e, n);
            },
            logError: function(e) {
              window.console.error(e);
            },
            log: function(e) {
              window.console.log(e);
            },
            logGroup: function(e) {
              window.console.group ? window.console.group(e) : window.console.log(e);
            },
            logGroupEnd: function() {
              window.console.groupEnd && window.console.groupEnd();
            },
            get attrToPropMap() {
              return u;
            },
            query: function(e) {
              return document.querySelector(e);
            },
            querySelector: function(e, t) {
              return e.querySelector(t);
            },
            querySelectorAll: function(e, t) {
              return e.querySelectorAll(t);
            },
            on: function(e, t, n) {
              e.addEventListener(t, n, !1);
            },
            onAndCancel: function(e, t, n) {
              return e.addEventListener(t, n, !1), function() {
                e.removeEventListener(t, n, !1);
              };
            },
            dispatchEvent: function(e, t) {
              e.dispatchEvent(t);
            },
            createMouseEvent: function(e) {
              var t = document.createEvent("MouseEvent");
              return t.initEvent(e, !0, !0), t;
            },
            createEvent: function(e) {
              var t = document.createEvent("Event");
              return t.initEvent(e, !0, !0), t;
            },
            preventDefault: function(e) {
              e.preventDefault(), e.returnValue = !1;
            },
            isPrevented: function(e) {
              return e.defaultPrevented || o(e.returnValue) && !e.returnValue;
            },
            getInnerHTML: function(e) {
              return e.innerHTML;
            },
            getOuterHTML: function(e) {
              return e.outerHTML;
            },
            nodeName: function(e) {
              return e.nodeName;
            },
            nodeValue: function(e) {
              return e.nodeValue;
            },
            type: function(e) {
              return e.type;
            },
            content: function(e) {
              return this.hasProperty(e, "content") ? e.content : e;
            },
            firstChild: function(e) {
              return e.firstChild;
            },
            nextSibling: function(e) {
              return e.nextSibling;
            },
            parentElement: function(e) {
              return e.parentNode;
            },
            childNodes: function(e) {
              return e.childNodes;
            },
            childNodesAsList: function(e) {
              for (var t = e.childNodes,
                  n = r.createFixedSize(t.length),
                  i = 0; i < t.length; i++)
                n[i] = t[i];
              return n;
            },
            clearNodes: function(e) {
              for (; e.firstChild; )
                e.removeChild(e.firstChild);
            },
            appendChild: function(e, t) {
              e.appendChild(t);
            },
            removeChild: function(e, t) {
              e.removeChild(t);
            },
            replaceChild: function(e, t, n) {
              e.replaceChild(t, n);
            },
            remove: function(e) {
              return e.parentNode.removeChild(e), e;
            },
            insertBefore: function(e, t) {
              e.parentNode.insertBefore(t, e);
            },
            insertAllBefore: function(e, t) {
              r.forEach(t, function(t) {
                e.parentNode.insertBefore(t, e);
              });
            },
            insertAfter: function(e, t) {
              e.parentNode.insertBefore(t, e.nextSibling);
            },
            setInnerHTML: function(e, t) {
              e.innerHTML = t;
            },
            getText: function(e) {
              return e.textContent;
            },
            setText: function(e, t) {
              e.textContent = t;
            },
            getValue: function(e) {
              return e.value;
            },
            setValue: function(e, t) {
              e.value = t;
            },
            getChecked: function(e) {
              return e.checked;
            },
            setChecked: function(e, t) {
              e.checked = t;
            },
            createComment: function(e) {
              return document.createComment(e);
            },
            createTemplate: function(e) {
              var t = document.createElement("template");
              return t.innerHTML = e, t;
            },
            createElement: function(e) {
              var t = void 0 !== arguments[1] ? arguments[1] : document;
              return t.createElement(e);
            },
            createTextNode: function(e) {
              var t = void 0 !== arguments[1] ? arguments[1] : document;
              return t.createTextNode(e);
            },
            createScriptTag: function(e, t) {
              var n = void 0 !== arguments[2] ? arguments[2] : document,
                  r = n.createElement("SCRIPT");
              return r.setAttribute(e, t), r;
            },
            createStyleElement: function(e) {
              var t = void 0 !== arguments[1] ? arguments[1] : document,
                  n = t.createElement("style");
              return this.appendChild(n, this.createTextNode(e)), n;
            },
            createShadowRoot: function(e) {
              return e.createShadowRoot();
            },
            getShadowRoot: function(e) {
              return e.shadowRoot;
            },
            getHost: function(e) {
              return e.host;
            },
            clone: function(e) {
              return e.cloneNode(!0);
            },
            getElementsByClassName: function(e, t) {
              return e.getElementsByClassName(t);
            },
            getElementsByTagName: function(e, t) {
              return e.getElementsByTagName(t);
            },
            classList: function(e) {
              return Array.prototype.slice.call(e.classList, 0);
            },
            addClass: function(e, t) {
              e.classList.add(t);
            },
            removeClass: function(e, t) {
              e.classList.remove(t);
            },
            hasClass: function(e, t) {
              return e.classList.contains(t);
            },
            setStyle: function(e, t, n) {
              e.style[t] = n;
            },
            removeStyle: function(e, t) {
              e.style[t] = null;
            },
            getStyle: function(e, t) {
              return e.style[t];
            },
            tagName: function(e) {
              return e.tagName;
            },
            attributeMap: function(e) {
              for (var t = new Map,
                  n = e.attributes,
                  r = 0; r < n.length; r++) {
                var i = n[r];
                t.set(i.name, i.value);
              }
              return t;
            },
            hasAttribute: function(e, t) {
              return e.hasAttribute(t);
            },
            getAttribute: function(e, t) {
              return e.getAttribute(t);
            },
            setAttribute: function(e, t, n) {
              e.setAttribute(t, n);
            },
            removeAttribute: function(e, t) {
              e.removeAttribute(t);
            },
            templateAwareRoot: function(e) {
              return this.isTemplateElement(e) ? this.content(e) : e;
            },
            createHtmlDocument: function() {
              return document.implementation.createHTMLDocument("fakeTitle");
            },
            defaultDoc: function() {
              return document;
            },
            getBoundingClientRect: function(e) {
              try {
                return e.getBoundingClientRect();
              } catch (t) {
                return {
                  top: 0,
                  bottom: 0,
                  left: 0,
                  right: 0,
                  width: 0,
                  height: 0
                };
              }
            },
            getTitle: function() {
              return document.title;
            },
            setTitle: function(e) {
              document.title = e || "";
            },
            elementMatches: function(e, t) {
              return e instanceof HTMLElement && e.matches ? e.matches(t) : e.msMatchesSelector(t);
            },
            isTemplateElement: function(e) {
              return e instanceof HTMLElement && "TEMPLATE" == e.nodeName;
            },
            isTextNode: function(e) {
              return e.nodeType === Node.TEXT_NODE;
            },
            isCommentNode: function(e) {
              return e.nodeType === Node.COMMENT_NODE;
            },
            isElementNode: function(e) {
              return e.nodeType === Node.ELEMENT_NODE;
            },
            hasShadowRoot: function(e) {
              return e instanceof HTMLElement && o(e.shadowRoot);
            },
            isShadowRoot: function(e) {
              return e instanceof DocumentFragment;
            },
            importIntoDoc: function(e) {
              var t = e;
              return this.isTemplateElement(e) && (t = this.content(e)), document.importNode(t, !0);
            },
            adoptNode: function(e) {
              return document.adoptNode(e);
            },
            isPageRule: function(e) {
              return e.type === CSSRule.PAGE_RULE;
            },
            isStyleRule: function(e) {
              return e.type === CSSRule.STYLE_RULE;
            },
            isMediaRule: function(e) {
              return e.type === CSSRule.MEDIA_RULE;
            },
            isKeyframesRule: function(e) {
              return e.type === CSSRule.KEYFRAMES_RULE;
            },
            getHref: function(e) {
              return e.href;
            },
            getEventKey: function(e) {
              var t = e.key;
              if (i(t)) {
                if (t = e.keyIdentifier, i(t))
                  return "Unidentified";
                t.startsWith("U+") && (t = String.fromCharCode(parseInt(t.substring(2), 16)), e.location === l && h.hasOwnProperty(t) && (t = h[t]));
              }
              return f.hasOwnProperty(t) && (t = f[t]), t;
            },
            getGlobalEventTarget: function(e) {
              return "window" == e ? window : "document" == e ? document : "body" == e ? document.body : void 0;
            },
            getHistory: function() {
              return window.history;
            },
            getLocation: function() {
              return window.location;
            },
            getBaseHref: function() {
              var e = t();
              return i(e) ? null : n(e);
            },
            resetBaseElement: function() {
              p = null;
            },
            getUserAgent: function() {
              return window.navigator.userAgent;
            },
            setData: function(e, t, n) {
              e.dataset[t] = n;
            },
            getData: function(e, t) {
              return e.dataset[t];
            },
            setGlobalVar: function(e, t) {
              s[e] = t;
            }
          }, {makeCurrent: function() {
              a(new c);
            }}, e);
        }(c), e("BrowserDomAdapter", d), p = null, g = null;
      }
    };
  }), System.register("angular2/src/facade/async", ["angular2/src/facade/lang", "rx"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a;
    return {
      setters: [function(e) {
        t = e.global;
      }, function(e) {
        n = e;
      }],
      execute: function() {
        e("Promise", Promise), r = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {}, {
            resolve: function(e) {
              return Promise.resolve(e);
            },
            reject: function(e, t) {
              return Promise.reject(e);
            },
            catchError: function(e, t) {
              return e["catch"](t);
            },
            all: function(e) {
              return 0 == e.length ? Promise.resolve([]) : Promise.all(e);
            },
            then: function(e, t, n) {
              return e.then(t, n);
            },
            wrap: function(e) {
              return new Promise(function(t, n) {
                try {
                  t(e());
                } catch (r) {
                  n(r);
                }
              });
            },
            completer: function() {
              var e,
                  t,
                  n = new Promise(function(n, r) {
                    e = n, t = r;
                  });
              return {
                promise: n,
                resolve: e,
                reject: t
              };
            }
          });
        }(), e("PromiseWrapper", r), i = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {}, {
            setTimeout: function(e, n) {
              return t.setTimeout(e, n);
            },
            clearTimeout: function(e) {
              t.clearTimeout(e);
            },
            setInterval: function(e, n) {
              return t.setInterval(e, n);
            },
            clearInterval: function(e) {
              t.clearInterval(e);
            }
          });
        }(), e("TimerWrapper", i), o = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {}, {
            subscribe: function(e, t) {
              var n = void 0 !== arguments[2] ? arguments[2] : null,
                  r = void 0 !== arguments[3] ? arguments[3] : null;
              return e.observer({
                next: t,
                "throw": n,
                "return": r
              });
            },
            isObservable: function(e) {
              return e instanceof s;
            },
            dispose: function(e) {
              e.dispose();
            },
            callNext: function(e, t) {
              e.next(t);
            },
            callThrow: function(e, t) {
              e["throw"](t);
            },
            callReturn: function(e) {
              e["return"](null);
            }
          });
        }(), e("ObservableWrapper", o), s = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {observer: function(e) {
              return null;
            }}, {});
        }(), e("Observable", s), a = function(e) {
          function t() {
            $traceurRuntime.superConstructor(t).call(this), n.hasOwnProperty("default") ? (this._subject = new n["default"].Rx.Subject, this._immediateScheduler = n["default"].Rx.Scheduler.immediate) : (this._subject = new n.Subject, this._immediateScheduler = n.Scheduler.immediate);
          }
          return $traceurRuntime.createClass(t, {
            observer: function(e) {
              return this._subject.observeOn(this._immediateScheduler).subscribe(function(t) {
                setTimeout(function() {
                  return e.next(t);
                });
              }, function(t) {
                return e["throw"] ? e["throw"](t) : null;
              }, function() {
                return e["return"] ? e["return"]() : null;
              });
            },
            toRx: function() {
              return this._subject;
            },
            next: function(e) {
              this._subject.onNext(e);
            },
            "throw": function(e) {
              this._subject.onError(e);
            },
            "return": function(e) {
              this._subject.onCompleted();
            }
          }, {}, e);
        }(s), e("EventEmitter", a);
      }
    };
  }), System.register("angular2/src/core/compiler/view", ["angular2/src/facade/collection", "angular2/src/change_detection/change_detection", "angular2/src/change_detection/interfaces", "angular2/src/core/compiler/element_binder", "angular2/src/facade/lang", "angular2/src/core/compiler/view_ref"], function(e) {
    "use strict";
    function t(e, t) {
      for (var n = r.createGrowableSize(t),
          i = 0; i < e.length; i++) {
        var o = e[i];
        l(o) && (n[e[i]] = i);
      }
      return n;
    }
    function n(e) {
      for (var t = {},
          n = e; l(n); )
        t = s.merge(t, i.toStringMap(n.current)), n = n.parent;
      return t;
    }
    var r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y,
        b;
    return {
      setters: [function(e) {
        r = e.ListWrapper, i = e.MapWrapper, o = e.Map, s = e.StringMapWrapper;
      }, function(e) {
        a = e.Locals;
      }, function(t) {
        c = t.DebugContext, e("DebugContext", t.DebugContext);
      }, function(e) {
        u = e.ElementBinder;
      }, function(e) {
        l = e.isPresent, f = e.BaseException;
      }, function(e) {
        h = e.ViewRef, d = e.ProtoViewRef, p = e.internalView;
      }],
      execute: function() {
        g = function() {
          function e(e) {
            this.renderProtoViewRef = e.mergedProtoViewRef, this.renderFragmentCount = e.fragmentCount, this.renderElementIndices = e.mappedElementIndices, this.renderInverseElementIndices = t(this.renderElementIndices, e.mappedElementCount), this.renderTextIndices = e.mappedTextIndices, this.hostElementIndicesByViewIndex = e.hostElementIndicesByViewIndex, this.nestedViewIndicesByElementIndex = t(this.hostElementIndicesByViewIndex, this.renderElementIndices.length), this.nestedViewCountByViewIndex = e.nestedViewCountByViewIndex;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("AppProtoViewMergeMapping", g), m = function() {
          function e() {
            this.views = [];
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("AppViewContainer", m), v = function() {
          function e(e, t, n, r, o, s, c, u, l) {
            this.renderer = e, this.proto = t, this.mainMergeMapping = n, this.viewOffset = r, this.elementOffset = o, this.textOffset = s, this.render = u, this.renderFragment = l, this.views = null, this.elementInjectors = null, this.viewContainers = null, this.preBuiltObjects = null, this.changeDetector = null, this.context = null, this.ref = new h(this), this.locals = new a(null, i.clone(c));
          }
          return $traceurRuntime.createClass(e, {
            init: function(e, t, n, r, i, o, s) {
              this.changeDetector = e, this.elementInjectors = t, this.rootElementInjectors = n, this.preBuiltObjects = r, this.views = i, this.elementRefs = o, this.viewContainers = s;
            },
            setLocal: function(e, t) {
              if (!this.hydrated())
                throw new f("Cannot set locals on dehydrated view.");
              if (this.proto.variableBindings.has(e)) {
                var n = this.proto.variableBindings.get(e);
                this.locals.set(n, t);
              }
            },
            hydrated: function() {
              return l(this.context);
            },
            triggerEventHandlers: function(e, t, n) {
              var r = new o;
              r.set("$event", t), this.dispatchEvent(n, e, r);
            },
            notifyOnBinding: function(e, t) {
              if (e.isTextNode())
                this.renderer.setText(this.render, this.mainMergeMapping.renderTextIndices[e.elementIndex + this.textOffset], t);
              else {
                var n = this.elementRefs[this.elementOffset + e.elementIndex];
                if (e.isElementProperty())
                  this.renderer.setElementProperty(n, e.propertyName, t);
                else if (e.isElementAttribute())
                  this.renderer.setElementAttribute(n, e.propertyName, t);
                else if (e.isElementClass())
                  this.renderer.setElementClass(n, e.propertyName, t);
                else {
                  if (!e.isElementStyle())
                    throw new f("Unsupported directive record");
                  var r = l(e.propertyUnit) ? e.propertyUnit : "";
                  this.renderer.setElementStyle(n, e.propertyName, "" + t + r);
                }
              }
            },
            notifyOnAllChangesDone: function() {
              for (var e = this.proto.elementBinders.length,
                  t = this.elementInjectors,
                  n = e - 1; n >= 0; n--)
                l(t[n + this.elementOffset]) && t[n + this.elementOffset].onAllChangesDone();
            },
            getDirectiveFor: function(e) {
              var t = this.elementInjectors[this.elementOffset + e.elementIndex];
              return t.getDirectiveAtIndex(e.directiveIndex);
            },
            getNestedView: function(e) {
              var t = this.mainMergeMapping.nestedViewIndicesByElementIndex[e];
              return l(t) ? this.views[t] : null;
            },
            getHostElement: function() {
              var e = this.mainMergeMapping.hostElementIndicesByViewIndex[this.viewOffset];
              return l(e) ? this.elementRefs[e] : null;
            },
            getDebugContext: function(e, t) {
              try {
                var r = this.elementOffset + e,
                    i = r < this.elementRefs.length,
                    o = i ? this.elementRefs[this.elementOffset + e] : null,
                    s = this.getHostElement(),
                    a = i ? this.elementInjectors[this.elementOffset + e] : null,
                    u = l(o) ? o.nativeElement : null,
                    f = l(s) ? s.nativeElement : null,
                    h = l(t) ? this.getDirectiveFor(t) : null,
                    d = l(a) ? a.getInjector() : null;
                return new c(u, f, h, this.context, n(this.locals), d);
              } catch (p) {
                return null;
              }
            },
            getDetectorFor: function(e) {
              var t = this.getNestedView(this.elementOffset + e.elementIndex);
              return l(t) ? t.changeDetector : null;
            },
            invokeElementMethod: function(e, t, n) {
              this.renderer.invokeElementMethod(this.elementRefs[e], t, n);
            },
            dispatchRenderEvent: function(e, t, n) {
              var r = this.elementRefs[this.mainMergeMapping.renderInverseElementIndices[e]],
                  i = p(r.parentView);
              return i.dispatchEvent(r.boundElementIndex, t, n);
            },
            dispatchEvent: function(e, t, n) {
              try {
                return this.hydrated() ? !this.changeDetector.handleEvent(t, e - this.elementOffset, new a(this.locals, n)) : !0;
              } catch (r) {
                var i = this.getDebugContext(e - this.elementOffset, null),
                    o = l(i) ? new _(i.element, i.componentElement, i.context, i.locals, i.injector) : null;
                throw new y(t, r, r.stack, o);
              }
            }
          }, {});
        }(), e("AppView", v), _ = function() {
          function e(e, t, n, r, i) {
            this.element = e, this.componentElement = t, this.context = n, this.locals = r, this.injector = i;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), y = function(e) {
          function t(e, n, r, i) {
            $traceurRuntime.superConstructor(t).call(this, 'Error during evaluation of "' + e + '"', n, r, i);
          }
          return $traceurRuntime.createClass(t, {}, {}, e);
        }(f), b = function() {
          function e(e, t, n, r, s, a, c, u) {
            var f = this;
            this.type = e, this.isEmbeddedFragment = t, this.render = n, this.protoChangeDetector = r, this.variableBindings = s, this.variableLocations = a, this.textBindingCount = c, this.pipes = u, this.elementBinders = [], this.protoLocals = new o, this.ref = new d(this), l(s) && i.forEach(s, function(e, t) {
              f.protoLocals.set(e, null);
            });
          }
          return $traceurRuntime.createClass(e, {bindElement: function(e, t, n) {
              var r = void 0 !== arguments[3] ? arguments[3] : null,
                  i = new u(this.elementBinders.length, e, t, n, r);
              return this.elementBinders.push(i), i;
            }}, {});
        }(), e("AppProtoView", b);
      }
    };
  }), System.register("angular2/src/core/compiler/view_manager_utils", ["angular2/di", "angular2/src/facade/collection", "angular2/src/core/compiler/element_injector", "angular2/src/facade/lang", "angular2/src/core/compiler/view", "angular2/src/core/compiler/view_ref", "angular2/src/core/compiler/element_ref", "angular2/src/core/compiler/template_ref", "angular2/src/core/pipes/pipes", "angular2/src/render/api"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m;
    return {
      setters: [function(e) {
        r = e.Injector, i = e.Injectable;
      }, function(e) {
        o = e.ListWrapper, s = e.MapWrapper;
      }, function(e) {
        a = e;
      }, function(e) {
        c = e.isPresent, u = e.isBlank;
      }, function(e) {
        l = e;
      }, function(e) {
        f = e.internalView;
      }, function(e) {
        h = e.ElementRef;
      }, function(e) {
        d = e.TemplateRef;
      }, function(e) {
        p = e.Pipes;
      }, function(e) {
        g = e.ViewType;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, m = $traceurRuntime.createClass(function() {}, {
          getComponentInstance: function(e, t) {
            var n = e.elementInjectors[t];
            return n.getComponent();
          },
          createView: function(e, t, n, r) {
            for (var i = t.fragmentRefs,
                s = t.viewRef,
                u = e.mergeMapping.renderElementIndices.length,
                p = e.mergeMapping.nestedViewCountByViewIndex[0] + 1,
                m = o.createFixedSize(u),
                v = o.createFixedSize(u),
                _ = o.createFixedSize(u),
                y = o.createFixedSize(u),
                b = o.createFixedSize(p),
                w = 0,
                C = 0,
                R = 0,
                E = 0; p > E; E++) {
              var x = e.mergeMapping.hostElementIndicesByViewIndex[E],
                  S = c(x) ? f(m[x].parentView) : null,
                  D = c(x) ? S.proto.elementBinders[x - S.elementOffset].nestedProtoView : e,
                  I = null;
              (0 === E || D.type === g.EMBEDDED) && (I = i[R++]);
              var P = new l.AppView(r, D, e.mergeMapping, E, w, C, D.protoLocals, s, I);
              b[E] = P;
              for (var A = [],
                  O = 0; O < D.elementBinders.length; O++) {
                var T = D.elementBinders[O],
                    j = w + O,
                    N = null,
                    V = T.protoElementInjector;
                if (c(V))
                  if (c(V.parent)) {
                    var k = y[w + V.parent.index];
                    N = V.instantiate(k);
                  } else
                    N = V.instantiate(null), A.push(N);
                y[j] = N;
                var M = new h(P.ref, j, e.mergeMapping.renderElementIndices[j], r);
                if (m[M.boundElementIndex] = M, c(N)) {
                  var B = T.hasEmbeddedProtoView() ? new d(M) : null;
                  _[j] = new a.PreBuiltObjects(n, P, M, B);
                }
              }
              P.init(D.protoChangeDetector.instantiate(P), y, A, _, b, m, v), c(S) && D.type === g.COMPONENT && S.changeDetector.addShadowDomChild(P.changeDetector), w += D.elementBinders.length, C += D.textBindingCount;
            }
            return b[0];
          },
          hydrateRootHostView: function(e, t) {
            this._hydrateView(e, t, null, new Object, null);
          },
          attachViewInContainer: function(e, t, n, r, i, s) {
            u(n) && (n = e, r = t), e.changeDetector.addChild(s.changeDetector);
            var a = e.viewContainers[t];
            u(a) && (a = new l.AppViewContainer, e.viewContainers[t] = a), o.insert(a.views, i, s);
            var f,
                h = n.elementInjectors[r];
            f = 0 == i ? h : o.last(a.views[i - 1].rootElementInjectors);
            for (var d = s.rootElementInjectors.length - 1; d >= 0; d--)
              c(h.parent) ? s.rootElementInjectors[d].linkAfter(h.parent, f) : n.rootElementInjectors.push(s.rootElementInjectors[d]);
          },
          detachViewInContainer: function(e, t, n) {
            var r = e.viewContainers[t],
                i = r.views[n];
            i.changeDetector.remove(), o.removeAt(r.views, n);
            for (var s = 0; s < i.rootElementInjectors.length; ++s) {
              var a = i.rootElementInjectors[s];
              if (c(a.parent))
                a.unlink();
              else {
                var u = o.indexOf(e.rootElementInjectors, a);
                u >= 0 && o.removeAt(e.rootElementInjectors, u);
              }
            }
          },
          hydrateViewInContainer: function(e, t, n, i, o, s) {
            u(n) && (n = e, i = t);
            var a = e.viewContainers[t],
                l = a.views[o],
                f = n.elementInjectors[i],
                h = c(s) ? r.fromResolvedBindings(s) : null;
            this._hydrateView(l, h, f.getHost(), n.context, n.locals);
          },
          _hydrateView: function(e, t, n, r, i) {
            for (var o = e.viewOffset,
                s = o + e.mainMergeMapping.nestedViewCountByViewIndex[o]; s >= o; ) {
              var a = e.views[o],
                  u = a.proto;
              if (a !== e && a.proto.type === g.EMBEDDED)
                o += e.mainMergeMapping.nestedViewCountByViewIndex[o] + 1;
              else {
                if (a !== e) {
                  t = null, i = null;
                  var l = e.mainMergeMapping.hostElementIndicesByViewIndex[o];
                  n = e.elementInjectors[l], r = n.getComponent();
                }
                a.context = r, a.locals.parent = i;
                for (var f = u.elementBinders,
                    h = 0; h < f.length; h++) {
                  var d = h + a.elementOffset,
                      m = e.elementInjectors[d];
                  c(m) && (m.hydrate(t, n, a.preBuiltObjects[d]), this._populateViewLocals(a, m, d), this._setUpEventEmitters(a, m, d), this._setUpHostActions(a, m, d));
                }
                var v = c(n) ? new p(a.proto.pipes, n.getInjector()) : null;
                a.changeDetector.hydrate(a.context, a.locals, a, v), o++;
              }
            }
          },
          _populateViewLocals: function(e, t, n) {
            c(t.getDirectiveVariableBindings()) && s.forEach(t.getDirectiveVariableBindings(), function(r, i) {
              u(r) ? e.locals.set(i, e.elementRefs[n].nativeElement) : e.locals.set(i, t.getDirectiveAtIndex(r));
            });
          },
          _setUpEventEmitters: function(e, t, n) {
            for (var r = t.getEventEmitterAccessors(),
                i = 0; i < r.length; ++i)
              for (var o = r[i],
                  s = t.getDirectiveAtIndex(i),
                  a = 0; a < o.length; ++a) {
                var c = o[a];
                c.subscribe(e, n, s);
              }
          },
          _setUpHostActions: function(e, t, n) {
            for (var r = t.getHostActionAccessors(),
                i = 0; i < r.length; ++i)
              for (var o = r[i],
                  s = t.getDirectiveAtIndex(i),
                  a = 0; a < o.length; ++a) {
                var c = o[a];
                c.subscribe(e, n, s);
              }
          },
          dehydrateView: function(e) {
            for (var t = e.viewOffset + e.mainMergeMapping.nestedViewCountByViewIndex[e.viewOffset],
                n = e.viewOffset; t >= n; n++) {
              var r = e.views[n];
              if (r.hydrated()) {
                c(r.locals) && r.locals.clearValues(), r.context = null, r.changeDetector.dehydrate();
                for (var i = r.proto.elementBinders,
                    o = 0; o < i.length; o++) {
                  var s = e.elementInjectors[r.elementOffset + o];
                  c(s) && s.dehydrate();
                }
              }
            }
          }
        }, {}), e("AppViewManagerUtils", m), e("AppViewManagerUtils", m = t([i(), n("design:paramtypes", [])], m));
      }
    };
  }), System.register("angular2/src/pipes/uppercase_pipe", ["angular2/src/facade/lang", "angular2/di", "angular2/src/pipes/invalid_pipe_argument_exception", "angular2/src/core/metadata"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l;
    return {
      setters: [function(e) {
        r = e.isString, i = e.StringWrapper, o = e.CONST, s = e.isBlank;
      }, function(e) {
        a = e.Injectable;
      }, function(e) {
        c = e.InvalidPipeArgumentException;
      }, function(e) {
        u = e.Pipe;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, l = $traceurRuntime.createClass(function() {}, {transform: function(e) {
            if (void 0 !== arguments[1] ? arguments[1] : null, s(e))
              return e;
            if (!r(e))
              throw new c(l, e);
            return i.toUpperCase(e);
          }}, {}), e("UpperCasePipe", l), e("UpperCasePipe", l = t([o(), u({name: "uppercase"}), a(), n("design:paramtypes", [])], l));
      }
    };
  }), System.register("angular2/src/pipes/date_pipe", ["angular2/src/facade/lang", "angular2/src/facade/intl", "angular2/di", "angular2/src/facade/collection", "angular2/src/pipes/invalid_pipe_argument_exception", "angular2/src/core/metadata"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g;
    return {
      setters: [function(e) {
        r = e.isDate, i = e.isNumber, o = e.isPresent, s = e.DateWrapper, a = e.CONST, c = e.isBlank;
      }, function(e) {
        u = e.DateFormatter;
      }, function(e) {
        l = e.Injectable;
      }, function(e) {
        f = e.StringMapWrapper;
      }, function(e) {
        h = e.InvalidPipeArgumentException;
      }, function(e) {
        d = e.Pipe;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, p = "en-US", g = $traceurRuntime.createClass(function() {}, {
          transform: function(e, t) {
            if (c(e))
              return null;
            if (!this.supports(e))
              throw new h(g, e);
            var n = o(t) && t.length > 0 ? t[0] : "mediumDate";
            return i(e) && (e = s.fromMillis(e)), f.contains(g._ALIASES, n) && (n = f.get(g._ALIASES, n)), u.format(e, p, n);
          },
          supports: function(e) {
            return r(e) || i(e);
          }
        }, {}), e("DatePipe", g), g._ALIASES = {
          medium: "yMMMdjms",
          "short": "yMdjm",
          fullDate: "yMMMMEEEEd",
          longDate: "yMMMMd",
          mediumDate: "yMMMd",
          shortDate: "yMd",
          mediumTime: "jms",
          shortTime: "jm"
        }, e("DatePipe", g = t([a(), d({name: "date"}), l(), n("design:paramtypes", [])], g));
      }
    };
  }), System.register("angular2/src/pipes/limit_to_pipe", ["angular2/src/facade/lang", "angular2/src/facade/collection", "angular2/src/facade/math", "angular2/di", "angular2/src/pipes/invalid_pipe_argument_exception", "angular2/src/core/metadata"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d;
    return {
      setters: [function(e) {
        r = e.isBlank, i = e.isString, o = e.isArray, s = e.StringWrapper, a = e.BaseException;
      }, function(e) {
        c = e.ListWrapper;
      }, function(e) {
        u = e.Math;
      }, function(e) {
        l = e.Injectable;
      }, function(e) {
        f = e.InvalidPipeArgumentException;
      }, function(e) {
        h = e.Pipe;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, d = $traceurRuntime.createClass(function() {}, {
          supports: function(e) {
            return i(e) || o(e);
          },
          transform: function(e) {
            var t = void 0 !== arguments[1] ? arguments[1] : null;
            if (r(t) || 0 == t.length)
              throw new a("limitTo pipe requires one argument");
            if (!this.supports(e))
              throw new f(d, e);
            if (r(e))
              return e;
            var n = t[0],
                o = 0,
                l = u.min(n, e.length);
            return 0 > n && (o = u.max(0, e.length + n), l = e.length), i(e) ? s.substring(e, o, l) : c.slice(e, o, l);
          }
        }, {}), e("LimitToPipe", d), e("LimitToPipe", d = t([h({name: "limitTo"}), l(), n("design:paramtypes", [])], d));
      }
    };
  }), System.register("angular2/src/render/dom/compiler/style_inliner", ["angular2/di", "angular2/src/render/xhr", "angular2/src/facade/collection", "angular2/src/services/url_resolver", "angular2/src/render/dom/compiler/style_url_resolver", "angular2/src/facade/lang", "angular2/src/facade/async"], function(e) {
    "use strict";
    function t(e) {
      var t = d.firstMatch(y, e);
      return f(t) ? null : h(t[1]) ? t[1] : t[2];
    }
    function n(e) {
      var t = d.firstMatch(b, e);
      if (f(t))
        return null;
      var n = t[1].trim();
      return n.length > 0 ? n : null;
    }
    function r(e, t) {
      return f(t) ? e : "@media " + t + " {\n" + e + "\n}";
    }
    var i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y,
        b;
    return {
      setters: [function(e) {
        s = e.Injectable;
      }, function(e) {
        a = e.XHR;
      }, function(e) {
        c = e.ListWrapper;
      }, function(e) {
        u = e.UrlResolver;
      }, function(e) {
        l = e.StyleUrlResolver;
      }, function(e) {
        f = e.isBlank, h = e.isPresent, d = e.RegExpWrapper, p = e.StringWrapper, g = e.isPromise;
      }, function(e) {
        m = e.PromiseWrapper;
      }],
      execute: function() {
        i = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, o = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, v = $traceurRuntime.createClass(function(e, t, n) {
          this._xhr = e, this._styleUrlResolver = t, this._urlResolver = n;
        }, {
          inlineImports: function(e, t) {
            return this._inlineImports(e, t, []);
          },
          _inlineImports: function(e, r, i) {
            var o = this,
                s = 0,
                a = p.split(e, _);
            if (1 === a.length)
              return e;
            for (var u = []; s < a.length - 1; ) {
              var l = a[s],
                  d = a[s + 1],
                  v = t(d);
              h(v) && (v = this._urlResolver.resolve(r, v));
              var y = n(d),
                  b = void 0;
              f(v) ? b = m.resolve('/* Invalid import rule: "@import ' + d + ';" */') : c.contains(i, v) ? b = m.resolve(l) : (i.push(v), b = m.then(this._xhr.get(v), function(e) {
                var t = o._inlineImports(e, v, i);
                return g(t) ? t.then(function(e) {
                  return l + o._transformImportedCss(e, y, v) + "\n";
                }) : l + o._transformImportedCss(t, y, v) + "\n";
              }, function(e) {
                return "/* failed to import " + v + " */\n";
              })), u.push(b), s += 2;
            }
            return m.all(u).then(function(e) {
              var t = e.join("");
              return s < a.length && (t += a[s]), t;
            });
          },
          _transformImportedCss: function(e, t, n) {
            return e = this._styleUrlResolver.resolveUrls(e, n), r(e, t);
          }
        }, {}), e("StyleInliner", v), e("StyleInliner", v = i([s(), o("design:paramtypes", [a, l, u])], v)), _ = /@import\s+([^;]+);/g, y = d.create("url\\(\\s*?['\"]?([^'\")]+)['\"]?|['\"]([^'\")]+)['\"]"), b = /['"][^'"]+['"]\s*\)?\s*(.*)/g;
      }
    };
  }), System.register("angular2/src/render/dom/events/hammer_gestures", ["angular2/src/render/dom/events/hammer_common", "angular2/src/facade/lang"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i;
    return {
      setters: [function(e) {
        t = e.HammerGesturesPluginCommon;
      }, function(e) {
        n = e.isPresent, r = e.BaseException;
      }],
      execute: function() {
        i = function(e) {
          function t() {
            $traceurRuntime.superConstructor(t).call(this);
          }
          return $traceurRuntime.createClass(t, {
            supports: function(e) {
              if (!$traceurRuntime.superGet(this, t.prototype, "supports").call(this, e))
                return !1;
              if (!n(window.Hammer))
                throw new r("Hammer.js is not loaded, can not bind " + e + " event");
              return !0;
            },
            addEventListener: function(e, t, n, i) {
              if (i)
                throw new r("Hammer.js plugin does not support bubbling gestures.");
              var o = this.manager.getZone();
              t = t.toLowerCase(), o.runOutsideAngular(function() {
                var r = new Hammer(e);
                r.get("pinch").set({enable: !0}), r.get("rotate").set({enable: !0}), r.on(t, function(e) {
                  o.run(function() {
                    n(e);
                  });
                });
              });
            }
          }, {}, e);
        }(t), e("HammerGesturesPlugin", i);
      }
    };
  }), System.register("angular2/src/core/testability/testability", ["angular2/di", "angular2/src/dom/dom_adapter", "angular2/src/facade/collection", "angular2/src/facade/lang", "angular2/src/core/testability/get_testability", "angular2/src/core/zone/ng_zone", "angular2/src/facade/async"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h;
    return {
      setters: [function(e) {
        r = e.Injectable;
      }, function(e) {
        i = e.DOM;
      }, function(e) {
        o = e.Map, s = e.MapWrapper;
      }, function(e) {
        a = e.BaseException;
      }, function(e) {
        c = e;
      }, function(e) {
        u = e.NgZone;
      }, function(e) {
        l = e.PromiseWrapper;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, f = $traceurRuntime.createClass(function(e) {
          this._ngZone = e, this._pendingCount = 0, this._callbacks = [], this._isAngularEventPending = !1, this._watchAngularEvents(e);
        }, {
          _watchAngularEvents: function(e) {
            var t = this;
            e.overrideOnTurnStart(function() {
              t._isAngularEventPending = !0;
            }), e.overrideOnEventDone(function() {
              t._isAngularEventPending = !1, t._runCallbacksIfReady();
            }, !0);
          },
          increasePendingRequestCount: function() {
            return this._pendingCount += 1, this._pendingCount;
          },
          decreasePendingRequestCount: function() {
            if (this._pendingCount -= 1, this._pendingCount < 0)
              throw new a("pending async requests below zero");
            return this._runCallbacksIfReady(), this._pendingCount;
          },
          _runCallbacksIfReady: function() {
            var e = this;
            0 != this._pendingCount || this._isAngularEventPending || l.resolve(null).then(function(t) {
              for (; 0 !== e._callbacks.length; )
                e._callbacks.pop()();
            });
          },
          whenStable: function(e) {
            this._callbacks.push(e), this._runCallbacksIfReady();
          },
          getPendingRequestCount: function() {
            return this._pendingCount;
          },
          isAngularEventPending: function() {
            return this._isAngularEventPending;
          },
          findBindings: function(e, t, n) {
            return [];
          }
        }, {}), e("Testability", f), e("Testability", f = t([r(), n("design:paramtypes", [u])], f)), h = $traceurRuntime.createClass(function() {
          this._applications = new o, c.GetTestability.addToWindow(this);
        }, {
          registerApplication: function(e, t) {
            this._applications.set(e, t);
          },
          getAllTestabilities: function() {
            return s.values(this._applications);
          },
          findTestabilityInTree: function(e) {
            var t = void 0 !== arguments[1] ? arguments[1] : !0;
            return null == e ? null : this._applications.has(e) ? this._applications.get(e) : t ? this.findTestabilityInTree(i.isShadowRoot(e) ? i.getHost(e) : i.parentElement(e)) : null;
          }
        }, {}), e("TestabilityRegistry", h), e("TestabilityRegistry", h = t([r(), n("design:paramtypes", [])], h));
      }
    };
  }), System.register("angular2/src/render/dom/view/shared_styles_host", ["angular2/src/dom/dom_adapter", "angular2/di", "angular2/src/facade/collection", "angular2/src/render/dom/dom_tokens"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l;
    return {
      setters: [function(e) {
        i = e.DOM;
      }, function(e) {
        o = e.Inject, s = e.Injectable;
      }, function(e) {
        a = e.SetWrapper;
      }, function(e) {
        c = e.DOCUMENT;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, r = this && this.__param || function(e, t) {
          return function(n, r) {
            t(n, r, e);
          };
        }, u = $traceurRuntime.createClass(function() {
          this._styles = [], this._stylesSet = new Set;
        }, {
          addStyles: function(e) {
            var t = this,
                n = [];
            e.forEach(function(e) {
              a.has(t._stylesSet, e) || (t._stylesSet.add(e), t._styles.push(e), n.push(e));
            }), this.onStylesAdded(n);
          },
          onStylesAdded: function(e) {},
          getAllStyles: function() {
            return this._styles;
          }
        }, {}), e("SharedStylesHost", u), e("SharedStylesHost", u = t([s(), n("design:paramtypes", [])], u)), l = function(e) {
          function t(e) {
            $traceurRuntime.superConstructor(t).call(this), this._hostNodes = new Set, this._hostNodes.add(e.head);
          }
          return $traceurRuntime.createClass(t, {
            _addStylesToHost: function(e, t) {
              for (var n = 0; n < e.length; n++) {
                var r = e[n];
                i.appendChild(t, i.createStyleElement(r));
              }
            },
            addHost: function(e) {
              this._addStylesToHost(this._styles, e), this._hostNodes.add(e);
            },
            removeHost: function(e) {
              a["delete"](this._hostNodes, e);
            },
            onStylesAdded: function(e) {
              var t = this;
              this._hostNodes.forEach(function(n) {
                t._addStylesToHost(e, n);
              });
            }
          }, {}, e);
        }(u), e("DomSharedStylesHost", l), e("DomSharedStylesHost", l = t([s(), r(0, o(c)), n("design:paramtypes", [Object])], l));
      }
    };
  }), System.register("angular2/src/render/dom/view/proto_view_builder", ["angular2/src/facade/lang", "angular2/src/facade/collection", "angular2/src/dom/dom_adapter", "angular2/src/change_detection/change_detection", "angular2/src/render/dom/view/proto_view", "angular2/src/render/dom/view/element_binder", "angular2/src/render/api", "angular2/src/render/dom/util"], function(e) {
    "use strict";
    function t(e, t, o, a, c) {
      var l = [];
      return u.forEach(a, function(a, u) {
        var d = r(e, a, u);
        if (i(c) && f.has(c, u))
          ;
        else {
          if (!n(e, t, o, d)) {
            var p = "Can't bind to '" + u + "' since it isn't a known property of the '<" + h.tagName(t).toLowerCase() + ">' element";
            throw i(c) && (p += " and there are no matching directives with a corresponding property"), new s(p);
          }
          l.push(d);
        }
      }), l;
    }
    function n(e, t, n, r) {
      return r.type === P.PROPERTY ? n ? h.hasProperty(t, r.property) : e.hasProperty(t, r.property) : !0;
    }
    function r(e, t, n) {
      var r = a.split(n, B);
      if (1 === r.length) {
        var i = e.getMappedPropName(r[0]);
        return new I(P.PROPERTY, t, i);
      }
      if (r[0] == L)
        return new I(P.ATTRIBUTE, t, r[1]);
      if (r[0] == F)
        return new I(P.CLASS, t, j(r[1]));
      if (r[0] == $) {
        var o = r.length > 2 ? r[2] : null;
        return new I(P.STYLE, t, r[1], o);
      }
      throw new s("Invalid property name " + n);
    }
    var i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y,
        b,
        w,
        C,
        R,
        E,
        x,
        S,
        D,
        I,
        P,
        A,
        O,
        T,
        j,
        N,
        V,
        k,
        M,
        B,
        L,
        F,
        $;
    return {
      setters: [function(e) {
        i = e.isPresent, o = e.isBlank, s = e.BaseException, a = e.StringWrapper;
      }, function(e) {
        c = e.ListWrapper, u = e.MapWrapper, l = e.Set, f = e.SetWrapper;
      }, function(e) {
        h = e.DOM;
      }, function(e) {
        d = e.ASTWithSource, p = e.AstTransformer, g = e.PropertyRead, m = e.LiteralArray, v = e.ImplicitReceiver;
      }, function(e) {
        _ = e.DomProtoView, y = e.DomProtoViewRef;
      }, function(e) {
        b = e.DomElementBinder, w = e.Event;
      }, function(e) {
        C = e.ViewType, R = e.ViewEncapsulation, E = e.ProtoViewDto, x = e.DirectiveBinder, S = e.RenderElementBinder, D = e.EventBinding, I = e.ElementPropertyBinding, P = e.PropertyBindingType;
      }, function(e) {
        A = e.NG_BINDING_CLASS, O = e.EVENT_TARGET_SEPARATOR, T = e.queryBoundTextNodeIndices, j = e.camelCaseToDashCase;
      }],
      execute: function() {
        N = function() {
          function e(e, t, n) {
            this.rootElement = e, this.type = t, this.viewEncapsulation = n, this.variableBindings = new Map, this.elements = [], this.rootTextBindings = new Map, this.ngContentCount = 0, this.hostAttributes = new Map;
          }
          return $traceurRuntime.createClass(e, {
            bindElement: function(e) {
              var t = void 0 !== arguments[1] ? arguments[1] : null,
                  n = new V(this.elements.length, e, t);
              return this.elements.push(n), h.addClass(e, A), n;
            },
            bindVariable: function(e, t) {
              this.variableBindings.set(t, e);
            },
            bindRootText: function(e, t) {
              this.rootTextBindings.set(e, t);
            },
            bindNgContent: function() {
              this.ngContentCount++;
            },
            setHostAttribute: function(e, t) {
              this.hostAttributes.set(e, t);
            },
            build: function(e, n) {
              var r = [],
                  o = [],
                  s = [],
                  a = [],
                  u = this.ngContentCount;
              T(h.content(this.rootElement), this.rootTextBindings, function(e, t, n) {
                s.push(n), a.push(t);
              }), c.forEach(this.elements, function(a) {
                var f = new l,
                    h = c.map(a.directives, function(n) {
                      return a.eventBuilder.merge(n.eventBuilder), c.forEach(n.templatePropertyNames, function(e) {
                        return f.add(e);
                      }), new x({
                        directiveIndex: n.directiveIndex,
                        propertyBindings: n.propertyBindings,
                        eventBindings: n.eventBindings,
                        hostPropertyBindings: t(e, a.element, !0, n.hostPropertyBindings, null)
                      });
                    }),
                    d = i(a.nestedProtoView) ? a.nestedProtoView.build(e, n) : null;
                i(d) && (u += d.transitiveNgContentCount);
                var p = i(a.parent) ? a.parent.index : -1,
                    g = [];
                T(a.element, a.textBindings, function(e, t, n) {
                  s.push(n), g.push(t);
                }), o.push(new S({
                  index: a.index,
                  parentIndex: p,
                  distanceToParent: a.distanceToParent,
                  directives: h,
                  nestedProtoView: d,
                  propertyBindings: t(e, a.element, i(a.componentId), a.propertyBindings, f),
                  variableBindings: a.variableBindings,
                  eventBindings: a.eventBindings,
                  readAttributes: a.readAttributes
                })), r.push(new b({
                  textNodeIndices: g,
                  hasNestedProtoView: i(d) || i(a.componentId),
                  hasNativeShadowRoot: !1,
                  eventLocals: new m(a.eventBuilder.buildEventLocals()),
                  localEvents: a.eventBuilder.buildLocalEvents(),
                  globalEvents: a.eventBuilder.buildGlobalEvents()
                }));
              });
              var f = h.childNodes(h.content(this.rootElement)).length;
              return new E({
                render: new y(_.create(n, this.type, this.rootElement, this.viewEncapsulation, [f], a, r, this.hostAttributes)),
                type: this.type,
                elementBinders: o,
                variableBindings: this.variableBindings,
                textBindings: s,
                transitiveNgContentCount: u
              });
            }
          }, {});
        }(), e("ProtoViewBuilder", N), V = function() {
          function e(e, t, n) {
            this.index = e, this.element = t, this.parent = null, this.distanceToParent = 0, this.directives = [], this.nestedProtoView = null, this.propertyBindings = new Map, this.variableBindings = new Map, this.eventBindings = [], this.eventBuilder = new M, this.textBindings = new Map, this.readAttributes = new Map, this.componentId = null;
          }
          return $traceurRuntime.createClass(e, {
            setParent: function(e, t) {
              return this.parent = e, i(e) && (this.distanceToParent = t), this;
            },
            readAttribute: function(e) {
              o(this.readAttributes.get(e)) && this.readAttributes.set(e, h.getAttribute(this.element, e));
            },
            bindDirective: function(e) {
              var t = new k(e);
              return this.directives.push(t), t;
            },
            bindNestedProtoView: function(e) {
              if (i(this.nestedProtoView))
                throw new s("Only one nested view per element is allowed");
              return this.nestedProtoView = new N(e, C.EMBEDDED, R.NONE), this.nestedProtoView;
            },
            bindProperty: function(e, t) {
              this.propertyBindings.set(e, t);
            },
            bindVariable: function(e, t) {
              i(this.nestedProtoView) ? this.nestedProtoView.bindVariable(e, t) : this.variableBindings.set(t, e);
            },
            bindEvent: function(e, t) {
              var n = void 0 !== arguments[2] ? arguments[2] : null;
              this.eventBindings.push(this.eventBuilder.add(e, t, n));
            },
            bindText: function(e, t) {
              this.textBindings.set(e, t);
            },
            setComponentId: function(e) {
              this.componentId = e;
            }
          }, {});
        }(), e("ElementBinderBuilder", V), k = function() {
          function e(e) {
            this.directiveIndex = e, this.propertyBindings = new Map, this.templatePropertyNames = [], this.hostPropertyBindings = new Map, this.eventBindings = [], this.eventBuilder = new M;
          }
          return $traceurRuntime.createClass(e, {
            bindProperty: function(e, t, n) {
              this.propertyBindings.set(e, t), i(n) && this.templatePropertyNames.push(n);
            },
            bindHostProperty: function(e, t) {
              this.hostPropertyBindings.set(e, t);
            },
            bindEvent: function(e, t) {
              var n = void 0 !== arguments[2] ? arguments[2] : null;
              this.eventBindings.push(this.eventBuilder.add(e, t, n));
            }
          }, {});
        }(), e("DirectiveBuilder", k), M = function(e) {
          function t() {
            $traceurRuntime.superConstructor(t).call(this), this.locals = [], this.localEvents = [], this.globalEvents = [], this._implicitReceiver = new v;
          }
          return $traceurRuntime.createClass(t, {
            add: function(e, t, n) {
              var r = t.ast,
                  s = i(n) ? n + O + e : e,
                  a = new D(s, new d(r, t.source, t.location)),
                  c = new w(e, n, s);
              return o(n) ? this.localEvents.push(c) : this.globalEvents.push(c), a;
            },
            visitPropertyRead: function(e) {
              for (var t = !1,
                  n = e; !t && n instanceof g; ) {
                var r = n;
                "$event" == r.name && (t = !0), n = r.receiver;
              }
              if (t) {
                this.locals.push(e);
                var i = this.locals.length - 1;
                return new g(this._implicitReceiver, "" + i, function(e) {
                  return e[i];
                });
              }
              return e;
            },
            buildEventLocals: function() {
              return this.locals;
            },
            buildLocalEvents: function() {
              return this.localEvents;
            },
            buildGlobalEvents: function() {
              return this.globalEvents;
            },
            merge: function(e) {
              this._merge(this.localEvents, e.localEvents), this._merge(this.globalEvents, e.globalEvents), c.concat(this.locals, e.locals);
            },
            _merge: function(e, t) {
              for (var n = [],
                  r = 0; r < e.length; r++)
                n.push(e[r].fullName);
              for (var i = 0; i < t.length; i++)
                c.contains(n, t[i].fullName) || e.push(t[i]);
            }
          }, {}, e);
        }(p), e("EventBuilder", M), B = new RegExp("\\."), L = "attr", F = "class", $ = "style";
      }
    };
  }), System.register("angular2/src/render/dom/compiler/directive_parser", ["angular2/src/facade/lang", "angular2/src/facade/collection", "angular2/src/dom/dom_adapter", "angular2/src/render/dom/compiler/selector", "angular2/src/render/api", "angular2/src/render/dom/util"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p;
    return {
      setters: [function(e) {
        t = e.isPresent, n = e.isBlank, r = e.BaseException, i = e.StringWrapper;
      }, function(e) {
        o = e.MapWrapper, s = e.ListWrapper;
      }, function(e) {
        a = e.DOM;
      }, function(e) {
        c = e.SelectorMatcher, u = e.CssSelector;
      }, function(e) {
        l = e.RenderDirectiveMetadata;
      }, function(e) {
        f = e.dashCaseToCamelCase, h = e.camelCaseToDashCase, d = e.EVENT_TARGET_SEPARATOR;
      }],
      execute: function() {
        p = function() {
          function e(e, t) {
            this._parser = e, this._directives = t, this._selectorMatcher = new c;
            for (var n = 0; n < t.length; n++) {
              var r = t[n],
                  i = u.parse(r.selector);
              this._selectorMatcher.addSelectables(i, n);
            }
          }
          return $traceurRuntime.createClass(e, {
            processStyle: function(e) {
              return e;
            },
            processElement: function(e, n, r) {
              var i = this,
                  c = n.attrs(),
                  f = n.classList(),
                  h = new u,
                  d = [],
                  p = null;
              h.setElement(a.nodeName(n.element));
              for (var g = 0; g < f.length; g++)
                h.addClassName(f[g]);
              o.forEach(c, function(e, t) {
                h.addAttribute(t, e);
              }), this._selectorMatcher.match(h, function(e, t) {
                var r = i._directives[t];
                p = n.bindElement(), r.type === l.COMPONENT_TYPE ? (i._ensureHasOnlyOneComponent(p, n.elementDescription), s.insert(d, 0, t), p.setComponentId(r.id)) : d.push(t);
              }), s.forEach(d, function(e) {
                var r = i._directives[e],
                    o = p.bindDirective(e);
                n.compileChildren = n.compileChildren && r.compileChildren, t(r.properties) && s.forEach(r.properties, function(e) {
                  i._bindDirectiveProperty(e, n, o);
                }), t(r.hostListeners) && i._sortedKeysForEach(r.hostListeners, function(e, t) {
                  i._bindDirectiveEvent(t, e, n, o);
                }), t(r.hostProperties) && i._sortedKeysForEach(r.hostProperties, function(e, t) {
                  i._bindHostProperty(t, e, n, o);
                }), t(r.hostAttributes) && i._sortedKeysForEach(r.hostAttributes, function(e, t) {
                  i._addHostAttribute(t, e, n);
                }), t(r.readAttributes) && s.forEach(r.readAttributes, function(e) {
                  p.readAttribute(e);
                });
              });
            },
            _sortedKeysForEach: function(e, t) {
              var n = o.keys(e);
              s.sort(n, function(e, t) {
                var n = i.compare(e, t);
                return 0 == n ? -1 : n;
              }), s.forEach(n, function(n) {
                t(o.get(e, n), n);
              });
            },
            _ensureHasOnlyOneComponent: function(e, n) {
              if (t(e.componentId))
                throw new r("Only one component directive is allowed per element - check " + n);
            },
            _bindDirectiveProperty: function(e, r, o) {
              var a,
                  c,
                  u,
                  l = e.indexOf(":");
              l > -1 ? (a = i.substring(e, 0, l).trim(), u = this._splitBindConfig(i.substring(e, l + 1)), c = s.removeAt(u, 0)) : (a = e, c = e, u = []), c = f(c);
              var d = r.bindElement().propertyBindings.get(c);
              if (n(d)) {
                var p = r.attrs().get(h(c));
                t(p) && (d = this._parser.wrapLiteralPrimitive(p, r.elementDescription));
              }
              t(d) && o.bindProperty(a, d, c);
            },
            _bindDirectiveEvent: function(e, t, n, r) {
              var o = this._parser.parseAction(t, n.elementDescription);
              if (i.contains(e, d)) {
                var s = e.split(d);
                r.bindEvent(s[1], o, s[0]);
              } else
                r.bindEvent(e, o);
            },
            _bindHostProperty: function(e, t, n, r) {
              var i = this._parser.parseSimpleBinding(t, "hostProperties of " + n.elementDescription);
              r.bindHostProperty(e, i);
            },
            _addHostAttribute: function(e, t, n) {
              i.equals(e, "class") ? s.forEach(t.split(" "), function(e) {
                a.addClass(n.element, e);
              }) : a.hasAttribute(n.element, e) || a.setAttribute(n.element, e, t);
            },
            _splitBindConfig: function(e) {
              return s.map(e.split("|"), function(e) {
                return e.trim();
              });
            }
          }, {});
        }(), e("DirectiveParser", p);
      }
    };
  }), System.register("angular2/src/render/dom/compiler/style_encapsulator", ["angular2/src/render/api", "angular2/src/render/dom/util", "angular2/src/dom/dom_adapter", "angular2/src/facade/lang", "angular2/src/render/dom/compiler/shadow_css"], function(e) {
    "use strict";
    function t(e) {
      return "_nghost-" + e;
    }
    function n(e) {
      return "_ngcontent-" + e;
    }
    var r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f;
    return {
      setters: [function(e) {
        r = e.ViewEncapsulation, i = e.ViewType;
      }, function(e) {
        o = e.NG_CONTENT_ELEMENT_NAME, s = e.isElementWithTag;
      }, function(e) {
        a = e.DOM;
      }, function(e) {
        c = e.isBlank, u = e.isPresent;
      }, function(e) {
        l = e.ShadowCss;
      }],
      execute: function() {
        f = function() {
          function e(e, t, n) {
            this._appId = e, this._view = t, this._componentUIDsCache = n;
          }
          return $traceurRuntime.createClass(e, {
            processElement: function(e, t, n) {
              s(t.element, o) ? t.inheritedProtoView.bindNgContent() : this._view.encapsulation === r.EMULATED && this._processEmulatedScopedElement(t, e);
            },
            processStyle: function(e) {
              var t = this._view.encapsulation;
              return t === r.EMULATED ? this._shimCssForComponent(e, this._view.componentId) : e;
            },
            _processEmulatedScopedElement: function(e, r) {
              var o = e.element,
                  s = this._view.componentId,
                  l = e.inheritedProtoView.type;
              if (l !== i.HOST && u(s)) {
                var f = n(this._getComponentId(s));
                if (a.setAttribute(o, f, ""), c(r) && l == i.COMPONENT) {
                  var h = t(this._getComponentId(s));
                  e.inheritedProtoView.setHostAttribute(h, "");
                }
              }
            },
            _shimCssForComponent: function(e, r) {
              var i = this._getComponentId(r),
                  o = new l;
              return o.shimCssText(e, n(i), t(i));
            },
            _getComponentId: function(e) {
              var t = this._componentUIDsCache.get(e);
              return c(t) && (t = this._appId + "-" + this._componentUIDsCache.size, this._componentUIDsCache.set(e, t)), t;
            }
          }, {});
        }(), e("StyleEncapsulator", f);
      }
    };
  }), System.register("angular2/src/render/dom/dom_renderer", ["angular2/di", "angular2/src/facade/lang", "angular2/src/dom/dom_adapter", "angular2/src/render/dom/events/event_manager", "angular2/src/render/dom/view/proto_view", "angular2/src/render/dom/view/view", "angular2/src/render/dom/view/fragment", "angular2/src/render/dom/view/shared_styles_host", "angular2/src/render/dom/util", "angular2/src/profile/profile", "angular2/src/render/api", "angular2/src/render/dom/template_cloner", "angular2/src/render/dom/dom_tokens"], function(e) {
    "use strict";
    function t(e, t) {
      if (t.length > 0 && c(f.parentElement(e))) {
        for (var n = 0; n < t.length; n++)
          f.insertBefore(e, t[n]);
        f.insertBefore(t[t.length - 1], e);
      }
    }
    function n(e, t) {
      for (var n = f.firstChild(e); c(n); ) {
        var r = f.nextSibling(n);
        f.appendChild(t, n), n = r;
      }
    }
    var r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y,
        b,
        w,
        C,
        R,
        E,
        x,
        S,
        D,
        I,
        P,
        A;
    return {
      setters: [function(e) {
        s = e.Inject, a = e.Injectable;
      }, function(e) {
        c = e.isPresent, u = e.isBlank, l = e.BaseException;
      }, function(e) {
        f = e.DOM;
      }, function(e) {
        h = e.EventManager;
      }, function(e) {
        d = e.resolveInternalDomProtoView;
      }, function(e) {
        p = e.DomView, g = e.DomViewRef, m = e.resolveInternalDomView;
      }, function(e) {
        v = e.DomFragmentRef, _ = e.resolveInternalDomFragment;
      }, function(e) {
        y = e.DomSharedStylesHost;
      }, function(e) {
        b = e.cloneAndQueryProtoView, w = e.camelCaseToDashCase;
      }, function(e) {
        C = e.wtfLeave, R = e.wtfCreateScope;
      }, function(e) {
        E = e.Renderer, x = e.RenderViewWithFragments;
      }, function(e) {
        S = e.TemplateCloner;
      }, function(e) {
        D = e.DOCUMENT, I = e.DOM_REFLECT_PROPERTIES_AS_ATTRIBUTES;
      }],
      execute: function() {
        r = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, i = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, o = this && this.__param || function(e, t) {
          return function(n, r) {
            t(n, r, e);
          };
        }, P = "ng-reflect-", A = function(e) {
          function r(e, t, n, i, o) {
            $traceurRuntime.superConstructor(r).call(this), this._eventManager = e, this._domSharedStylesHost = t, this._templateCloner = n, this._scope_createRootHostView = R("DomRenderer#createRootHostView()"), this._scope_createView = R("DomRenderer#createView()"), this._scope_detachFragment = R("DomRenderer#detachFragment()"), this._scope_setEventDispatcher = R("DomRenderer#setEventDispatcher()"), this._reflectPropertiesAsAttributes = o, this._document = i;
          }
          return $traceurRuntime.createClass(r, {
            createRootHostView: function(e, t, n) {
              var r = this._scope_createRootHostView(),
                  i = d(e),
                  o = f.querySelector(this._document, n);
              if (u(o))
                throw C(r), new l('The selector "' + n + '" did not match any elements');
              return C(r, this._createView(i, o));
            },
            createView: function(e, t) {
              var n = this._scope_createView(),
                  r = d(e);
              return C(n, this._createView(r, null));
            },
            destroyView: function(e) {
              for (var t = m(e),
                  n = t.proto.elementBinders,
                  r = 0; r < n.length; r++) {
                var i = n[r];
                i.hasNativeShadowRoot && this._domSharedStylesHost.removeHost(f.getShadowRoot(t.boundElements[r]));
              }
            },
            getNativeElementSync: function(e) {
              return u(e.renderBoundElementIndex) ? null : m(e.renderView).boundElements[e.renderBoundElementIndex];
            },
            getRootNodes: function(e) {
              return _(e);
            },
            attachFragmentAfterFragment: function(e, n) {
              var r = _(e);
              if (r.length > 0) {
                var i = r[r.length - 1];
                t(i, _(n));
              }
            },
            attachFragmentAfterElement: function(e, n) {
              if (!u(e.renderBoundElementIndex)) {
                var r = m(e.renderView),
                    i = r.boundElements[e.renderBoundElementIndex];
                t(i, _(n));
              }
            },
            detachFragment: function(e) {
              for (var t = this._scope_detachFragment(),
                  n = _(e),
                  r = 0; r < n.length; r++)
                f.remove(n[r]);
              C(t);
            },
            hydrateView: function(e) {
              var t = m(e);
              if (t.hydrated)
                throw new l("The view is already hydrated.");
              t.hydrated = !0, t.eventHandlerRemovers = [];
              for (var n = t.proto.elementBinders,
                  r = 0; r < n.length; r++) {
                var i = n[r];
                if (c(i.globalEvents))
                  for (var o = 0; o < i.globalEvents.length; o++) {
                    var s = i.globalEvents[o],
                        a = this._createGlobalEventListener(t, r, s.name, s.target, s.fullName);
                    t.eventHandlerRemovers.push(a);
                  }
              }
            },
            dehydrateView: function(e) {
              for (var t = m(e),
                  n = 0; n < t.eventHandlerRemovers.length; n++)
                t.eventHandlerRemovers[n]();
              t.eventHandlerRemovers = null, t.hydrated = !1;
            },
            setElementProperty: function(e, t, n) {
              if (!u(e.renderBoundElementIndex)) {
                var r = m(e.renderView);
                r.setElementProperty(e.renderBoundElementIndex, t, n), this._reflectPropertiesAsAttributes && this.setElementAttribute(e, "" + P + w(t), "" + n);
              }
            },
            setElementAttribute: function(e, t, n) {
              if (!u(e.renderBoundElementIndex)) {
                var r = m(e.renderView);
                r.setElementAttribute(e.renderBoundElementIndex, t, n);
              }
            },
            setElementClass: function(e, t, n) {
              if (!u(e.renderBoundElementIndex)) {
                var r = m(e.renderView);
                r.setElementClass(e.renderBoundElementIndex, t, n);
              }
            },
            setElementStyle: function(e, t, n) {
              if (!u(e.renderBoundElementIndex)) {
                var r = m(e.renderView);
                r.setElementStyle(e.renderBoundElementIndex, t, n);
              }
            },
            invokeElementMethod: function(e, t, n) {
              if (!u(e.renderBoundElementIndex)) {
                var r = m(e.renderView);
                r.invokeElementMethod(e.renderBoundElementIndex, t, n);
              }
            },
            setText: function(e, t, n) {
              if (!u(t)) {
                var r = m(e);
                f.setText(r.boundTextNodes[t], n);
              }
            },
            setEventDispatcher: function(e, t) {
              var n = this._scope_setEventDispatcher(),
                  r = m(e);
              r.eventDispatcher = t, C(n);
            },
            _createView: function(e, t) {
              var r = b(this._templateCloner, e, !0),
                  i = r.boundElements;
              if (c(t)) {
                if (1 !== e.fragmentsRootNodeCount[0])
                  throw new l("Root proto views can only contain one element!");
                f.clearNodes(t);
                var o = r.fragments[0][0];
                n(o, t), i.length > 0 && i[0] === o && (i[0] = t), r.fragments[0][0] = t;
              }
              for (var s = new p(e, r.boundTextNodes, i),
                  a = e.elementBinders,
                  u = 0; u < a.length; u++) {
                var h = a[u],
                    d = i[u];
                if (h.hasNativeShadowRoot) {
                  var m = f.firstChild(d),
                      _ = f.createShadowRoot(d);
                  this._domSharedStylesHost.addHost(_), n(m, _), f.remove(m);
                }
                if (c(h.eventLocals) && c(h.localEvents))
                  for (var y = 0; y < h.localEvents.length; y++)
                    this._createEventListener(s, d, u, h.localEvents[y].name, h.eventLocals);
              }
              return new x(new g(s), r.fragments.map(function(e) {
                return new v(e);
              }));
            },
            _createEventListener: function(e, t, n, r, i) {
              this._eventManager.addEventListener(t, r, function(t) {
                e.dispatchEvent(n, r, t);
              });
            },
            _createGlobalEventListener: function(e, t, n, r, i) {
              return this._eventManager.addGlobalEventListener(r, n, function(n) {
                e.dispatchEvent(t, i, n);
              });
            }
          }, {}, e);
        }(E), e("DomRenderer", A), e("DomRenderer", A = r([a(), o(3, s(D)), o(4, s(I)), i("design:paramtypes", [h, y, S, Object, Boolean])], A));
      }
    };
  }), System.register("angular2/directives", ["angular2/src/facade/lang", "angular2/src/directives/ng_class", "angular2/src/directives/ng_for", "angular2/src/directives/ng_if", "angular2/src/directives/ng_non_bindable", "angular2/src/directives/ng_switch", "angular2/src/directives/ng_style"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l = {CORE_DIRECTIVES: !0},
        l = {CORE_DIRECTIVES: !0},
        l = {CORE_DIRECTIVES: !0},
        l = {CORE_DIRECTIVES: !0},
        l = {CORE_DIRECTIVES: !0},
        l = {CORE_DIRECTIVES: !0};
    return {
      setters: [function(e) {
        t = e.CONST_EXPR;
      }, function(t) {
        n = t.NgClass, Object.keys(t).forEach(function(n) {
          l[n] || e(n, t[n]);
        });
      }, function(t) {
        r = t.NgFor, Object.keys(t).forEach(function(n) {
          l[n] || e(n, t[n]);
        });
      }, function(t) {
        i = t.NgIf, Object.keys(t).forEach(function(n) {
          l[n] || e(n, t[n]);
        });
      }, function(t) {
        o = t.NgNonBindable, Object.keys(t).forEach(function(n) {
          l[n] || e(n, t[n]);
        });
      }, function(t) {
        s = t.NgSwitch, a = t.NgSwitchWhen, c = t.NgSwitchDefault, Object.keys(t).forEach(function(n) {
          l[n] || e(n, t[n]);
        });
      }, function(t) {
        Object.keys(t).forEach(function(n) {
          l[n] || e(n, t[n]);
        });
      }],
      execute: function() {
        u = t([n, r, i, o, s, a, c]), e("CORE_DIRECTIVES", u);
      }
    };
  }), System.register("angular2/src/forms/model", ["angular2/src/facade/lang", "angular2/src/facade/async", "angular2/src/facade/collection", "angular2/src/forms/validators"], function(e) {
    "use strict";
    function t(e) {
      return e instanceof p;
    }
    function n(e, t) {
      return o(t) ? null : (t instanceof l || (t = r.split(t, new RegExp("/"))), t instanceof l && u.isEmpty(t) ? null : u.reduce(t, function(e, t) {
        if (e instanceof m)
          return i(e.controls[t]) ? e.controls[t] : null;
        if (e instanceof v) {
          var n = t;
          return i(e.at(n)) ? e.at(n) : null;
        }
        return null;
      }, e));
    }
    var r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v;
    return e("isControl", t), {
      setters: [function(e) {
        r = e.StringWrapper, i = e.isPresent, o = e.isBlank;
      }, function(e) {
        s = e.EventEmitter, a = e.ObservableWrapper;
      }, function(e) {
        c = e.StringMapWrapper, u = e.ListWrapper, l = e.List;
      }, function(e) {
        f = e.Validators;
      }],
      execute: function() {
        h = "VALID", e("VALID", h), d = "INVALID", e("INVALID", d), p = function() {
          function e(e) {
            this.validator = e, this._pristine = !0, this._touched = !1;
          }
          return $traceurRuntime.createClass(e, {
            get value() {
              return this._value;
            },
            get status() {
              return this._status;
            },
            get valid() {
              return this._status === h;
            },
            get errors() {
              return this._errors;
            },
            get pristine() {
              return this._pristine;
            },
            get dirty() {
              return !this.pristine;
            },
            get touched() {
              return this._touched;
            },
            get untouched() {
              return !this._touched;
            },
            get valueChanges() {
              return this._valueChanges;
            },
            markAsTouched: function() {
              this._touched = !0;
            },
            markAsDirty: function() {
              var e = (void 0 !== arguments[0] ? arguments[0] : {}).onlySelf;
              e = i(e) ? e : !1, this._pristine = !1, i(this._parent) && !e && this._parent.markAsDirty({onlySelf: e});
            },
            setParent: function(e) {
              this._parent = e;
            },
            updateValidity: function() {
              var e = (void 0 !== arguments[0] ? arguments[0] : {}).onlySelf;
              e = i(e) ? e : !1, this._errors = this.validator(this), this._status = i(this._errors) ? d : h, i(this._parent) && !e && this._parent.updateValidity({onlySelf: e});
            },
            updateValueAndValidity: function() {
              var e = void 0 !== arguments[0] ? arguments[0] : {},
                  t = e.onlySelf,
                  n = e.emitEvent;
              t = i(t) ? t : !1, n = i(n) ? n : !0, this._updateValue(), n && a.callNext(this._valueChanges, this._value), this._errors = this.validator(this), this._status = i(this._errors) ? d : h, i(this._parent) && !t && this._parent.updateValueAndValidity({
                onlySelf: t,
                emitEvent: n
              });
            },
            find: function(e) {
              return n(this, e);
            },
            getError: function(e) {
              var t = void 0 !== arguments[1] ? arguments[1] : null,
                  n = i(t) && !u.isEmpty(t) ? this.find(t) : this;
              return i(n) && i(n._errors) ? c.get(n._errors, e) : null;
            },
            hasError: function(e) {
              var t = void 0 !== arguments[1] ? arguments[1] : null;
              return i(this.getError(e, t));
            },
            _updateValue: function() {}
          }, {});
        }(), e("AbstractControl", p), g = function(e) {
          function t() {
            var e = void 0 !== arguments[0] ? arguments[0] : null,
                n = void 0 !== arguments[1] ? arguments[1] : f.nullValidator;
            $traceurRuntime.superConstructor(t).call(this, n), this._value = e, this.updateValidity({onlySelf: !0}), this._valueChanges = new s;
          }
          return $traceurRuntime.createClass(t, {
            updateValue: function(e) {
              var t = void 0 !== arguments[1] ? arguments[1] : {},
                  n = t.onlySelf,
                  r = t.emitEvent,
                  o = t.emitModelToViewChange;
              o = i(o) ? o : !0, this._value = e, i(this._onChange) && o && this._onChange(this._value), this.updateValueAndValidity({
                onlySelf: n,
                emitEvent: r
              });
            },
            registerOnChange: function(e) {
              this._onChange = e;
            }
          }, {}, e);
        }(p), e("Control", g), m = function(e) {
          function t(e) {
            var n = void 0 !== arguments[1] ? arguments[1] : null,
                r = void 0 !== arguments[2] ? arguments[2] : f.group;
            $traceurRuntime.superConstructor(t).call(this, r), this.controls = e, this._optionals = i(n) ? n : {}, this._valueChanges = new s, this._setParentForControls(), this._value = this._reduceValue(), this.updateValidity({onlySelf: !0});
          }
          return $traceurRuntime.createClass(t, {
            addControl: function(e, t) {
              this.controls[e] = t, t.setParent(this);
            },
            removeControl: function(e) {
              c["delete"](this.controls, e);
            },
            include: function(e) {
              c.set(this._optionals, e, !0), this.updateValueAndValidity();
            },
            exclude: function(e) {
              c.set(this._optionals, e, !1), this.updateValueAndValidity();
            },
            contains: function(e) {
              var t = c.contains(this.controls, e);
              return t && this._included(e);
            },
            _setParentForControls: function() {
              var e = this;
              c.forEach(this.controls, function(t, n) {
                t.setParent(e);
              });
            },
            _updateValue: function() {
              this._value = this._reduceValue();
            },
            _reduceValue: function() {
              return this._reduceChildren({}, function(e, t, n) {
                return e[n] = t.value, e;
              });
            },
            _reduceChildren: function(e, t) {
              var n = this,
                  r = e;
              return c.forEach(this.controls, function(e, i) {
                n._included(i) && (r = t(r, e, i));
              }), r;
            },
            _included: function(e) {
              var t = c.contains(this._optionals, e);
              return !t || c.get(this._optionals, e);
            }
          }, {}, e);
        }(p), e("ControlGroup", m), v = function(e) {
          function t(e) {
            var n = void 0 !== arguments[1] ? arguments[1] : f.array;
            $traceurRuntime.superConstructor(t).call(this, n), this.controls = e, this._valueChanges = new s, this._setParentForControls(), this._updateValue(), this.updateValidity({onlySelf: !0});
          }
          return $traceurRuntime.createClass(t, {
            at: function(e) {
              return this.controls[e];
            },
            push: function(e) {
              this.controls.push(e), e.setParent(this), this.updateValueAndValidity();
            },
            insert: function(e, t) {
              u.insert(this.controls, e, t), t.setParent(this), this.updateValueAndValidity();
            },
            removeAt: function(e) {
              u.removeAt(this.controls, e), this.updateValueAndValidity();
            },
            get length() {
              return this.controls.length;
            },
            _updateValue: function() {
              this._value = u.map(this.controls, function(e) {
                return e.value;
              });
            },
            _setParentForControls: function() {
              var e = this;
              u.forEach(this.controls, function(t) {
                t.setParent(e);
              });
            }
          }, {}, e);
        }(p), e("ControlArray", v);
      }
    };
  }), System.register("angular2/src/forms/directives/ng_control_name", ["angular2/src/facade/lang", "angular2/src/facade/async", "angular2/core", "angular2/metadata", "angular2/di", "angular2/src/forms/directives/control_container", "angular2/src/forms/directives/ng_control", "angular2/src/forms/directives/validators", "angular2/src/forms/directives/shared"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y,
        b,
        w,
        C;
    return {
      setters: [function(e) {
        i = e.CONST_EXPR;
      }, function(e) {
        o = e.EventEmitter, s = e.ObservableWrapper;
      }, function(e) {
        a = e.QueryList;
      }, function(e) {
        c = e.Query, u = e.Directive, l = e.LifecycleEvent;
      }, function(e) {
        f = e.forwardRef, h = e.Host, d = e.SkipSelf, p = e.Binding;
      }, function(e) {
        g = e.ControlContainer;
      }, function(e) {
        m = e.NgControl;
      }, function(e) {
        v = e.NgValidator;
      }, function(e) {
        _ = e.controlPath, y = e.composeNgValidator, b = e.isPropertyUpdated;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, r = this && this.__param || function(e, t) {
          return function(n, r) {
            t(n, r, e);
          };
        }, w = i(new p(m, {toAlias: f(function() {
            return C;
          })})), C = function(e) {
          function t(e, n) {
            $traceurRuntime.superConstructor(t).call(this), this.update = new o, this._added = !1, this._parent = e, this.ngValidators = n;
          }
          return $traceurRuntime.createClass(t, {
            onChange: function(e) {
              this._added || (this.formDirective.addControl(this), this._added = !0), b(e, this.viewModel) && (this.viewModel = this.model, this.formDirective.updateModel(this, this.model));
            },
            onDestroy: function() {
              this.formDirective.removeControl(this);
            },
            viewToModelUpdate: function(e) {
              this.viewModel = e, s.callNext(this.update, e);
            },
            get path() {
              return _(this.name, this._parent);
            },
            get formDirective() {
              return this._parent.formDirective;
            },
            get control() {
              return this.formDirective.getControl(this);
            },
            get validator() {
              return y(this.ngValidators);
            }
          }, {}, e);
        }(m), e("NgControlName", C), e("NgControlName", C = t([u({
          selector: "[ng-control]",
          bindings: [w],
          properties: ["name: ngControl", "model: ngModel"],
          events: ["update: ngModel"],
          lifecycle: [l.onDestroy, l.onChange],
          exportAs: "form"
        }), r(0, h()), r(0, d()), r(1, c(v)), n("design:paramtypes", [g, a])], C));
      }
    };
  }), System.register("angular2/src/forms/directives/default_value_accessor", ["angular2/render", "angular2/metadata", "angular2/core", "angular2/di", "angular2/src/forms/directives/ng_control", "angular2/src/facade/lang", "angular2/src/forms/directives/shared"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h;
    return {
      setters: [function(e) {
        i = e.Renderer;
      }, function(e) {
        o = e.Directive;
      }, function(e) {
        s = e.ElementRef;
      }, function(e) {
        a = e.Self;
      }, function(e) {
        c = e.NgControl;
      }, function(e) {
        u = e.isBlank, l = e.isPresent;
      }, function(e) {
        f = e.setProperty;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, r = this && this.__param || function(e, t) {
          return function(n, r) {
            t(n, r, e);
          };
        }, h = $traceurRuntime.createClass(function(e, t, n) {
          this.renderer = t, this.elementRef = n, this.onChange = function(e) {}, this.onTouched = function() {}, this.cd = e, e.valueAccessor = this;
        }, {
          writeValue: function(e) {
            var t = u(e) ? "" : e;
            f(this.renderer, this.elementRef, "value", t);
          },
          get ngClassUntouched() {
            return l(this.cd.control) ? this.cd.control.untouched : !1;
          },
          get ngClassTouched() {
            return l(this.cd.control) ? this.cd.control.touched : !1;
          },
          get ngClassPristine() {
            return l(this.cd.control) ? this.cd.control.pristine : !1;
          },
          get ngClassDirty() {
            return l(this.cd.control) ? this.cd.control.dirty : !1;
          },
          get ngClassValid() {
            return l(this.cd.control) ? this.cd.control.valid : !1;
          },
          get ngClassInvalid() {
            return l(this.cd.control) ? !this.cd.control.valid : !1;
          },
          registerOnChange: function(e) {
            this.onChange = e;
          },
          registerOnTouched: function(e) {
            this.onTouched = e;
          }
        }, {}), e("DefaultValueAccessor", h), e("DefaultValueAccessor", h = t([o({
          selector: "input:not([type=checkbox])[ng-control],textarea[ng-control],input:not([type=checkbox])[ng-form-control],textarea[ng-form-control],input:not([type=checkbox])[ng-model],textarea[ng-model]",
          host: {
            "(change)": "onChange($event.target.value)",
            "(input)": "onChange($event.target.value)",
            "(blur)": "onTouched()",
            "[class.ng-untouched]": "ngClassUntouched",
            "[class.ng-touched]": "ngClassTouched",
            "[class.ng-pristine]": "ngClassPristine",
            "[class.ng-dirty]": "ngClassDirty",
            "[class.ng-valid]": "ngClassValid",
            "[class.ng-invalid]": "ngClassInvalid"
          }
        }), r(0, a()), n("design:paramtypes", [c, i, s])], h));
      }
    };
  }), System.register("angular2/src/di/binding", ["angular2/src/facade/lang", "angular2/src/facade/collection", "angular2/src/reflection/reflection", "angular2/src/di/key", "angular2/src/di/metadata", "angular2/src/di/exceptions", "angular2/src/di/forward_ref"], function(e) {
    "use strict";
    function t(e) {
      return new O(e);
    }
    function n(e, t) {
      if (u(t))
        return r(e);
      var n = m.map(t, function(e) {
        return [e];
      });
      return m.map(t, function(t) {
        return i(e, t, n);
      });
    }
    function r(e) {
      var t = v.parameters(e);
      if (u(t))
        return [];
      if (m.any(t, function(e) {
        return u(e);
      }))
        throw new x(e, t);
      return m.map(t, function(n) {
        return i(e, n, t);
      });
    }
    function i(e, t, n) {
      var r = [],
          i = null,
          s = !1;
      if (!g(t))
        return o(t, s, null, null, r);
      for (var a = null,
          u = null,
          f = 0; f < t.length; ++f) {
        var h = t[f];
        h instanceof c ? i = h : h instanceof y ? i = h.token : h instanceof b ? s = !0 : h instanceof w ? u = h : h instanceof C ? u = h : h instanceof R ? a = h : h instanceof E && (l(h.token) && (i = h.token), r.push(h));
      }
      if (i = S(i), l(i))
        return o(i, s, a, u, r);
      throw new x(e, n);
    }
    function o(e, t, n, r, i) {
      return new D(_.get(e), t, n, r, i);
    }
    var s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y,
        b,
        w,
        C,
        R,
        E,
        x,
        S,
        D,
        I,
        P,
        A,
        O;
    return e("bind", t), {
      setters: [function(e) {
        c = e.Type, u = e.isBlank, l = e.isPresent, f = e.CONST, h = e.CONST_EXPR, d = e.BaseException, p = e.stringify, g = e.isArray;
      }, function(e) {
        m = e.ListWrapper;
      }, function(e) {
        v = e.reflector;
      }, function(e) {
        _ = e.Key;
      }, function(e) {
        y = e.InjectMetadata, b = e.OptionalMetadata, w = e.SelfMetadata, C = e.HostMetadata, R = e.SkipSelfMetadata, E = e.DependencyMetadata;
      }, function(e) {
        x = e.NoAnnotationError;
      }, function(e) {
        S = e.resolveForwardRef;
      }],
      execute: function() {
        s = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, a = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, D = function() {
          function e(e, t, n, r, i) {
            this.key = e, this.optional = t, this.lowerBoundVisibility = n, this.upperBoundVisibility = r, this.properties = i;
          }
          return $traceurRuntime.createClass(e, {}, {fromKey: function(t) {
              return new e(t, !1, null, null, []);
            }});
        }(), e("Dependency", D), I = h([]), P = $traceurRuntime.createClass(function(e, t) {
          var n = t,
              r = n.toClass,
              i = n.toValue,
              o = n.toAlias,
              s = n.toFactory,
              a = n.deps;
          this.token = e, this.toClass = r, this.toValue = i, this.toAlias = o, this.toFactory = s, this.dependencies = a;
        }, {resolve: function() {
            var e,
                t,
                i = this;
            if (l(this.toClass)) {
              var o = S(this.toClass);
              e = v.factory(o), t = r(o);
            } else
              l(this.toAlias) ? (e = function(e) {
                return e;
              }, t = [D.fromKey(_.get(this.toAlias))]) : l(this.toFactory) ? (e = this.toFactory, t = n(this.toFactory, this.dependencies)) : (e = function() {
                return i.toValue;
              }, t = I);
            return new A(_.get(this.token), e, t);
          }}, {}), e("Binding", P), e("Binding", P = s([f(), a("design:paramtypes", [Object, Object])], P)), A = function() {
          function e(e, t, n) {
            this.key = e, this.factory = t, this.dependencies = n;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("ResolvedBinding", A), O = function() {
          function e(e) {
            this.token = e;
          }
          return $traceurRuntime.createClass(e, {
            toClass: function(e) {
              return new P(this.token, {toClass: e});
            },
            toValue: function(e) {
              return new P(this.token, {toValue: e});
            },
            toAlias: function(e) {
              if (u(e))
                throw new d("Can not alias " + p(this.token) + " to a blank value!");
              return new P(this.token, {toAlias: e});
            },
            toFactory: function(e, t) {
              return new P(this.token, {
                toFactory: e,
                deps: t
              });
            }
          }, {});
        }(), e("BindingBuilder", O);
      }
    };
  }), System.register("angular2/src/change_detection/abstract_change_detector", ["angular2/src/facade/lang", "angular2/src/facade/collection", "angular2/src/change_detection/change_detection_util", "angular2/src/change_detection/change_detector_ref", "angular2/src/change_detection/exceptions", "angular2/src/change_detection/constants", "angular2/src/profile/profile", "angular2/src/change_detection/observable_facade"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y;
    return {
      setters: [function(e) {
        t = e.isPresent, n = e.isBlank, r = e.BaseException, i = e.StringWrapper;
      }, function(e) {
        o = e.ListWrapper;
      }, function(e) {
        s = e.ChangeDetectionUtil;
      }, function(e) {
        a = e.ChangeDetectorRef;
      }, function(e) {
        c = e.ChangeDetectionError, u = e.ExpressionChangedAfterItHasBeenCheckedException, l = e.DehydratedException;
      }, function(e) {
        f = e.CHECK_ONCE, h = e.CHECKED, d = e.DETACHED;
      }, function(e) {
        p = e.wtfCreateScope, g = e.wtfLeave;
      }, function(e) {
        m = e.isObservable;
      }],
      execute: function() {
        v = p("ChangeDetector#check(ascii id, bool throwOnChange)"), _ = function() {
          function e(e, t, n, r, i, o, s) {
            this.element = e, this.componentElement = t, this.instance = n, this.context = r, this.locals = i, this.injector = o, this.expression = s;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), y = function() {
          function e(e, t, n, r, i) {
            this.id = e, this.modeOnHydrate = i, this.lightDomChildren = [], this.shadowDomChildren = [], this.alreadyChecked = !1, this.locals = null, this.mode = null, this.pipes = null, this.ref = new a(this), this.directiveRecords = r, this.dispatcher = t, this.protos = n;
          }
          return $traceurRuntime.createClass(e, {
            addChild: function(e) {
              this.lightDomChildren.push(e), e.parent = this;
            },
            removeChild: function(e) {
              o.remove(this.lightDomChildren, e);
            },
            addShadowDomChild: function(e) {
              this.shadowDomChildren.push(e), e.parent = this;
            },
            removeShadowDomChild: function(e) {
              o.remove(this.shadowDomChildren, e);
            },
            remove: function() {
              this.parent.removeChild(this);
            },
            handleEvent: function(e, t, n) {
              var r = this.handleEventInternal(e, t, n);
              return this.markPathToRootAsCheckOnce(), r;
            },
            handleEventInternal: function(e, t, n) {
              return !1;
            },
            detectChanges: function() {
              this.runDetectChanges(!1);
            },
            checkNoChanges: function() {
              throw new r("Not implemented");
            },
            runDetectChanges: function(e) {
              if (!i.equals(this.mode, d) && !i.equals(this.mode, h)) {
                var t = v(this.id, e);
                this.detectChangesInRecords(e), this._detectChangesInLightDomChildren(e), e === !1 && this.callOnAllChangesDone(), this._detectChangesInShadowDomChildren(e), i.equals(this.mode, f) && (this.mode = h), g(t);
              }
            },
            detectChangesInRecords: function(e) {
              this.hydrated() || this.throwDehydratedError();
              try {
                this.detectChangesInRecordsInternal(e);
              } catch (t) {
                this._throwError(t, t.stack);
              }
            },
            detectChangesInRecordsInternal: function(e) {},
            hydrate: function(e, t, n, r) {
              this.mode = this.modeOnHydrate, this.context = e, this.locals = t, this.pipes = r, this.hydrateDirectives(n), this.alreadyChecked = !1;
            },
            hydrateDirectives: function(e) {},
            dehydrate: function() {
              this.dehydrateDirectives(!0), this.unsubsribeFromObservables(), this.context = null, this.locals = null, this.pipes = null;
            },
            dehydrateDirectives: function(e) {},
            hydrated: function() {
              return null !== this.context;
            },
            callOnAllChangesDone: function() {
              this.dispatcher.notifyOnAllChangesDone();
            },
            _detectChangesInLightDomChildren: function(e) {
              for (var t = this.lightDomChildren,
                  n = 0; n < t.length; ++n)
                t[n].runDetectChanges(e);
            },
            _detectChangesInShadowDomChildren: function(e) {
              for (var t = this.shadowDomChildren,
                  n = 0; n < t.length; ++n)
                t[n].runDetectChanges(e);
            },
            markAsCheckOnce: function() {
              this.mode = f;
            },
            markPathToRootAsCheckOnce: function() {
              for (var e = this; t(e) && !i.equals(e.mode, d); )
                i.equals(e.mode, h) && (e.mode = f), e = e.parent;
            },
            unsubsribeFromObservables: function() {
              if (t(this.subscriptions))
                for (var e = 0; e < this.subscriptions.length; ++e) {
                  var n = this.subscriptions[e];
                  t(this.subscriptions[e]) && (n.cancel(), this.subscriptions[e] = null);
                }
            },
            observe: function(e, t) {
              var r = this;
              return m(e) && (n(this.subscriptions) && (this.subscriptions = o.createFixedSize(this.protos.length + 1), this.streams = o.createFixedSize(this.protos.length + 1)), n(this.subscriptions[t]) ? (this.streams[t] = e.changes, this.subscriptions[t] = e.changes.listen(function(e) {
                return r.ref.requestCheck();
              })) : this.streams[t] !== e.changes && (this.subscriptions[t].cancel(), this.streams[t] = e.changes, this.subscriptions[t] = e.changes.listen(function(e) {
                return r.ref.requestCheck();
              }))), e;
            },
            notifyDispatcher: function(e) {
              this.dispatcher.notifyOnBinding(this._currentBinding(), e);
            },
            addChange: function(e, t, r) {
              return n(e) && (e = {}), e[this._currentBinding().propertyName] = s.simpleChange(t, r), e;
            },
            _throwError: function(e, n) {
              var r = this._currentBindingProto(),
                  i = this.dispatcher.getDebugContext(r.bindingRecord.elementIndex, r.directiveIndex),
                  o = t(i) ? new _(i.element, i.componentElement, i.directive, i.context, i.locals, i.injector, r.expressionAsString) : null;
              throw new c(r, e, n, o);
            },
            throwOnChangeError: function(e, t) {
              var n = s.simpleChange(e, t);
              throw new u(this._currentBindingProto(), n, null);
            },
            throwDehydratedError: function() {
              throw new l;
            },
            _currentBinding: function() {
              return this._currentBindingProto().bindingRecord;
            },
            _currentBindingProto: function() {
              return s.protoByIndex(this.protos, this.firstProtoInCurrentBinding);
            }
          }, {});
        }(), e("AbstractChangeDetector", y);
      }
    };
  }), System.register("angular2/src/core/compiler/view_manager", ["angular2/di", "angular2/src/facade/lang", "angular2/src/core/compiler/view_ref", "angular2/src/render/api", "angular2/src/core/compiler/view_manager_utils", "angular2/src/core/compiler/view_pool", "angular2/src/core/compiler/view_listener", "angular2/src/profile/profile"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m;
    return {
      setters: [function(e) {
        r = e.Injectable;
      }, function(e) {
        i = e.isPresent, o = e.isBlank, s = e.BaseException;
      }, function(e) {
        a = e.internalView, c = e.internalProtoView;
      }, function(e) {
        u = e.Renderer, l = e.ViewType;
      }, function(e) {
        f = e.AppViewManagerUtils;
      }, function(e) {
        h = e.AppViewPool;
      }, function(e) {
        d = e.AppViewListener;
      }, function(e) {
        p = e.wtfCreateScope, g = e.wtfLeave;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, m = $traceurRuntime.createClass(function(e, t, n, r) {
          this._viewPool = e, this._viewListener = t, this._utils = n, this._renderer = r, this._scope_createRootHostView = p("AppViewManager#createRootHostView()"), this._scope_destroyRootHostView = p("AppViewManager#destroyRootHostView()"), this._scope_createEmbeddedViewInContainer = p("AppViewManager#createEmbeddedViewInContainer()"), this._scope_createHostViewInContainer = p("AppViewManager#createHostViewInContainer()"), this._scope_destroyViewInContainer = p("AppViewMananger#destroyViewInContainer()"), this._scope_attachViewInContainer = p("AppViewMananger#attachViewInContainer()"), this._scope_detachViewInContainer = p("AppViewMananger#detachViewInContainer()");
        }, {
          getViewContainer: function(e) {
            var t = a(e.parentView);
            return t.elementInjectors[e.boundElementIndex].getViewContainerRef();
          },
          getHostElement: function(e) {
            var t = a(e);
            if (t.proto.type !== l.HOST)
              throw new s("This operation is only allowed on host views");
            return t.elementRefs[t.elementOffset];
          },
          getNamedElementInComponentView: function(e, t) {
            var n = a(e.parentView),
                r = e.boundElementIndex,
                i = n.getNestedView(r);
            if (o(i))
              throw new s("There is no component directive at element " + r);
            var c = i.proto.variableLocations.get(t);
            if (o(c))
              throw new s("Could not find variable " + t);
            return i.elementRefs[i.elementOffset + c];
          },
          getComponent: function(e) {
            var t = a(e.parentView),
                n = e.boundElementIndex;
            return this._utils.getComponentInstance(t, n);
          },
          createRootHostView: function(e, t, n) {
            var r = this._scope_createRootHostView(),
                i = c(e),
                s = t;
            o(s) && (s = i.elementBinders[0].componentDirective.metadata.selector);
            var a = this._renderer.createRootHostView(i.mergeMapping.renderProtoViewRef, i.mergeMapping.renderFragmentCount, s),
                u = this._createMainView(i, a);
            return this._renderer.hydrateView(u.render), this._utils.hydrateRootHostView(u, n), g(r, u.ref);
          },
          destroyRootHostView: function(e) {
            var t = this._scope_destroyRootHostView(),
                n = a(e);
            this._renderer.detachFragment(n.renderFragment), this._renderer.dehydrateView(n.render), this._viewDehydrateRecurse(n), this._viewListener.viewDestroyed(n), this._renderer.destroyView(n.render), g(t);
          },
          createEmbeddedViewInContainer: function(e, t, n) {
            var r = this._scope_createEmbeddedViewInContainer(),
                i = c(n.protoViewRef);
            if (i.type !== l.EMBEDDED)
              throw new s("This method can only be called with embedded ProtoViews!");
            return g(r, this._createViewInContainer(e, t, i, n.elementRef, null));
          },
          createHostViewInContainer: function(e, t, n, r) {
            var i = this._scope_createHostViewInContainer(),
                o = c(n);
            if (o.type !== l.HOST)
              throw new s("This method can only be called with host ProtoViews!");
            return g(i, this._createViewInContainer(e, t, o, e, r));
          },
          _createViewInContainer: function(e, t, n, r, o) {
            var s,
                c = a(e.parentView),
                u = e.boundElementIndex,
                f = a(r.parentView),
                h = r.boundElementIndex,
                d = f.getNestedView(h);
            return n.type === l.EMBEDDED && i(d) && !d.hydrated() ? (s = d, this._attachRenderView(c, u, t, s)) : (s = this._createPooledView(n), this._attachRenderView(c, u, t, s), this._renderer.hydrateView(s.render)), this._utils.attachViewInContainer(c, u, f, h, t, s), this._utils.hydrateViewInContainer(c, u, f, h, t, o), s.ref;
          },
          _attachRenderView: function(e, t, n, r) {
            var i = e.elementRefs[t];
            if (0 === n)
              this._renderer.attachFragmentAfterElement(i, r.renderFragment);
            else {
              var o = e.viewContainers[t].views[n - 1];
              this._renderer.attachFragmentAfterFragment(o.renderFragment, r.renderFragment);
            }
          },
          destroyViewInContainer: function(e, t) {
            var n = this._scope_destroyViewInContainer(),
                r = a(e.parentView),
                i = e.boundElementIndex;
            this._destroyViewInContainer(r, i, t), g(n);
          },
          attachViewInContainer: function(e, t, n) {
            var r = this._scope_attachViewInContainer(),
                i = a(n),
                o = a(e.parentView),
                s = e.boundElementIndex;
            return this._utils.attachViewInContainer(o, s, null, null, t, i), this._attachRenderView(o, s, t, i), g(r, n);
          },
          detachViewInContainer: function(e, t) {
            var n = this._scope_detachViewInContainer(),
                r = a(e.parentView),
                i = e.boundElementIndex,
                o = r.viewContainers[i],
                s = o.views[t];
            return this._utils.detachViewInContainer(r, i, t), this._renderer.detachFragment(s.renderFragment), g(n, s.ref);
          },
          _createMainView: function(e, t) {
            var n = this._utils.createView(e, t, this, this._renderer);
            return this._renderer.setEventDispatcher(n.render, n), this._viewListener.viewCreated(n), n;
          },
          _createPooledView: function(e) {
            var t = this._viewPool.getView(e);
            return o(t) && (t = this._createMainView(e, this._renderer.createView(e.mergeMapping.renderProtoViewRef, e.mergeMapping.renderFragmentCount))), t;
          },
          _destroyPooledView: function(e) {
            var t = this._viewPool.returnView(e);
            t || (this._viewListener.viewDestroyed(e), this._renderer.destroyView(e.render));
          },
          _destroyViewInContainer: function(e, t, n) {
            var r = e.viewContainers[t],
                i = r.views[n];
            this._viewDehydrateRecurse(i), this._utils.detachViewInContainer(e, t, n), i.viewOffset > 0 ? this._renderer.detachFragment(i.renderFragment) : (this._renderer.dehydrateView(i.render), this._renderer.detachFragment(i.renderFragment), this._destroyPooledView(i));
          },
          _viewDehydrateRecurse: function(e) {
            e.hydrated() && this._utils.dehydrateView(e);
            for (var t = e.viewContainers,
                n = e.viewOffset,
                r = e.viewOffset + e.mainMergeMapping.nestedViewCountByViewIndex[e.viewOffset],
                o = e.elementOffset,
                s = n; r >= s; s++)
              for (var a = e.views[s],
                  c = 0; c < a.proto.elementBinders.length; c++, o++) {
                var u = t[o];
                if (i(u))
                  for (var l = u.views.length - 1; l >= 0; l--)
                    this._destroyViewInContainer(a, o, l);
              }
          }
        }, {}), e("AppViewManager", m), e("AppViewManager", m = t([r(), n("design:paramtypes", [h, d, f, u])], m));
      }
    };
  }), System.register("angular2/pipes", ["angular2/src/pipes/uppercase_pipe", "angular2/src/pipes/lowercase_pipe", "angular2/src/pipes/async_pipe", "angular2/src/pipes/json_pipe", "angular2/src/pipes/date_pipe", "angular2/src/pipes/number_pipe", "angular2/src/pipes/limit_to_pipe", "angular2/src/pipes/default_pipes"], function(e) {
    "use strict";
    return {
      setters: [function(t) {
        e("UpperCasePipe", t.UpperCasePipe);
      }, function(t) {
        e("LowerCasePipe", t.LowerCasePipe);
      }, function(t) {
        e("AsyncPipe", t.AsyncPipe);
      }, function(t) {
        e("JsonPipe", t.JsonPipe);
      }, function(t) {
        e("DatePipe", t.DatePipe);
      }, function(t) {
        e("DecimalPipe", t.DecimalPipe), e("PercentPipe", t.PercentPipe), e("CurrencyPipe", t.CurrencyPipe);
      }, function(t) {
        e("LimitToPipe", t.LimitToPipe);
      }, function(t) {
        e("DEFAULT_PIPES_TOKEN", t.DEFAULT_PIPES_TOKEN), e("DEFAULT_PIPES", t.DEFAULT_PIPES);
      }],
      execute: function() {}
    };
  }), System.register("angular2/src/render/dom/compiler/view_loader", ["angular2/di", "angular2/src/facade/lang", "angular2/src/facade/collection", "angular2/src/facade/async", "angular2/src/dom/dom_adapter", "angular2/src/render/xhr", "angular2/src/render/dom/compiler/style_inliner", "angular2/src/render/dom/compiler/style_url_resolver", "angular2/src/profile/profile"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y,
        b,
        w;
    return {
      setters: [function(e) {
        r = e.Injectable;
      }, function(e) {
        i = e.isBlank, o = e.isPresent, s = e.BaseException, a = e.stringify, c = e.isPromise, u = e.StringWrapper;
      }, function(e) {
        l = e.Map, f = e.MapWrapper, h = e.ListWrapper;
      }, function(e) {
        d = e.PromiseWrapper;
      }, function(e) {
        p = e.DOM;
      }, function(e) {
        g = e.XHR;
      }, function(e) {
        m = e.StyleInliner;
      }, function(e) {
        v = e.StyleUrlResolver;
      }, function(e) {
        _ = e.wtfStartTimeRange, y = e.wtfEndTimeRange;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, b = function() {
          function e(e, t) {
            this.template = e, this.styles = t;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("TemplateAndStyles", b), w = $traceurRuntime.createClass(function(e, t, n) {
          this._xhr = e, this._styleInliner = t, this._styleUrlResolver = n, this._cache = new l;
        }, {
          load: function(e) {
            var t = this,
                n = _("ViewLoader#load()", a(e.componentId)),
                r = [this._loadHtml(e.template, e.templateAbsUrl)];
            return o(e.styles) && e.styles.forEach(function(n) {
              var i = t._resolveAndInlineCssText(n, e.templateAbsUrl);
              r.push(i);
            }), o(e.styleAbsUrls) && e.styleAbsUrls.forEach(function(n) {
              var i = t._loadText(n).then(function(n) {
                return t._resolveAndInlineCssText(n, e.templateAbsUrl);
              });
              r.push(i);
            }), d.all(r).then(function(e) {
              var t = e[0],
                  r = h.slice(e, 1),
                  i = new b(t.template, t.styles.concat(r));
              return y(n), i;
            });
          },
          _loadText: function(e) {
            var t = this._cache.get(e);
            return i(t) && (t = d.catchError(this._xhr.get(e), function(t) {
              return d.reject(new s('Failed to fetch url "' + e + '"'), null);
            }), this._cache.set(e, t)), t;
          },
          _loadHtml: function(e, t) {
            var n,
                r = this;
            if (o(e))
              n = d.resolve(e);
            else {
              if (!o(t))
                throw new s("View should have either the templateUrl or template property set");
              n = this._loadText(t);
            }
            return n.then(function(e) {
              var n = p.createTemplate(e);
              if (o(t) && t.indexOf("/") >= 0) {
                var i = t.substring(0, t.lastIndexOf("/"));
                r._substituteBaseUrl(p.content(n), i);
              }
              for (var s = p.querySelectorAll(p.content(n), "STYLE"),
                  a = [],
                  u = 0; u < s.length; u++) {
                var l = s[u];
                a.push(p.getText(l)), p.remove(l);
              }
              for (var f = [],
                  h = [],
                  g = 0; g < s.length; g++) {
                var l = s[g],
                    m = r._resolveAndInlineCssText(p.getText(l), t);
                c(m) ? h.push(m) : f.push(m);
              }
              return 0 === h.length ? d.resolve(new b(p.getInnerHTML(n), f)) : d.all(h).then(function(e) {
                return new b(p.getInnerHTML(n), f.concat(e));
              });
            });
          },
          _substituteBaseUrl: function(e, t) {
            if (p.isElementNode(e)) {
              var n = p.attributeMap(e);
              f.forEach(n, function(n, r) {
                o(n) && n.indexOf("$baseUrl") >= 0 && p.setAttribute(e, r, u.replaceAll(n, /\$baseUrl/g, t));
              });
            }
            for (var r = p.childNodes(e),
                i = 0; i < r.length; i++)
              p.isElementNode(r[i]) && this._substituteBaseUrl(r[i], t);
          },
          _resolveAndInlineCssText: function(e, t) {
            return e = this._styleUrlResolver.resolveUrls(e, t), this._styleInliner.inlineImports(e, t);
          }
        }, {}), e("ViewLoader", w), e("ViewLoader", w = t([r(), n("design:paramtypes", [g, m, v])], w));
      }
    };
  }), System.register("angular2/src/render/dom/compiler/compile_pipeline", ["angular2/src/facade/lang", "angular2/src/dom/dom_adapter", "angular2/src/render/dom/compiler/compile_element", "angular2/src/render/dom/compiler/compile_control", "angular2/src/render/dom/view/proto_view_builder"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s;
    return {
      setters: [function(e) {
        t = e.isPresent;
      }, function(e) {
        n = e.DOM;
      }, function(e) {
        r = e.CompileElement;
      }, function(e) {
        i = e.CompileControl;
      }, function(e) {
        o = e.ProtoViewBuilder;
      }],
      execute: function() {
        s = function() {
          function e(e) {
            this.steps = e, this._control = new i(e);
          }
          return $traceurRuntime.createClass(e, {
            processStyles: function(e) {
              var t = this;
              return e.map(function(e) {
                return t.steps.forEach(function(t) {
                  e = t.processStyle(e);
                }), e;
              });
            },
            processElements: function(e, t, n) {
              var i = [],
                  s = n.componentId,
                  a = new r(e, s);
              return a.inheritedProtoView = new o(e, t, n.encapsulation), a.isViewRoot = !0, this._processElement(i, null, a, s), i;
            },
            _processElement: function(e, i, o) {
              var s = void 0 !== arguments[3] ? arguments[3] : "",
                  a = this._control.internalProcess(e, 0, i, o);
              if (o.compileChildren)
                for (var c = n.firstChild(n.templateAwareRoot(o.element)); t(c); ) {
                  var u = n.nextSibling(c);
                  if (n.isElementNode(c)) {
                    var l = new r(c, s);
                    l.inheritedProtoView = o.inheritedProtoView, l.inheritedElementBinder = o.inheritedElementBinder, l.distanceToInheritedBinder = o.distanceToInheritedBinder + 1, this._processElement(e, o, l);
                  }
                  c = u;
                }
              if (t(a))
                for (var f = 0; f < a.length; f++)
                  this._processElement(e, o, a[f]);
            }
          }, {});
        }(), e("CompilePipeline", s);
      }
    };
  }), System.register("angular2/src/render/dom/compiler/compile_step_factory", ["angular2/src/render/dom/compiler/property_binding_parser", "angular2/src/render/dom/compiler/text_interpolation_parser", "angular2/src/render/dom/compiler/directive_parser", "angular2/src/render/dom/compiler/view_splitter", "angular2/src/render/dom/compiler/style_encapsulator"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a;
    return {
      setters: [function(e) {
        t = e.PropertyBindingParser;
      }, function(e) {
        n = e.TextInterpolationParser;
      }, function(e) {
        r = e.DirectiveParser;
      }, function(e) {
        i = e.ViewSplitter;
      }, function(e) {
        o = e.StyleEncapsulator;
      }],
      execute: function() {
        s = function() {
          function e() {}
          return $traceurRuntime.createClass(e, {createSteps: function(e) {
              return null;
            }}, {});
        }(), e("CompileStepFactory", s), a = function(e) {
          function s(e, t) {
            $traceurRuntime.superConstructor(s).call(this), this._parser = e, this._appId = t, this._componentUIDsCache = new Map;
          }
          return $traceurRuntime.createClass(s, {createSteps: function(e) {
              return [new i(this._parser), new t(this._parser), new r(this._parser, e.directives), new n(this._parser), new o(this._appId, e, this._componentUIDsCache)];
            }}, {}, e);
        }(s), e("DefaultStepFactory", a);
      }
    };
  }), System.register("angular2/forms", ["angular2/src/forms/model", "angular2/src/forms/directives/abstract_control_directive", "angular2/src/forms/directives/control_container", "angular2/src/forms/directives/ng_control_name", "angular2/src/forms/directives/ng_form_control", "angular2/src/forms/directives/ng_model", "angular2/src/forms/directives/ng_control", "angular2/src/forms/directives/ng_control_group", "angular2/src/forms/directives/ng_form_model", "angular2/src/forms/directives/ng_form", "angular2/src/forms/directives/default_value_accessor", "angular2/src/forms/directives/checkbox_value_accessor", "angular2/src/forms/directives/select_control_value_accessor", "angular2/src/forms/directives", "angular2/src/forms/validators", "angular2/src/forms/directives/validators", "angular2/src/forms/form_builder", "angular2/src/facade/lang"], function(e) {
    "use strict";
    var t,
        n,
        r;
    return {
      setters: [function(t) {
        e("AbstractControl", t.AbstractControl), e("Control", t.Control), e("ControlGroup", t.ControlGroup), e("ControlArray", t.ControlArray);
      }, function(t) {
        e("AbstractControlDirective", t.AbstractControlDirective);
      }, function(t) {
        e("ControlContainer", t.ControlContainer);
      }, function(t) {
        e("NgControlName", t.NgControlName);
      }, function(t) {
        e("NgFormControl", t.NgFormControl);
      }, function(t) {
        e("NgModel", t.NgModel);
      }, function(t) {
        e("NgControl", t.NgControl);
      }, function(t) {
        e("NgControlGroup", t.NgControlGroup);
      }, function(t) {
        e("NgFormModel", t.NgFormModel);
      }, function(t) {
        e("NgForm", t.NgForm);
      }, function(t) {
        e("DefaultValueAccessor", t.DefaultValueAccessor);
      }, function(t) {
        e("CheckboxControlValueAccessor", t.CheckboxControlValueAccessor);
      }, function(t) {
        e("NgSelectOption", t.NgSelectOption), e("SelectControlValueAccessor", t.SelectControlValueAccessor);
      }, function(t) {
        e("FORM_DIRECTIVES", t.FORM_DIRECTIVES);
      }, function(t) {
        e("Validators", t.Validators);
      }, function(t) {
        e("NgValidator", t.NgValidator), e("NgRequiredValidator", t.NgRequiredValidator);
      }, function(n) {
        t = n.FormBuilder, e("FormBuilder", n.FormBuilder);
      }, function(e) {
        n = e.CONST_EXPR;
      }],
      execute: function() {
        r = n([t]), e("FORM_BINDINGS", r);
      }
    };
  }), System.register("angular2/src/di/injector", ["angular2/src/facade/collection", "angular2/src/di/binding", "angular2/src/di/exceptions", "angular2/src/facade/lang", "angular2/src/di/key", "angular2/src/di/forward_ref", "angular2/src/di/metadata"], function(e) {
    "use strict";
    function t(e, t) {
      return e === t || t === A.PublicAndPrivate || e === A.PublicAndPrivate;
    }
    function n(e) {
      for (var t = u.createFixedSize(e.length),
          r = 0; r < e.length; r++) {
        var i = E(e[r]),
            o = void 0;
        if (i instanceof l)
          o = i;
        else if (i instanceof b)
          o = d(i).toClass(i).resolve();
        else if (i instanceof f)
          o = i.resolve();
        else {
          if (!(i instanceof a))
            throw new _(i instanceof h ? i.token : i);
          o = n(i);
        }
        t[r] = o;
      }
      return t;
    }
    function r(e) {
      return c.values(e);
    }
    function i(e, t) {
      return u.forEach(e, function(e) {
        e instanceof l ? t.set(e.key.id, e) : e instanceof a && i(e, t);
      }), t;
    }
    function o(e, t) {
      for (var n = [],
          r = 0; r < e._proto.numberOfBindings; ++r)
        n.push(t(e._proto.getBindingAtIndex(r)));
      return n;
    }
    var s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y,
        b,
        w,
        C,
        R,
        E,
        x,
        S,
        D,
        I,
        P,
        A,
        O,
        T,
        j,
        N,
        V,
        k,
        M,
        B;
    return {
      setters: [function(e) {
        s = e.Map, a = e.List, c = e.MapWrapper, u = e.ListWrapper;
      }, function(e) {
        l = e.ResolvedBinding, f = e.Binding, h = e.BindingBuilder, d = e.bind;
      }, function(e) {
        p = e.AbstractBindingError, g = e.NoBindingError, m = e.CyclicDependencyError, v = e.InstantiationError, _ = e.InvalidBindingError, y = e.OutOfBoundsError;
      }, function(e) {
        b = e.Type, w = e.isPresent, C = e.CONST_EXPR;
      }, function(e) {
        R = e.Key;
      }, function(e) {
        E = e.resolveForwardRef;
      }, function(e) {
        x = e.SelfMetadata, S = e.HostMetadata, D = e.SkipSelfMetadata;
      }],
      execute: function() {
        I = 10, P = C(new Object), e("UNDEFINED", P), e("Visibility", A), function(e) {
          e[e.Public = 0] = "Public", e[e.Private = 1] = "Private", e[e.PublicAndPrivate = 2] = "PublicAndPrivate";
        }(A || e("Visibility", A = {})), O = function() {
          function e(e, t) {
            this.binding0 = null, this.binding1 = null, this.binding2 = null, this.binding3 = null, this.binding4 = null, this.binding5 = null, this.binding6 = null, this.binding7 = null, this.binding8 = null, this.binding9 = null, this.keyId0 = null, this.keyId1 = null, this.keyId2 = null, this.keyId3 = null, this.keyId4 = null, this.keyId5 = null, this.keyId6 = null, this.keyId7 = null, this.keyId8 = null, this.keyId9 = null, this.visibility0 = null, this.visibility1 = null, this.visibility2 = null, this.visibility3 = null, this.visibility4 = null, this.visibility5 = null, this.visibility6 = null, this.visibility7 = null, this.visibility8 = null, this.visibility9 = null;
            var n = t.length;
            n > 0 && (this.binding0 = t[0].binding, this.keyId0 = t[0].getKeyId(), this.visibility0 = t[0].visibility), n > 1 && (this.binding1 = t[1].binding, this.keyId1 = t[1].getKeyId(), this.visibility1 = t[1].visibility), n > 2 && (this.binding2 = t[2].binding, this.keyId2 = t[2].getKeyId(), this.visibility2 = t[2].visibility), n > 3 && (this.binding3 = t[3].binding, this.keyId3 = t[3].getKeyId(), this.visibility3 = t[3].visibility), n > 4 && (this.binding4 = t[4].binding, this.keyId4 = t[4].getKeyId(), this.visibility4 = t[4].visibility), n > 5 && (this.binding5 = t[5].binding, this.keyId5 = t[5].getKeyId(), this.visibility5 = t[5].visibility), n > 6 && (this.binding6 = t[6].binding, this.keyId6 = t[6].getKeyId(), this.visibility6 = t[6].visibility), n > 7 && (this.binding7 = t[7].binding, this.keyId7 = t[7].getKeyId(), this.visibility7 = t[7].visibility), n > 8 && (this.binding8 = t[8].binding, this.keyId8 = t[8].getKeyId(), this.visibility8 = t[8].visibility), n > 9 && (this.binding9 = t[9].binding, this.keyId9 = t[9].getKeyId(), this.visibility9 = t[9].visibility);
          }
          return $traceurRuntime.createClass(e, {
            getBindingAtIndex: function(e) {
              if (0 == e)
                return this.binding0;
              if (1 == e)
                return this.binding1;
              if (2 == e)
                return this.binding2;
              if (3 == e)
                return this.binding3;
              if (4 == e)
                return this.binding4;
              if (5 == e)
                return this.binding5;
              if (6 == e)
                return this.binding6;
              if (7 == e)
                return this.binding7;
              if (8 == e)
                return this.binding8;
              if (9 == e)
                return this.binding9;
              throw new y(e);
            },
            createInjectorStrategy: function(e) {
              return new N(e, this);
            }
          }, {});
        }(), e("ProtoInjectorInlineStrategy", O), T = function() {
          function e(e, t) {
            var n = t.length;
            this.bindings = u.createFixedSize(n), this.keyIds = u.createFixedSize(n), this.visibilities = u.createFixedSize(n);
            for (var r = 0; n > r; r++)
              this.bindings[r] = t[r].binding, this.keyIds[r] = t[r].getKeyId(), this.visibilities[r] = t[r].visibility;
          }
          return $traceurRuntime.createClass(e, {
            getBindingAtIndex: function(e) {
              if (0 > e || e >= this.bindings.length)
                throw new y(e);
              return this.bindings[e];
            },
            createInjectorStrategy: function(e) {
              return new V(this, e);
            }
          }, {});
        }(), e("ProtoInjectorDynamicStrategy", T), j = function() {
          function e(e) {
            this.numberOfBindings = e.length, this._strategy = e.length > I ? new T(this, e) : new O(this, e);
          }
          return $traceurRuntime.createClass(e, {getBindingAtIndex: function(e) {
              return this._strategy.getBindingAtIndex(e);
            }}, {});
        }(), e("ProtoInjector", j), N = function() {
          function e(e, t) {
            this.injector = e, this.protoStrategy = t, this.obj0 = P, this.obj1 = P, this.obj2 = P, this.obj3 = P, this.obj4 = P, this.obj5 = P, this.obj6 = P, this.obj7 = P, this.obj8 = P, this.obj9 = P;
          }
          return $traceurRuntime.createClass(e, {
            resetConstructionCounter: function() {
              this.injector._constructionCounter = 0;
            },
            instantiateBinding: function(e, t) {
              return this.injector._new(e, t);
            },
            attach: function(e, t) {
              var n = this.injector;
              n._parent = e, n._isHost = t;
            },
            getObjByKeyId: function(e, n) {
              var r = this.protoStrategy,
                  i = this.injector;
              return r.keyId0 === e && t(r.visibility0, n) ? (this.obj0 === P && (this.obj0 = i._new(r.binding0, r.visibility0)), this.obj0) : r.keyId1 === e && t(r.visibility1, n) ? (this.obj1 === P && (this.obj1 = i._new(r.binding1, r.visibility1)), this.obj1) : r.keyId2 === e && t(r.visibility2, n) ? (this.obj2 === P && (this.obj2 = i._new(r.binding2, r.visibility2)), this.obj2) : r.keyId3 === e && t(r.visibility3, n) ? (this.obj3 === P && (this.obj3 = i._new(r.binding3, r.visibility3)), this.obj3) : r.keyId4 === e && t(r.visibility4, n) ? (this.obj4 === P && (this.obj4 = i._new(r.binding4, r.visibility4)), this.obj4) : r.keyId5 === e && t(r.visibility5, n) ? (this.obj5 === P && (this.obj5 = i._new(r.binding5, r.visibility5)), this.obj5) : r.keyId6 === e && t(r.visibility6, n) ? (this.obj6 === P && (this.obj6 = i._new(r.binding6, r.visibility6)), this.obj6) : r.keyId7 === e && t(r.visibility7, n) ? (this.obj7 === P && (this.obj7 = i._new(r.binding7, r.visibility7)), this.obj7) : r.keyId8 === e && t(r.visibility8, n) ? (this.obj8 === P && (this.obj8 = i._new(r.binding8, r.visibility8)), this.obj8) : r.keyId9 === e && t(r.visibility9, n) ? (this.obj9 === P && (this.obj9 = i._new(r.binding9, r.visibility9)), this.obj9) : P;
            },
            getObjAtIndex: function(e) {
              if (0 == e)
                return this.obj0;
              if (1 == e)
                return this.obj1;
              if (2 == e)
                return this.obj2;
              if (3 == e)
                return this.obj3;
              if (4 == e)
                return this.obj4;
              if (5 == e)
                return this.obj5;
              if (6 == e)
                return this.obj6;
              if (7 == e)
                return this.obj7;
              if (8 == e)
                return this.obj8;
              if (9 == e)
                return this.obj9;
              throw new y(e);
            },
            getMaxNumberOfObjects: function() {
              return I;
            }
          }, {});
        }(), e("InjectorInlineStrategy", N), V = function() {
          function e(e, t) {
            this.protoStrategy = e, this.injector = t, this.objs = u.createFixedSize(e.bindings.length), u.fill(this.objs, P);
          }
          return $traceurRuntime.createClass(e, {
            resetConstructionCounter: function() {
              this.injector._constructionCounter = 0;
            },
            instantiateBinding: function(e, t) {
              return this.injector._new(e, t);
            },
            attach: function(e, t) {
              var n = this.injector;
              n._parent = e, n._isHost = t;
            },
            getObjByKeyId: function(e, n) {
              for (var r = this.protoStrategy,
                  i = 0; i < r.keyIds.length; i++)
                if (r.keyIds[i] === e && t(r.visibilities[i], n))
                  return this.objs[i] === P && (this.objs[i] = this.injector._new(r.bindings[i], r.visibilities[i])), this.objs[i];
              return P;
            },
            getObjAtIndex: function(e) {
              if (0 > e || e >= this.objs.length)
                throw new y(e);
              return this.objs[e];
            },
            getMaxNumberOfObjects: function() {
              return this.objs.length;
            }
          }, {});
        }(), e("InjectorDynamicStrategy", V), k = function() {
          function e(e, t) {
            this.binding = e, this.visibility = t;
          }
          return $traceurRuntime.createClass(e, {getKeyId: function() {
              return this.binding.key.id;
            }}, {});
        }(), e("BindingWithVisibility", k), M = function() {
          function e(e) {
            var t = void 0 !== arguments[1] ? arguments[1] : null,
                n = void 0 !== arguments[2] ? arguments[2] : null,
                r = void 0 !== arguments[3] ? arguments[3] : null;
            this._proto = e, this._parent = t, this._depProvider = n, this._debugContext = r, this._isHost = !1, this._constructionCounter = 0, this._strategy = e._strategy.createInjectorStrategy(this);
          }
          return $traceurRuntime.createClass(e, {
            debugContext: function() {
              return this._debugContext();
            },
            get: function(e) {
              return this._getByKey(R.get(e), null, null, !1, A.PublicAndPrivate);
            },
            getOptional: function(e) {
              return this._getByKey(R.get(e), null, null, !0, A.PublicAndPrivate);
            },
            getAt: function(e) {
              return this._strategy.getObjAtIndex(e);
            },
            get parent() {
              return this._parent;
            },
            get internalStrategy() {
              return this._strategy;
            },
            resolveAndCreateChild: function(t) {
              var n = void 0 !== arguments[1] ? arguments[1] : null,
                  r = e.resolve(t);
              return this.createChildFromResolved(r, n);
            },
            createChildFromResolved: function(t) {
              var n = void 0 !== arguments[1] ? arguments[1] : null,
                  r = t.map(function(e) {
                    return new k(e, A.Public);
                  }),
                  i = new j(r),
                  o = new e(i, null, n);
              return o._parent = this, o;
            },
            resolveAndInstantiate: function(t) {
              return this.instantiateResolved(e.resolve([t])[0]);
            },
            instantiateResolved: function(e) {
              return this._instantiate(e, A.PublicAndPrivate);
            },
            _new: function(e, t) {
              if (this._constructionCounter++ > this._strategy.getMaxNumberOfObjects())
                throw new m(this, e.key);
              return this._instantiate(e, t);
            },
            _instantiate: function(e, t) {
              var n,
                  r,
                  i,
                  o,
                  s,
                  a,
                  c,
                  u,
                  l,
                  f,
                  h,
                  d,
                  g,
                  m,
                  _,
                  y,
                  b,
                  w,
                  C,
                  R,
                  E = e.factory,
                  x = e.dependencies,
                  S = x.length;
              try {
                n = S > 0 ? this._getByDependency(e, x[0], t) : null, r = S > 1 ? this._getByDependency(e, x[1], t) : null, i = S > 2 ? this._getByDependency(e, x[2], t) : null, o = S > 3 ? this._getByDependency(e, x[3], t) : null, s = S > 4 ? this._getByDependency(e, x[4], t) : null, a = S > 5 ? this._getByDependency(e, x[5], t) : null, c = S > 6 ? this._getByDependency(e, x[6], t) : null, u = S > 7 ? this._getByDependency(e, x[7], t) : null, l = S > 8 ? this._getByDependency(e, x[8], t) : null, f = S > 9 ? this._getByDependency(e, x[9], t) : null, h = S > 10 ? this._getByDependency(e, x[10], t) : null, d = S > 11 ? this._getByDependency(e, x[11], t) : null, g = S > 12 ? this._getByDependency(e, x[12], t) : null, m = S > 13 ? this._getByDependency(e, x[13], t) : null, _ = S > 14 ? this._getByDependency(e, x[14], t) : null, y = S > 15 ? this._getByDependency(e, x[15], t) : null, b = S > 16 ? this._getByDependency(e, x[16], t) : null, w = S > 17 ? this._getByDependency(e, x[17], t) : null, C = S > 18 ? this._getByDependency(e, x[18], t) : null, R = S > 19 ? this._getByDependency(e, x[19], t) : null;
              } catch (D) {
                throw D instanceof p && D.addKey(this, e.key), D;
              }
              var I;
              try {
                switch (S) {
                  case 0:
                    I = E();
                    break;
                  case 1:
                    I = E(n);
                    break;
                  case 2:
                    I = E(n, r);
                    break;
                  case 3:
                    I = E(n, r, i);
                    break;
                  case 4:
                    I = E(n, r, i, o);
                    break;
                  case 5:
                    I = E(n, r, i, o, s);
                    break;
                  case 6:
                    I = E(n, r, i, o, s, a);
                    break;
                  case 7:
                    I = E(n, r, i, o, s, a, c);
                    break;
                  case 8:
                    I = E(n, r, i, o, s, a, c, u);
                    break;
                  case 9:
                    I = E(n, r, i, o, s, a, c, u, l);
                    break;
                  case 10:
                    I = E(n, r, i, o, s, a, c, u, l, f);
                    break;
                  case 11:
                    I = E(n, r, i, o, s, a, c, u, l, f, h);
                    break;
                  case 12:
                    I = E(n, r, i, o, s, a, c, u, l, f, h, d);
                    break;
                  case 13:
                    I = E(n, r, i, o, s, a, c, u, l, f, h, d, g);
                    break;
                  case 14:
                    I = E(n, r, i, o, s, a, c, u, l, f, h, d, g, m);
                    break;
                  case 15:
                    I = E(n, r, i, o, s, a, c, u, l, f, h, d, g, m, _);
                    break;
                  case 16:
                    I = E(n, r, i, o, s, a, c, u, l, f, h, d, g, m, _, y);
                    break;
                  case 17:
                    I = E(n, r, i, o, s, a, c, u, l, f, h, d, g, m, _, y, b);
                    break;
                  case 18:
                    I = E(n, r, i, o, s, a, c, u, l, f, h, d, g, m, _, y, b, w);
                    break;
                  case 19:
                    I = E(n, r, i, o, s, a, c, u, l, f, h, d, g, m, _, y, b, w, C);
                    break;
                  case 20:
                    I = E(n, r, i, o, s, a, c, u, l, f, h, d, g, m, _, y, b, w, C, R);
                }
              } catch (D) {
                throw new v(this, D, D.stack, e.key);
              }
              return I;
            },
            _getByDependency: function(e, t, n) {
              var r = w(this._depProvider) ? this._depProvider.getDependency(this, e, t) : P;
              return r !== P ? r : this._getByKey(t.key, t.lowerBoundVisibility, t.upperBoundVisibility, t.optional, n);
            },
            _getByKey: function(e, t, n, r, i) {
              return e === B ? this : n instanceof x ? this._getByKeySelf(e, r, i) : n instanceof S ? this._getByKeyHost(e, r, i, t) : this._getByKeyDefault(e, r, i, t);
            },
            _throwOrNull: function(e, t) {
              if (t)
                return null;
              throw new g(this, e);
            },
            _getByKeySelf: function(e, t, n) {
              var r = this._strategy.getObjByKeyId(e.id, n);
              return r !== P ? r : this._throwOrNull(e, t);
            },
            _getByKeyHost: function(e, t, n, r) {
              var i = this;
              if (r instanceof D) {
                if (i._isHost)
                  return this._getPrivateDependency(e, t, i);
                i = i._parent;
              }
              for (; null != i; ) {
                var o = i._strategy.getObjByKeyId(e.id, n);
                if (o !== P)
                  return o;
                if (w(i._parent) && i._isHost)
                  return this._getPrivateDependency(e, t, i);
                i = i._parent;
              }
              return this._throwOrNull(e, t);
            },
            _getPrivateDependency: function(e, t, n) {
              var r = n._parent._strategy.getObjByKeyId(e.id, A.Private);
              return r !== P ? r : this._throwOrNull(e, t);
            },
            _getByKeyDefault: function(e, t, n, r) {
              var i = this;
              for (r instanceof D && (n = i._isHost ? A.PublicAndPrivate : A.Public, i = i._parent); null != i; ) {
                var o = i._strategy.getObjByKeyId(e.id, n);
                if (o !== P)
                  return o;
                n = i._isHost ? A.PublicAndPrivate : A.Public, i = i._parent;
              }
              return this._throwOrNull(e, t);
            },
            get displayName() {
              return "Injector(bindings: [" + o(this, function(e) {
                return ' "' + e.key.displayName + '" ';
              }).join(", ") + "])";
            },
            toString: function() {
              return this.displayName;
            }
          }, {
            resolve: function(e) {
              var t = n(e),
                  o = i(t, new s);
              return r(o);
            },
            resolveAndCreate: function(t) {
              var n = void 0 !== arguments[1] ? arguments[1] : null,
                  r = e.resolve(t);
              return e.fromResolvedBindings(r, n);
            },
            fromResolvedBindings: function(t) {
              var n = void 0 !== arguments[1] ? arguments[1] : null,
                  r = t.map(function(e) {
                    return new k(e, A.Public);
                  }),
                  i = new j(r),
                  o = new e(i, null, n);
              return o;
            }
          });
        }(), e("Injector", M), B = R.get(M);
      }
    };
  }), System.register("angular2/src/change_detection/change_detection_jit_generator", ["angular2/src/facade/lang", "angular2/src/facade/collection", "angular2/src/change_detection/abstract_change_detector", "angular2/src/change_detection/change_detection_util", "angular2/src/change_detection/codegen_name_util", "angular2/src/change_detection/codegen_logic_util"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d;
    return {
      setters: [function(e) {
        t = e.BaseException, n = e.isBlank;
      }, function(e) {
        r = e.ListWrapper;
      }, function(e) {
        i = e.AbstractChangeDetector;
      }, function(e) {
        o = e.ChangeDetectionUtil;
      }, function(e) {
        s = e.CodegenNameUtil, a = e.sanitizeName;
      }, function(e) {
        c = e.CodegenLogicUtil;
      }],
      execute: function() {
        u = "AbstractChangeDetector", l = "ChangeDetectionUtil", f = "isChanged", h = "changes", d = function() {
          function e(e, t, n, r, i, o) {
            this.id = e, this.changeDetectionStrategy = t, this.records = n, this.eventBindings = r, this.directiveRecords = i, this.generateCheckNoChanges = o, this._names = new s(this.records, this.eventBindings, this.directiveRecords, l), this._logic = new c(this._names, l, t), this._typeName = a("ChangeDetector_" + this.id);
          }
          return $traceurRuntime.createClass(e, {
            generate: function() {
              var e = this,
                  t = "\n      var " + this._typeName + " = function " + this._typeName + "(dispatcher, protos, directiveRecords) {\n        " + u + ".call(\n            this, " + JSON.stringify(this.id) + ', dispatcher, protos, directiveRecords,\n            "' + o.changeDetectionMode(this.changeDetectionStrategy) + '");\n        this.dehydrateDirectives(false);\n      }\n\n      ' + this._typeName + ".prototype = Object.create(" + u + ".prototype);\n\n      " + this._typeName + ".prototype.detectChangesInRecordsInternal = function(throwOnChange) {\n        " + this._names.genInitLocals() + "\n        var " + f + " = false;\n        var " + h + " = null;\n\n        " + this.records.map(function(t) {
                    return e._genRecord(t);
                  }).join("\n") + "\n\n        " + this._names.getAlreadyCheckedName() + " = true;\n      }\n\n      " + this._maybeGenHandleEventInternal() + "\n\n      " + this._genCheckNoChanges() + "\n\n      " + this._maybeGenCallOnAllChangesDone() + "\n\n      " + this._maybeGenHydrateDirectives() + "\n\n      " + this._maybeGenDehydrateDirectives() + "\n\n      return function(dispatcher) {\n        return new " + this._typeName + "(dispatcher, protos, directiveRecords);\n      }\n    ";
              return new Function("AbstractChangeDetector", "ChangeDetectionUtil", "protos", "directiveRecords", t)(i, o, this.records, this.directiveRecords);
            },
            _maybeGenHandleEventInternal: function() {
              var e = this;
              if (this.eventBindings.length > 0) {
                var t = this.eventBindings.map(function(t) {
                  return e._genEventBinding(t);
                }).join("\n");
                return "\n        " + this._typeName + ".prototype.handleEventInternal = function(eventName, elIndex, locals) {\n          var " + this._names.getPreventDefaultAccesor() + " = false;\n          " + this._names.genInitEventLocals() + "\n          " + t + "\n          return " + this._names.getPreventDefaultAccesor() + ";\n        }\n      ";
              }
              return "";
            },
            _genEventBinding: function(e) {
              var t = this,
                  n = e.records.map(function(n) {
                    return t._genEventBindingEval(e, n);
                  }).join("\n");
              return '\n    if (eventName === "' + e.eventName + '" && elIndex === ' + e.elIndex + ") {\n      " + n + "\n    }";
            },
            _genEventBindingEval: function(e, t) {
              if (t.lastInBinding) {
                var n = this._logic.genEventBindingEvalValue(e, t),
                    r = this._genMarkPathToRootAsCheckOnce(t),
                    i = this._genUpdatePreventDefault(e, t);
                return n + "\n" + r + "\n" + i;
              }
              return this._logic.genEventBindingEvalValue(e, t);
            },
            _genMarkPathToRootAsCheckOnce: function(e) {
              var t = e.bindingRecord;
              return t.isDefaultChangeDetection() ? "" : this._names.getDetectorName(t.directiveRecord.directiveIndex) + ".markPathToRootAsCheckOnce();";
            },
            _genUpdatePreventDefault: function(e, t) {
              var n = this._names.getEventLocalName(e, t.selfIndex);
              return "if (" + n + " === false) { " + this._names.getPreventDefaultAccesor() + " = true};";
            },
            _maybeGenDehydrateDirectives: function() {
              var e = this._names.genPipeOnDestroy();
              e && (e = "if (destroyPipes) { " + e + " }");
              var t = this._names.genDehydrateFields();
              return e || t ? this._typeName + ".prototype.dehydrateDirectives = function(destroyPipes) {\n        " + e + "\n        " + t + "\n    }" : "";
            },
            _maybeGenHydrateDirectives: function() {
              var e = this._genHydrateDirectives(),
                  t = this._genHydrateDetectors();
              return e || t ? this._typeName + ".prototype.hydrateDirectives = function(directives) {\n      " + e + "\n      " + t + "\n    }" : "";
            },
            _genHydrateDirectives: function() {
              for (var e = this._names.getAllDirectiveNames(),
                  t = r.createFixedSize(e.length),
                  n = 0,
                  i = e.length; i > n; ++n)
                t[n] = e[n] + " = directives.getDirectiveFor(\n          " + this._names.getDirectivesAccessorName() + "[" + n + "].directiveIndex);";
              return t.join("\n");
            },
            _genHydrateDetectors: function() {
              for (var e = this._names.getAllDetectorNames(),
                  t = r.createFixedSize(e.length),
                  n = 0,
                  i = e.length; i > n; ++n)
                t[n] = e[n] + " = directives.getDetectorFor(\n          " + this._names.getDirectivesAccessorName() + "[" + n + "].directiveIndex);";
              return t.join("\n");
            },
            _maybeGenCallOnAllChangesDone: function() {
              for (var e = [],
                  t = this.directiveRecords,
                  n = t.length - 1; n >= 0; --n) {
                var r = t[n];
                r.callOnAllChangesDone && e.push(this._names.getDirectiveName(r.directiveIndex) + ".onAllChangesDone();");
              }
              if (e.length > 0) {
                var i = e.join("\n");
                return "\n        " + this._typeName + ".prototype.callOnAllChangesDone = function() {\n          " + u + ".prototype.callOnAllChangesDone.call(this);\n          " + i + "\n        }\n      ";
              }
              return "";
            },
            _genRecord: function(e) {
              var t;
              return t = e.isLifeCycleRecord() ? this._genDirectiveLifecycle(e) : e.isPipeRecord() ? this._genPipeCheck(e) : this._genReferenceCheck(e), "\n      " + this._maybeFirstInBinding(e) + "\n      " + t + "\n      " + this._maybeGenLastInDirective(e) + "\n    ";
            },
            _genDirectiveLifecycle: function(e) {
              if ("onCheck" === e.name)
                return this._genOnCheck(e);
              if ("onInit" === e.name)
                return this._genOnInit(e);
              if ("onChange" === e.name)
                return this._genOnChange(e);
              throw new t("Unknown lifecycle event '" + e.name + "'");
            },
            _genPipeCheck: function(e) {
              var t = this,
                  n = this._names.getLocalName(e.contextIndex),
                  r = e.args.map(function(e) {
                    return t._names.getLocalName(e);
                  }).join(", "),
                  i = this._names.getFieldName(e.selfIndex),
                  o = this._names.getLocalName(e.selfIndex),
                  s = this._names.getPipeName(e.selfIndex),
                  a = e.name,
                  c = "\n      if (" + s + " === " + l + ".uninitialized) {\n        " + s + " = " + this._names.getPipesAccessorName() + ".get('" + a + "');\n      }\n      " + o + " = " + s + ".transform(" + n + ", [" + r + "]);\n    ",
                  u = "\n      if (" + i + " !== " + o + ") {\n        " + o + " = " + l + ".unwrapValue(" + o + ")\n        " + this._genChangeMarker(e) + "\n        " + this._genUpdateDirectiveOrElement(e) + "\n        " + this._genAddToChanges(e) + "\n        " + i + " = " + o + ";\n      }\n    ";
              return e.shouldBeChecked() ? "" + c + u : c;
            },
            _genReferenceCheck: function(e) {
              var t = this,
                  n = this._names.getFieldName(e.selfIndex),
                  r = this._names.getLocalName(e.selfIndex),
                  i = "\n      " + this._logic.genPropertyBindingEvalValue(e) + "\n    ",
                  o = "\n      if (" + r + " !== " + n + ") {\n        " + this._genChangeMarker(e) + "\n        " + this._genUpdateDirectiveOrElement(e) + "\n        " + this._genAddToChanges(e) + "\n        " + n + " = " + r + ";\n      }\n    ",
                  s = e.shouldBeChecked() ? "" + i + o : i;
              if (e.isPureFunction()) {
                var a = e.args.map(function(e) {
                  return t._names.getChangeName(e);
                }).join(" || ");
                return e.isUsedByOtherRecord() ? "if (" + a + ") { " + s + " } else { " + r + " = " + n + "; }" : "if (" + a + ") { " + s + " }";
              }
              return s;
            },
            _genChangeMarker: function(e) {
              return e.argumentToPureFunction ? this._names.getChangeName(e.selfIndex) + " = true" : "";
            },
            _genUpdateDirectiveOrElement: function(e) {
              if (!e.lastInBinding)
                return "";
              var t = this._names.getLocalName(e.selfIndex),
                  n = this._names.getFieldName(e.selfIndex),
                  r = e.bindingRecord;
              if (r.isDirective()) {
                var i = this._names.getDirectiveName(r.directiveRecord.directiveIndex) + "." + r.propertyName;
                return "\n        " + this._genThrowOnChangeCheck(n, t) + "\n        " + i + " = " + t + ";\n        " + f + " = true;\n      ";
              }
              return "\n        " + this._genThrowOnChangeCheck(n, t) + "\n        this.notifyDispatcher(" + t + ");\n      ";
            },
            _genThrowOnChangeCheck: function(e, t) {
              return this.generateCheckNoChanges ? "\n        if(throwOnChange) {\n          this.throwOnChangeError(" + e + ", " + t + ");\n        }\n        " : "";
            },
            _genCheckNoChanges: function() {
              return this.generateCheckNoChanges ? this._typeName + ".prototype.checkNoChanges = function() { this.runDetectChanges(true); }" : "";
            },
            _genAddToChanges: function(e) {
              var t = this._names.getLocalName(e.selfIndex),
                  n = this._names.getFieldName(e.selfIndex);
              return e.bindingRecord.callOnChange() ? h + " = this.addChange(" + h + ", " + n + ", " + t + ");" : "";
            },
            _maybeFirstInBinding: function(e) {
              var t = o.protoByIndex(this.records, e.selfIndex - 1),
                  r = n(t) || t.bindingRecord !== e.bindingRecord;
              return r ? this._names.getFirstProtoInCurrentBinding() + " = " + e.selfIndex + ";" : "";
            },
            _maybeGenLastInDirective: function(e) {
              return e.lastInDirective ? "\n      " + h + " = null;\n      " + this._genNotifyOnPushDetectors(e) + "\n      " + f + " = false;\n    " : "";
            },
            _genOnCheck: function(e) {
              var t = e.bindingRecord;
              return "if (!throwOnChange) " + this._names.getDirectiveName(t.directiveRecord.directiveIndex) + ".onCheck();";
            },
            _genOnInit: function(e) {
              var t = e.bindingRecord;
              return "if (!throwOnChange && !" + this._names.getAlreadyCheckedName() + ") " + this._names.getDirectiveName(t.directiveRecord.directiveIndex) + ".onInit();";
            },
            _genOnChange: function(e) {
              var t = e.bindingRecord;
              return "if (!throwOnChange && " + h + ") " + this._names.getDirectiveName(t.directiveRecord.directiveIndex) + ".onChange(" + h + ");";
            },
            _genNotifyOnPushDetectors: function(e) {
              var t = e.bindingRecord;
              if (!e.lastInDirective || t.isDefaultChangeDetection())
                return "";
              var n = "\n      if(" + f + ") {\n        " + this._names.getDetectorName(t.directiveRecord.directiveIndex) + ".markAsCheckOnce();\n      }\n    ";
              return n;
            }
          }, {});
        }(), e("ChangeDetectorJITGenerator", d);
      }
    };
  }), System.register("angular2/src/core/compiler/element_injector", ["angular2/src/facade/lang", "angular2/src/facade/async", "angular2/src/facade/collection", "angular2/di", "angular2/src/di/injector", "angular2/src/core/metadata/di", "angular2/src/core/compiler/view_manager", "angular2/src/core/compiler/view_container_ref", "angular2/src/core/compiler/element_ref", "angular2/src/core/compiler/template_ref", "angular2/src/core/metadata/directives", "angular2/src/core/compiler/directive_lifecycle_reflector", "angular2/src/change_detection/change_detection", "angular2/src/core/compiler/query_list", "angular2/src/reflection/reflection", "angular2/src/render/api", "angular2/src/core/pipes/pipe_binding"], function(e) {
    "use strict";
    function t(e) {
      var t = e.binding;
      if (!(t instanceof $))
        return [];
      var n = t;
      return u.map(n.eventEmitters, function(e) {
        var t,
            n,
            r = e.indexOf(":");
        return r > -1 ? (t = a.substring(e, 0, r).trim(), n = a.substring(e, r + 1).trim()) : t = n = e, new W(n, N.getter(t));
      });
    }
    function n(e) {
      var t = e.binding;
      if (!(t instanceof $))
        return [];
      var n = [],
          r = t;
      return l.forEach(r.hostActions, function(e, t) {
        n.push(new U(e, N.getter(t)));
      }), n;
    }
    var r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y,
        b,
        w,
        C,
        R,
        E,
        x,
        S,
        D,
        I,
        P,
        A,
        O,
        T,
        j,
        N,
        V,
        k,
        M,
        B,
        L,
        F,
        $,
        H,
        W,
        U,
        q,
        K,
        z,
        Q,
        G,
        Y,
        X;
    return {
      setters: [function(e) {
        r = e.isPresent, i = e.isBlank, o = e.BaseException, s = e.stringify, a = e.StringWrapper;
      }, function(e) {
        c = e.ObservableWrapper;
      }, function(e) {
        u = e.ListWrapper, l = e.MapWrapper;
      }, function(e) {
        f = e.Injector, h = e.ProtoInjector, d = e.Visibility, p = e.UNDEFINED, g = e.Key, m = e.Dependency, v = e.Binding, _ = e.ResolvedBinding, y = e.NoBindingError;
      }, function(e) {
        b = e.InjectorInlineStrategy, w = e.BindingWithVisibility;
      }, function(e) {
        C = e.AttributeMetadata, R = e.QueryMetadata;
      }, function(e) {
        E = e;
      }, function(e) {
        x = e.ViewContainerRef;
      }, function(e) {
        S = e.ElementRef;
      }, function(e) {
        D = e.TemplateRef;
      }, function(e) {
        I = e.DirectiveMetadata, P = e.ComponentMetadata, A = e.LifecycleEvent;
      }, function(e) {
        O = e.hasLifecycleHook;
      }, function(e) {
        T = e.ChangeDetectorRef;
      }, function(e) {
        j = e.QueryList;
      }, function(e) {
        N = e.reflector;
      }, function(e) {
        V = e.RenderDirectiveMetadata;
      }, function(e) {
        k = e.PipeBinding;
      }],
      execute: function() {
        B = function() {
          function e() {
            this.viewManagerId = g.get(E.AppViewManager).id, this.templateRefId = g.get(D).id, this.viewContainerId = g.get(x).id, this.changeDetectorRefId = g.get(T).id, this.elementRefId = g.get(S).id;
          }
          return $traceurRuntime.createClass(e, {}, {instance: function() {
              return i(M) && (M = new e), M;
            }});
        }(), e("StaticKeys", B), L = function() {
          function e(e) {
            this._head = null, this._tail = null, this._next = null, r(e) && e.addChild(this);
          }
          return $traceurRuntime.createClass(e, {
            addChild: function(e) {
              r(this._tail) ? (this._tail._next = e, this._tail = e) : this._tail = this._head = e, e._next = null, e._parent = this;
            },
            addChildAfter: function(e, t) {
              if (i(t)) {
                var n = this._head;
                this._head = e, e._next = n, i(this._tail) && (this._tail = e);
              } else {
                if (i(t._next))
                  return void this.addChild(e);
                e._next = t._next, t._next = e;
              }
              e._parent = this;
            },
            remove: function() {
              if (!i(this.parent)) {
                var e = this._next,
                    t = this._findPrev();
                i(t) ? this.parent._head = this._next : t._next = this._next, i(e) && (this._parent._tail = t), this._parent = null, this._next = null;
              }
            },
            _findPrev: function() {
              var e = this.parent._head;
              if (e == this)
                return null;
              for (; e._next !== this; )
                e = e._next;
              return e;
            },
            get parent() {
              return this._parent;
            },
            get children() {
              for (var e = [],
                  t = this._head; null != t; )
                e.push(t), t = t._next;
              return e;
            }
          }, {});
        }(), e("TreeNode", L), F = function(e) {
          function t(e, n, r, i, o, s, a) {
            $traceurRuntime.superConstructor(t).call(this, e, n, r, i, o), this.attributeName = s, this.queryDecorator = a, this._verify();
          }
          return $traceurRuntime.createClass(t, {_verify: function() {
              var e = 0;
              if (r(this.queryDecorator) && e++, r(this.attributeName) && e++, e > 1)
                throw new o("A directive injectable can contain only one of the following @Attribute or @Query.");
            }}, {
            createFrom: function(e) {
              return new t(e.key, e.optional, e.lowerBoundVisibility, e.upperBoundVisibility, e.properties, t._attributeName(e.properties), t._query(e.properties));
            },
            _attributeName: function(e) {
              var t = u.find(e, function(e) {
                return e instanceof C;
              });
              return r(t) ? t.attributeName : null;
            },
            _query: function(e) {
              return u.find(e, function(e) {
                return e instanceof R;
              });
            }
          }, e);
        }(m), e("DirectiveDependency", F), $ = function(e) {
          function t(e, n, r, i, o, s) {
            $traceurRuntime.superConstructor(t).call(this, e, n, r), this.resolvedBindings = i, this.resolvedViewBindings = o, this.metadata = s;
          }
          return $traceurRuntime.createClass(t, {
            get callOnDestroy() {
              return this.metadata.callOnDestroy;
            },
            get callOnChange() {
              return this.metadata.callOnChange;
            },
            get callOnAllChangesDone() {
              return this.metadata.callOnAllChangesDone;
            },
            get displayName() {
              return this.key.displayName;
            },
            get eventEmitters() {
              return r(this.metadata) && r(this.metadata.events) ? this.metadata.events : [];
            },
            get hostActions() {
              return r(this.metadata) && r(this.metadata.hostActions) ? this.metadata.hostActions : new Map;
            },
            get changeDetection() {
              return this.metadata.changeDetection;
            }
          }, {
            createFromBinding: function(e, n) {
              i(n) && (n = new I);
              var o = e.resolve(),
                  a = u.map(o.dependencies, F.createFrom),
                  c = r(n.bindings) ? f.resolve(n.bindings) : [],
                  h = n instanceof P && r(n.viewBindings) ? f.resolve(n.viewBindings) : [],
                  d = V.create({
                    id: s(o.key.token),
                    type: n instanceof P ? V.COMPONENT_TYPE : V.DIRECTIVE_TYPE,
                    selector: n.selector,
                    compileChildren: n.compileChildren,
                    events: n.events,
                    host: r(n.host) ? l.createFromStringMap(n.host) : null,
                    properties: n.properties,
                    readAttributes: t._readAttributes(a),
                    callOnDestroy: O(A.onDestroy, o.key.token, n),
                    callOnChange: O(A.onChange, o.key.token, n),
                    callOnCheck: O(A.onCheck, o.key.token, n),
                    callOnInit: O(A.onInit, o.key.token, n),
                    callOnAllChangesDone: O(A.onAllChangesDone, o.key.token, n),
                    changeDetection: n instanceof P ? n.changeDetection : null,
                    exportAs: n.exportAs
                  });
              return new t(o.key, o.factory, a, c, h, d);
            },
            _readAttributes: function(e) {
              var t = [];
              return u.forEach(e, function(e) {
                r(e.attributeName) && t.push(e.attributeName);
              }), t;
            },
            createFromType: function(e, n) {
              var r = new v(e, {toClass: e});
              return t.createFromBinding(r, n);
            }
          }, e);
        }(_), e("DirectiveBinding", $), H = function() {
          function e(e, t, n, r) {
            this.viewManager = e, this.view = t, this.elementRef = n, this.templateRef = r;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), e("PreBuiltObjects", H), W = function() {
          function e(e, t) {
            this.eventName = e, this.getter = t;
          }
          return $traceurRuntime.createClass(e, {subscribe: function(e, t, n) {
              var r = this,
                  i = this.getter(n);
              return c.subscribe(i, function(n) {
                return e.triggerEventHandlers(r.eventName, n, t);
              });
            }}, {});
        }(), e("EventEmitterAccessor", W), U = function() {
          function e(e, t) {
            this.methodName = e, this.getter = t;
          }
          return $traceurRuntime.createClass(e, {subscribe: function(e, t, n) {
              var r = this,
                  i = this.getter(n);
              return c.subscribe(i, function(n) {
                return e.invokeElementMethod(t, r.methodName, n);
              });
            }}, {});
        }(), e("HostActionAccessor", U), q = function() {
          function e(e, r, i, o, s, a) {
            this.parent = e, this.index = r, this.distanceToParent = o, this._firstBindingIsComponent = s, this.directiveVariableBindings = a;
            var c = i.length;
            this.protoInjector = new h(i), this.eventEmitterAccessors = u.createFixedSize(c), this.hostActionAccessors = u.createFixedSize(c);
            for (var l = 0; c > l; ++l)
              this.eventEmitterAccessors[l] = t(i[l]), this.hostActionAccessors[l] = n(i[l]);
          }
          return $traceurRuntime.createClass(e, {
            instantiate: function(e) {
              return new z(this, e);
            },
            directParent: function() {
              return this.distanceToParent < 2 ? this.parent : null;
            },
            get hasBindings() {
              return this.eventEmitterAccessors.length > 0;
            },
            getBindingAtIndex: function(e) {
              return this.protoInjector.getBindingAtIndex(e);
            }
          }, {
            create: function(t, n, r, i, o, s) {
              var a = [];
              return e._createDirectiveBindingWithVisibility(r, a, i), i && e._createViewBindingsWithVisibility(r, a), e._createBindingsWithVisibility(r, a, i), new e(t, n, a, o, i, s);
            },
            _createDirectiveBindingWithVisibility: function(t, n, r) {
              u.forEach(t, function(i) {
                n.push(e._createBindingWithVisibility(r, i, t, i));
              });
            },
            _createBindingsWithVisibility: function(t, n, r) {
              u.forEach(t, function(i) {
                u.forEach(i.resolvedBindings, function(o) {
                  n.push(e._createBindingWithVisibility(r, i, t, o));
                });
              });
            },
            _createBindingWithVisibility: function(e, t, n, r) {
              var i = e && n[0] === t;
              return new w(r, i ? d.PublicAndPrivate : d.Public);
            },
            _createViewBindingsWithVisibility: function(e, t) {
              var n = e[0];
              u.forEach(n.resolvedViewBindings, function(e) {
                return t.push(new w(e, d.Private));
              });
            }
          });
        }(), e("ProtoElementInjector", q), K = function() {
          function e(e, t, n) {
            this.element = e, this.componentElement = t, this.injector = n;
          }
          return $traceurRuntime.createClass(e, {}, {});
        }(), z = function(e) {
          function t(e, n) {
            var r;
            $traceurRuntime.superConstructor(t).call(this, n), this._proto = e, this._preBuiltObjects = null, this._injector = new f(this._proto.protoInjector, null, this, (r = this, function() {
              return r._debugContext();
            }));
            var i = this._injector.internalStrategy;
            this._strategy = i instanceof b ? new Q(i, this) : new G(i, this), this.hydrated = !1, this._buildQueries(), this._addParentQueries();
          }
          return $traceurRuntime.createClass(t, {
            dehydrate: function() {
              this.hydrated = !1, this._host = null, this._preBuiltObjects = null, this._strategy.callOnDestroy(), this._strategy.dehydrate();
            },
            onAllChangesDone: function() {
              r(this._query0) && this._query0.originator === this && this._query0.list.fireCallbacks(), r(this._query1) && this._query1.originator === this && this._query1.list.fireCallbacks(), r(this._query2) && this._query2.originator === this && this._query2.list.fireCallbacks();
            },
            hydrate: function(e, t, n) {
              this._host = t, this._preBuiltObjects = n, r(t) && this._addViewQueries(t), this._reattachInjectors(e), this._strategy.hydrate(), this._addDirectivesToQueries(), this._addVarBindingsToQueries(), this.hydrated = !0, this._updateViewQueries();
            },
            _updateViewQueries: function() {
              r(this._query0) && this._query0.isViewQuery && this._query0.update(), r(this._query1) && this._query1.isViewQuery && this._query1.update(), r(this._query2) && this._query2.isViewQuery && this._query2.update();
            },
            _debugContext: function() {
              var e = this._preBuiltObjects,
                  t = e.elementRef.boundElementIndex - e.view.elementOffset,
                  n = this._preBuiltObjects.view.getDebugContext(t, null);
              return r(n) ? new K(n.element, n.componentElement, n.injector) : null;
            },
            _reattachInjectors: function(e) {
              r(this._parent) ? r(e) ? (this._reattachInjector(this._injector, e, !1), this._reattachInjector(e, this._parent._injector, !1)) : this._reattachInjector(this._injector, this._parent._injector, !1) : r(this._host) ? r(e) ? (this._reattachInjector(this._injector, e, !1), this._reattachInjector(e, this._host._injector, !0)) : this._reattachInjector(this._injector, this._host._injector, !0) : r(e) && this._reattachInjector(this._injector, e, !0);
            },
            _reattachInjector: function(e, t, n) {
              e.internalStrategy.attach(t, n);
            },
            hasVariableBinding: function(e) {
              var t = this._proto.directiveVariableBindings;
              return r(t) && t.has(e);
            },
            getVariableBinding: function(e) {
              var t = this._proto.directiveVariableBindings.get(e);
              return r(t) ? this.getDirectiveAtIndex(t) : this.getElementRef();
            },
            get: function(e) {
              return this._injector.get(e);
            },
            hasDirective: function(e) {
              return r(this._injector.getOptional(e));
            },
            getEventEmitterAccessors: function() {
              return this._proto.eventEmitterAccessors;
            },
            getHostActionAccessors: function() {
              return this._proto.hostActionAccessors;
            },
            getDirectiveVariableBindings: function() {
              return this._proto.directiveVariableBindings;
            },
            getComponent: function() {
              return this._strategy.getComponent();
            },
            getInjector: function() {
              return this._injector;
            },
            getElementRef: function() {
              return this._preBuiltObjects.elementRef;
            },
            getViewContainerRef: function() {
              return new x(this._preBuiltObjects.viewManager, this.getElementRef());
            },
            directParent: function() {
              return this._proto.distanceToParent < 2 ? this.parent : null;
            },
            isComponentKey: function(e) {
              return this._strategy.isComponentKey(e);
            },
            getDependency: function(e, t, n) {
              var o = n.key;
              if (t instanceof $) {
                var s = n,
                    a = t,
                    c = B.instance();
                if (o.id === c.viewManagerId)
                  return this._preBuiltObjects.viewManager;
                if (r(s.attributeName))
                  return this._buildAttribute(s);
                if (r(s.queryDecorator))
                  return this._findQuery(s.queryDecorator).list;
                if (s.key.id === B.instance().changeDetectorRefId) {
                  if (a.metadata.type === V.COMPONENT_TYPE) {
                    var u = this._preBuiltObjects.view.getNestedView(this._preBuiltObjects.elementRef.boundElementIndex);
                    return u.changeDetector.ref;
                  }
                  return this._preBuiltObjects.view.changeDetector.ref;
                }
                if (s.key.id === B.instance().elementRefId)
                  return this.getElementRef();
                if (s.key.id === B.instance().viewContainerId)
                  return this.getViewContainerRef();
                if (s.key.id === B.instance().templateRefId) {
                  if (i(this._preBuiltObjects.templateRef)) {
                    if (s.optional)
                      return null;
                    throw new y(null, s.key);
                  }
                  return this._preBuiltObjects.templateRef;
                }
              } else if (t instanceof k && n.key.id === B.instance().changeDetectorRefId) {
                var u = this._preBuiltObjects.view.getNestedView(this._preBuiltObjects.elementRef.boundElementIndex);
                return u.changeDetector.ref;
              }
              return p;
            },
            _buildAttribute: function(e) {
              var t = this._proto.attributes;
              return r(t) && t.has(e.attributeName) ? t.get(e.attributeName) : null;
            },
            _buildQueriesForDeps: function(e) {
              for (var t = 0; t < e.length; t++) {
                var n = e[t];
                r(n.queryDecorator) && this._createQueryRef(n.queryDecorator);
              }
            },
            _addViewQueries: function(e) {
              this._addViewQuery(e._query0, e), this._addViewQuery(e._query1, e), this._addViewQuery(e._query2, e);
            },
            _addViewQuery: function(e, t) {
              if (!i(e) && e.isViewQuery && !this._hasQuery(e) && t._query0.originator == t) {
                if (!e.query.descendants && r(this.parent))
                  return;
                this._assignQueryRef(e);
              }
            },
            _addVarBindingsToQueries: function() {
              this._addVarBindingsToQuery(this._query0), this._addVarBindingsToQuery(this._query1), this._addVarBindingsToQuery(this._query2);
            },
            _addDirectivesToQueries: function() {
              this._addDirectivesToQuery(this._query0), this._addDirectivesToQuery(this._query1), this._addDirectivesToQuery(this._query2);
            },
            _addVarBindingsToQuery: function(e) {
              if (!i(e) && e.query.isVarBindingQuery)
                for (var t = e.query.varBindings,
                    n = 0; n < t.length; ++n)
                  this.hasVariableBinding(t[n]) && e.list.add(this.getVariableBinding(t[n]));
            },
            _addDirectivesToQuery: function(e) {
              if (!(i(e) || e.query.isVarBindingQuery || e.isViewQuery && e.originator == this)) {
                var t = [];
                this.addDirectivesMatchingQuery(e.query, t), t.forEach(function(t) {
                  return e.list.add(t);
                });
              }
            },
            _createQueryRef: function(e) {
              var t = new j;
              if (i(this._query0))
                this._query0 = new X(e, t, this);
              else if (i(this._query1))
                this._query1 = new X(e, t, this);
              else {
                if (!i(this._query2))
                  throw new Y;
                this._query2 = new X(e, t, this);
              }
            },
            addDirectivesMatchingQuery: function(e, t) {
              var n = this._preBuiltObjects.templateRef;
              e.selector === D && r(n) && t.push(n), this._strategy.addDirectivesMatchingQuery(e, t);
            },
            _buildQueries: function() {
              r(this._proto) && this._strategy.buildQueries();
            },
            _findQuery: function(e) {
              if (r(this._query0) && this._query0.query === e)
                return this._query0;
              if (r(this._query1) && this._query1.query === e)
                return this._query1;
              if (r(this._query2) && this._query2.query === e)
                return this._query2;
              throw new o("Cannot find query for directive " + e + ".");
            },
            _hasQuery: function(e) {
              return this._query0 == e || this._query1 == e || this._query2 == e;
            },
            link: function(e) {
              e.addChild(this), this._addParentQueries();
            },
            linkAfter: function(e, t) {
              e.addChildAfter(this, t), this._addParentQueries();
            },
            unlink: function() {
              var e = this.parent;
              this.remove(), this._removeParentQueries(e);
            },
            _addParentQueries: function() {
              i(this.parent) || (this._addParentQuery(this.parent._query0), this._addParentQuery(this.parent._query1), this._addParentQuery(this.parent._query2));
            },
            _addParentQuery: function(e) {
              r(e) && !this._hasQuery(e) && (this._addQueryToTree(e), this.hydrated && e.update());
            },
            _removeParentQueries: function(e) {
              this._removeParentQuery(e._query0), this._removeParentQuery(e._query1), this._removeParentQuery(e._query2);
            },
            _removeParentQuery: function(e) {
              r(e) && (this._pruneQueryFromTree(e), e.update());
            },
            _pruneQueryFromTree: function(e) {
              this._removeQueryRef(e);
              for (var t = this._head; r(t); )
                t._pruneQueryFromTree(e), t = t._next;
            },
            _addQueryToTree: function(e) {
              0 == e.query.descendants ? this == e.originator ? this._addQueryToTreeSelfAndRecurse(e) : this.parent == e.originator && this._assignQueryRef(e) : this._addQueryToTreeSelfAndRecurse(e);
            },
            _addQueryToTreeSelfAndRecurse: function(e) {
              this._assignQueryRef(e);
              for (var t = this._head; r(t); )
                t._addQueryToTree(e), t = t._next;
            },
            _assignQueryRef: function(e) {
              if (i(this._query0))
                return void(this._query0 = e);
              if (i(this._query1))
                return void(this._query1 = e);
              if (i(this._query2))
                return void(this._query2 = e);
              throw new Y;
            },
            _removeQueryRef: function(e) {
              this._query0 == e && (this._query0 = null), this._query1 == e && (this._query1 = null), this._query2 == e && (this._query2 = null);
            },
            getDirectiveAtIndex: function(e) {
              return this._injector.getAt(e);
            },
            hasInstances: function() {
              return this._proto.hasBindings && this.hydrated;
            },
            getHost: function() {
              return this._host;
            },
            getBoundElementIndex: function() {
              return this._proto.index;
            },
            getRootViewInjectors: function() {
              var e = this._preBuiltObjects.view;
              return e.getNestedView(e.elementOffset + this.getBoundElementIndex()).rootElementInjectors;
            }
          }, {}, e);
        }(L), e("ElementInjector", z), Q = function() {
          function e(e, t) {
            this.injectorStrategy = e, this._ei = t;
          }
          return $traceurRuntime.createClass(e, {
            hydrate: function() {
              var e = this.injectorStrategy,
                  t = e.protoStrategy;
              e.resetConstructionCounter(), t.binding0 instanceof $ && r(t.keyId0) && e.obj0 === p && (e.obj0 = e.instantiateBinding(t.binding0, t.visibility0)), t.binding1 instanceof $ && r(t.keyId1) && e.obj1 === p && (e.obj1 = e.instantiateBinding(t.binding1, t.visibility1)), t.binding2 instanceof $ && r(t.keyId2) && e.obj2 === p && (e.obj2 = e.instantiateBinding(t.binding2, t.visibility2)), t.binding3 instanceof $ && r(t.keyId3) && e.obj3 === p && (e.obj3 = e.instantiateBinding(t.binding3, t.visibility3)), t.binding4 instanceof $ && r(t.keyId4) && e.obj4 === p && (e.obj4 = e.instantiateBinding(t.binding4, t.visibility4)), t.binding5 instanceof $ && r(t.keyId5) && e.obj5 === p && (e.obj5 = e.instantiateBinding(t.binding5, t.visibility5)), t.binding6 instanceof $ && r(t.keyId6) && e.obj6 === p && (e.obj6 = e.instantiateBinding(t.binding6, t.visibility6)), t.binding7 instanceof $ && r(t.keyId7) && e.obj7 === p && (e.obj7 = e.instantiateBinding(t.binding7, t.visibility7)), t.binding8 instanceof $ && r(t.keyId8) && e.obj8 === p && (e.obj8 = e.instantiateBinding(t.binding8, t.visibility8)), t.binding9 instanceof $ && r(t.keyId9) && e.obj9 === p && (e.obj9 = e.instantiateBinding(t.binding9, t.visibility9));
            },
            dehydrate: function() {
              var e = this.injectorStrategy;
              e.obj0 = p, e.obj1 = p, e.obj2 = p, e.obj3 = p, e.obj4 = p, e.obj5 = p, e.obj6 = p, e.obj7 = p, e.obj8 = p, e.obj9 = p;
            },
            callOnDestroy: function() {
              var e = this.injectorStrategy,
                  t = e.protoStrategy;
              t.binding0 instanceof $ && t.binding0.callOnDestroy && e.obj0.onDestroy(), t.binding1 instanceof $ && t.binding1.callOnDestroy && e.obj1.onDestroy(), t.binding2 instanceof $ && t.binding2.callOnDestroy && e.obj2.onDestroy(), t.binding3 instanceof $ && t.binding3.callOnDestroy && e.obj3.onDestroy(), t.binding4 instanceof $ && t.binding4.callOnDestroy && e.obj4.onDestroy(), t.binding5 instanceof $ && t.binding5.callOnDestroy && e.obj5.onDestroy(), t.binding6 instanceof $ && t.binding6.callOnDestroy && e.obj6.onDestroy(), t.binding7 instanceof $ && t.binding7.callOnDestroy && e.obj7.onDestroy(), t.binding8 instanceof $ && t.binding8.callOnDestroy && e.obj8.onDestroy(), t.binding9 instanceof $ && t.binding9.callOnDestroy && e.obj9.onDestroy();
            },
            getComponent: function() {
              return this.injectorStrategy.obj0;
            },
            isComponentKey: function(e) {
              return this._ei._proto._firstBindingIsComponent && r(e) && e.id === this.injectorStrategy.protoStrategy.keyId0;
            },
            buildQueries: function() {
              var e = this.injectorStrategy.protoStrategy;
              e.binding0 instanceof $ && this._ei._buildQueriesForDeps(e.binding0.dependencies), e.binding1 instanceof $ && this._ei._buildQueriesForDeps(e.binding1.dependencies), e.binding2 instanceof $ && this._ei._buildQueriesForDeps(e.binding2.dependencies), e.binding3 instanceof $ && this._ei._buildQueriesForDeps(e.binding3.dependencies), e.binding4 instanceof $ && this._ei._buildQueriesForDeps(e.binding4.dependencies), e.binding5 instanceof $ && this._ei._buildQueriesForDeps(e.binding5.dependencies), e.binding6 instanceof $ && this._ei._buildQueriesForDeps(e.binding6.dependencies), e.binding7 instanceof $ && this._ei._buildQueriesForDeps(e.binding7.dependencies), e.binding8 instanceof $ && this._ei._buildQueriesForDeps(e.binding8.dependencies), e.binding9 instanceof $ && this._ei._buildQueriesForDeps(e.binding9.dependencies);
            },
            addDirectivesMatchingQuery: function(e, t) {
              var n = this.injectorStrategy,
                  i = n.protoStrategy;
              r(i.binding0) && i.binding0.key.token === e.selector && (n.obj0 === p && (n.obj0 = n.instantiateBinding(i.binding0, i.visibility0)), t.push(n.obj0)), r(i.binding1) && i.binding1.key.token === e.selector && (n.obj1 === p && (n.obj1 = n.instantiateBinding(i.binding1, i.visibility1)), t.push(n.obj1)), r(i.binding2) && i.binding2.key.token === e.selector && (n.obj2 === p && (n.obj2 = n.instantiateBinding(i.binding2, i.visibility2)), t.push(n.obj2)), r(i.binding3) && i.binding3.key.token === e.selector && (n.obj3 === p && (n.obj3 = n.instantiateBinding(i.binding3, i.visibility3)), t.push(n.obj3)), r(i.binding4) && i.binding4.key.token === e.selector && (n.obj4 === p && (n.obj4 = n.instantiateBinding(i.binding4, i.visibility4)), t.push(n.obj4)), r(i.binding5) && i.binding5.key.token === e.selector && (n.obj5 === p && (n.obj5 = n.instantiateBinding(i.binding5, i.visibility5)), t.push(n.obj5)), r(i.binding6) && i.binding6.key.token === e.selector && (n.obj6 === p && (n.obj6 = n.instantiateBinding(i.binding6, i.visibility6)), t.push(n.obj6)), r(i.binding7) && i.binding7.key.token === e.selector && (n.obj7 === p && (n.obj7 = n.instantiateBinding(i.binding7, i.visibility7)), t.push(n.obj7)), r(i.binding8) && i.binding8.key.token === e.selector && (n.obj8 === p && (n.obj8 = n.instantiateBinding(i.binding8, i.visibility8)), t.push(n.obj8)), r(i.binding9) && i.binding9.key.token === e.selector && (n.obj9 === p && (n.obj9 = n.instantiateBinding(i.binding9, i.visibility9)), t.push(n.obj9));
            },
            getComponentBinding: function() {
              var e = this.injectorStrategy.protoStrategy;
              return e.binding0;
            }
          }, {});
        }(), G = function() {
          function e(e, t) {
            this.injectorStrategy = e, this._ei = t;
          }
          return $traceurRuntime.createClass(e, {
            hydrate: function() {
              for (var e = this.injectorStrategy,
                  t = e.protoStrategy,
                  n = 0; n < t.keyIds.length; n++)
                t.bindings[n] instanceof $ && r(t.keyIds[n]) && e.objs[n] === p && (e.objs[n] = e.instantiateBinding(t.bindings[n], t.visibilities[n]));
            },
            dehydrate: function() {
              var e = this.injectorStrategy;
              u.fill(e.objs, p);
            },
            callOnDestroy: function() {
              for (var e = this.injectorStrategy,
                  t = e.protoStrategy,
                  n = 0; n < t.bindings.length; n++)
                t.bindings[n] instanceof $ && t.bindings[n].callOnDestroy && e.objs[n].onDestroy();
            },
            getComponent: function() {
              return this.injectorStrategy.objs[0];
            },
            isComponentKey: function(e) {
              var t = this.injectorStrategy.protoStrategy;
              return this._ei._proto._firstBindingIsComponent && r(e) && e.id === t.keyIds[0];
            },
            buildQueries: function() {
              for (var e = this.injectorStrategy,
                  t = e.protoStrategy,
                  n = 0; n < t.bindings.length; n++)
                t.bindings[n] instanceof $ && this._ei._buildQueriesForDeps(t.bindings[n].dependencies);
            },
            addDirectivesMatchingQuery: function(e, t) {
              for (var n = this.injectorStrategy,
                  r = n.protoStrategy,
                  i = 0; i < r.bindings.length; i++)
                r.bindings[i].key.token === e.selector && (n.objs[i] === p && (n.objs[i] = n.instantiateBinding(r.bindings[i], r.visibilities[i])), t.push(n.objs[i]));
            },
            getComponentBinding: function() {
              var e = this.injectorStrategy.protoStrategy;
              return e.bindings[0];
            }
          }, {});
        }(), Y = function(e) {
          function t() {
            $traceurRuntime.superConstructor(t).call(this), this.message = "Only 3 queries can be concurrently active in a template.";
          }
          return $traceurRuntime.createClass(t, {toString: function() {
              return this.message;
            }}, {}, e);
        }(o), e("QueryError", Y), X = function() {
          function e(e, t, n) {
            this.query = e, this.list = t, this.originator = n;
          }
          return $traceurRuntime.createClass(e, {
            get isViewQuery() {
              return this.query.isViewQuery;
            },
            update: function() {
              var e = [];
              if (this.query.isViewQuery)
                for (var t = this.originator.getRootViewInjectors(),
                    n = 0; n < t.length; n++)
                  this.visit(t[n], e);
              else
                this.visit(this.originator, e);
              this.list.reset(e);
            },
            visit: function(e, t) {
              if (!i(e) && e._hasQuery(this) && e.hydrated) {
                this.query.isVarBindingQuery ? this._aggregateVariableBindings(e, t) : this._aggregateDirective(e, t);
                for (var n = e._head; r(n); )
                  this.visit(n, t), n = n._next;
              }
            },
            _aggregateVariableBindings: function(e, t) {
              for (var n = this.query.varBindings,
                  r = 0; r < n.length; ++r)
                e.hasVariableBinding(n[r]) && t.push(e.getVariableBinding(n[r]));
            },
            _aggregateDirective: function(e, t) {
              e.addDirectivesMatchingQuery(this.query, t);
            }
          }, {});
        }(), e("QueryRef", X);
      }
    };
  }), System.register("angular2/src/render/dom/compiler/compiler", ["angular2/di", "angular2/src/facade/async", "angular2/src/facade/lang", "angular2/src/dom/dom_adapter", "angular2/src/render/api", "angular2/src/render/dom/compiler/compile_pipeline", "angular2/src/render/dom/compiler/view_loader", "angular2/src/render/dom/compiler/compile_step_factory", "angular2/src/render/dom/schema/element_schema_registry", "angular2/src/change_detection/change_detection", "angular2/src/render/dom/view/proto_view_merger", "angular2/src/render/dom/compiler/selector", "angular2/src/render/dom/dom_tokens", "angular2/src/render/dom/view/shared_styles_host", "angular2/src/render/dom/util", "angular2/src/render/dom/template_cloner"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y,
        b,
        w,
        C,
        R,
        E,
        x,
        S;
    return {
      setters: [function(e) {
        i = e.Injectable, w = e.Inject;
      }, function(e) {
        o = e.PromiseWrapper;
      }, function(e) {
        s = e.BaseException;
      }, function(e) {
        a = e.DOM;
      }, function(e) {
        c = e.ViewDefinition, u = e.ViewType, l = e.RenderCompiler, f = e.ViewEncapsulation;
      }, function(e) {
        h = e.CompilePipeline;
      }, function(e) {
        d = e.ViewLoader, p = e.TemplateAndStyles;
      }, function(e) {
        g = e.DefaultStepFactory;
      }, function(e) {
        m = e.ElementSchemaRegistry;
      }, function(e) {
        v = e.Parser;
      }, function(e) {
        _ = e;
      }, function(e) {
        y = e.CssSelector;
      }, function(e) {
        b = e.APP_ID;
      }, function(e) {
        C = e.SharedStylesHost;
      }, function(e) {
        R = e.prependAll;
      }, function(e) {
        E = e.TemplateCloner;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, r = this && this.__param || function(e, t) {
          return function(n, r) {
            t(n, r, e);
          };
        }, x = function(e) {
          function t(e, n, r, i, o) {
            $traceurRuntime.superConstructor(t).call(this), this._schemaRegistry = e, this._templateCloner = n, this._stepFactory = r, this._viewLoader = i, this._sharedStylesHost = o;
          }
          return $traceurRuntime.createClass(t, {
            compile: function(e) {
              var t = this,
                  n = this._viewLoader.load(e);
              return o.then(n, function(n) {
                return t._compileView(e, n, u.COMPONENT);
              }, function(t) {
                throw new s('Failed to load the template for "' + e.componentId + '" : ' + t);
              });
            },
            compileHost: function(e) {
              var t = new c({
                componentId: e.id,
                templateAbsUrl: null,
                template: null,
                styles: null,
                styleAbsUrls: null,
                directives: [e],
                encapsulation: f.NONE
              }),
                  n = y.parse(e.selector)[0],
                  r = n.getMatchingElementTemplate(),
                  i = new p(r, []);
              return this._compileView(t, i, u.HOST);
            },
            mergeProtoViewsRecursively: function(e) {
              return o.resolve(_.mergeProtoViewsRecursively(this._templateCloner, e));
            },
            _compileView: function(e, t, n) {
              e.encapsulation === f.EMULATED && 0 === t.styles.length && (e = this._normalizeViewEncapsulationIfThereAreNoStyles(e));
              var r = new h(this._stepFactory.createSteps(e)),
                  i = r.processStyles(t.styles),
                  s = r.processElements(this._createTemplateElm(t.template), n, e);
              return e.encapsulation === f.NATIVE ? R(a.content(s[0].element), i.map(function(e) {
                return a.createStyleElement(e);
              })) : this._sharedStylesHost.addStyles(i), o.resolve(s[0].inheritedProtoView.build(this._schemaRegistry, this._templateCloner));
            },
            _createTemplateElm: function(e) {
              for (var t = a.createTemplate(e),
                  n = a.querySelectorAll(a.templateAwareRoot(t), "script"),
                  r = 0; r < n.length; r++)
                a.remove(n[r]);
              return t;
            },
            _normalizeViewEncapsulationIfThereAreNoStyles: function(e) {
              return e.encapsulation === f.EMULATED ? new c({
                componentId: e.componentId,
                templateAbsUrl: e.templateAbsUrl,
                template: e.template,
                styleAbsUrls: e.styleAbsUrls,
                styles: e.styles,
                directives: e.directives,
                encapsulation: f.NONE
              }) : e;
            }
          }, {}, e);
        }(l), e("DomCompiler", x), S = function(e) {
          function t(e, n, r, i, o, s) {
            $traceurRuntime.superConstructor(t).call(this, e, n, new g(r, s), i, o);
          }
          return $traceurRuntime.createClass(t, {}, {}, e);
        }(x), e("DefaultDomCompiler", S), e("DefaultDomCompiler", S = t([i(), r(5, w(b)), n("design:paramtypes", [m, E, v, d, C, Object])], S));
      }
    };
  }), System.register("angular2/di", ["angular2/src/di/metadata", "angular2/src/di/decorators", "angular2/src/di/forward_ref", "angular2/src/di/injector", "angular2/src/di/binding", "angular2/src/di/key", "angular2/src/di/exceptions", "angular2/src/di/opaque_token"], function(e) {
    "use strict";
    var t = {undefined: !0};
    return {
      setters: [function(t) {
        e("InjectMetadata", t.InjectMetadata), e("OptionalMetadata", t.OptionalMetadata), e("InjectableMetadata", t.InjectableMetadata), e("SelfMetadata", t.SelfMetadata), e("HostMetadata", t.HostMetadata), e("SkipSelfMetadata", t.SkipSelfMetadata), e("DependencyMetadata", t.DependencyMetadata);
      }, function(n) {
        Object.keys(n).forEach(function(r) {
          t[r] || e(r, n[r]);
        });
      }, function(t) {
        e("forwardRef", t.forwardRef), e("resolveForwardRef", t.resolveForwardRef);
      }, function(t) {
        e("Injector", t.Injector), e("ProtoInjector", t.ProtoInjector), e("BindingWithVisibility", t.BindingWithVisibility), e("Visibility", t.Visibility), e("UNDEFINED", t.UNDEFINED);
      }, function(t) {
        e("Binding", t.Binding), e("BindingBuilder", t.BindingBuilder), e("ResolvedBinding", t.ResolvedBinding), e("Dependency", t.Dependency), e("bind", t.bind);
      }, function(t) {
        e("Key", t.Key), e("KeyRegistry", t.KeyRegistry), e("TypeLiteral", t.TypeLiteral);
      }, function(t) {
        e("NoBindingError", t.NoBindingError), e("AbstractBindingError", t.AbstractBindingError), e("CyclicDependencyError", t.CyclicDependencyError), e("InstantiationError", t.InstantiationError), e("InvalidBindingError", t.InvalidBindingError), e("NoAnnotationError", t.NoAnnotationError), e("OutOfBoundsError", t.OutOfBoundsError);
      }, function(t) {
        e("OpaqueToken", t.OpaqueToken);
      }],
      execute: function() {}
    };
  }), System.register("angular2/src/change_detection/jit_proto_change_detector", ["angular2/src/change_detection/change_detection_jit_generator", "angular2/src/change_detection/proto_change_detector"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i;
    return {
      setters: [function(e) {
        t = e.ChangeDetectorJITGenerator;
      }, function(e) {
        n = e.createPropertyRecords, r = e.createEventRecords;
      }],
      execute: function() {
        i = function() {
          function e(e) {
            this.definition = e, this._factory = this._createFactory(e);
          }
          return $traceurRuntime.createClass(e, {
            instantiate: function(e) {
              return this._factory(e);
            },
            _createFactory: function(e) {
              var i = n(e),
                  o = r(e);
              return new t(e.id, e.strategy, i, o, this.definition.directiveRecords, this.definition.generateCheckNoChanges).generate();
            }
          }, {isSupported: function() {
              return !0;
            }});
        }(), e("JitProtoChangeDetector", i);
      }
    };
  }), System.register("angular2/src/core/compiler/compiler", ["angular2/di", "angular2/src/facade/lang", "angular2/src/facade/async", "angular2/src/facade/collection", "angular2/src/core/compiler/directive_resolver", "angular2/src/core/compiler/view", "angular2/src/core/compiler/element_injector", "angular2/src/core/compiler/view_resolver", "angular2/src/core/compiler/pipe_resolver", "angular2/src/core/compiler/component_url_mapper", "angular2/src/core/compiler/proto_view_factory", "angular2/src/services/url_resolver", "angular2/src/services/app_root_url", "angular2/src/profile/profile", "angular2/src/core/pipes/pipe_binding", "angular2/pipes", "angular2/src/render/api"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y,
        b,
        w,
        C,
        R,
        E,
        x,
        S,
        D,
        I,
        P,
        A,
        O,
        T,
        j,
        N,
        V,
        k,
        M,
        B,
        L;
    return {
      setters: [function(e) {
        i = e.Binding, o = e.resolveForwardRef, s = e.Injectable, a = e.Inject;
      }, function(e) {
        c = e.Type, u = e.isBlank, l = e.isType, f = e.isPresent, h = e.BaseException, d = e.normalizeBlank, p = e.stringify, g = e.isArray, m = e.isPromise;
      }, function(e) {
        v = e.PromiseWrapper;
      }, function(e) {
        _ = e.ListWrapper, y = e.Map, b = e.MapWrapper;
      }, function(e) {
        w = e.DirectiveResolver;
      }, function(e) {
        C = e.AppProtoViewMergeMapping;
      }, function(e) {
        R = e.DirectiveBinding;
      }, function(e) {
        E = e.ViewResolver;
      }, function(e) {
        x = e.PipeResolver;
      }, function(e) {
        S = e.ComponentUrlMapper;
      }, function(e) {
        D = e.ProtoViewFactory;
      }, function(e) {
        I = e.UrlResolver;
      }, function(e) {
        P = e.AppRootUrl;
      }, function(e) {
        A = e.wtfStartTimeRange, O = e.wtfEndTimeRange;
      }, function(e) {
        T = e.PipeBinding;
      }, function(e) {
        j = e.DEFAULT_PIPES_TOKEN;
      }, function(e) {
        N = e.RenderDirectiveMetadata, V = e.ViewDefinition, k = e.RenderCompiler, M = e.ViewType;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, r = this && this.__param || function(e, t) {
          return function(n, r) {
            t(n, r, e);
          };
        }, B = $traceurRuntime.createClass(function() {
          this._cache = new y, this._hostCache = new y;
        }, {
          set: function(e, t) {
            this._cache.set(e, t);
          },
          get: function(e) {
            var t = this._cache.get(e);
            return d(t);
          },
          setHost: function(e, t) {
            this._hostCache.set(e, t);
          },
          getHost: function(e) {
            var t = this._hostCache.get(e);
            return d(t);
          },
          clear: function() {
            this._cache.clear(), this._hostCache.clear();
          }
        }, {}), e("CompilerCache", B), e("CompilerCache", B = t([s(), n("design:paramtypes", [])], B)), L = $traceurRuntime.createClass(function(e, t, n, r, i, o, s, a, c, u) {
          this._directiveResolver = e, this._pipeResolver = t, this._compilerCache = r, this._viewResolver = i, this._componentUrlMapper = o, this._urlResolver = s, this._render = a, this._protoViewFactory = c, this._compiling = new y, this._defaultPipes = n, this._appUrl = u.value;
        }, {
          _bindDirective: function(e) {
            if (e instanceof R)
              return e;
            if (e instanceof i) {
              var t = this._directiveResolver.resolve(e.token);
              return R.createFromBinding(e, t);
            }
            var n = this._directiveResolver.resolve(e);
            return R.createFromType(e, n);
          },
          _bindPipe: function(e) {
            var t = this._pipeResolver.resolve(e);
            return T.createFromType(e, t);
          },
          compileInHost: function(e) {
            var t,
                n = this,
                r = l(e) ? e : e.token,
                i = A("Compiler#compile()", p(r)),
                o = this._compilerCache.getHost(r);
            if (f(o))
              t = v.resolve(o);
            else {
              var s = this._bindDirective(e);
              L._assertTypeIsComponent(s);
              var a = s.metadata;
              t = this._render.compileHost(a).then(function(e) {
                var t = n._protoViewFactory.createAppProtoViews(s, e, [s], []);
                return n._compileNestedProtoViews(t, r, new y);
              }).then(function(e) {
                return n._compilerCache.setHost(r, e), e;
              });
            }
            return t.then(function(e) {
              return O(i), e.ref;
            });
          },
          _compile: function(e, t) {
            var n = this,
                r = e.key.token,
                i = this._compilerCache.get(r);
            if (f(i))
              return i;
            var o = this._compiling.get(r);
            if (f(o))
              return o;
            for (var s = this._viewResolver.resolve(r),
                a = this._flattenDirectives(s),
                c = 0; c < a.length; c++)
              if (!L._isValidDirective(a[c]))
                throw new h("Unexpected directive value '" + p(a[c]) + "' on the View of component '" + p(r) + "'");
            var u = this._removeDuplicatedDirectives(a.map(function(e) {
              return n._bindDirective(e);
            })),
                l = this._flattenPipes(s),
                d = l.map(function(e) {
                  return n._bindPipe(e);
                }),
                g = this._buildRenderTemplate(r, s, u);
            return o = this._render.compile(g).then(function(i) {
              var o = n._protoViewFactory.createAppProtoViews(e, i, u, d);
              return n._compileNestedProtoViews(o, r, t);
            }).then(function(e) {
              return n._compilerCache.set(r, e), b["delete"](n._compiling, r), e;
            }), this._compiling.set(r, o), o;
          },
          _removeDuplicatedDirectives: function(e) {
            var t = new y;
            return e.forEach(function(e) {
              t.set(e.key.id, e);
            }), b.values(t);
          },
          _compileNestedProtoViews: function(e, t, n) {
            var r = this,
                i = [];
            return n = b.clone(n), e[0].type === M.COMPONENT && n.set(t, e[0]), e.forEach(function(e) {
              r._collectComponentElementBinders(e).forEach(function(t) {
                var o = t.componentDirective,
                    s = o.key.token,
                    a = function(e) {
                      t.nestedProtoView = e;
                    };
                if (n.has(s)) {
                  if (e.isEmbeddedFragment)
                    throw new h("<ng-content> is used within the recursive path of " + p(s));
                  if (e.type === M.COMPONENT)
                    throw new h("Unconditional component cycle in " + p(s));
                  a(n.get(s));
                } else {
                  var c = r._compile(o, n);
                  m(c) ? i.push(c.then(a)) : a(c);
                }
              });
            }), v.all(i).then(function(t) {
              return v.all(e.map(function(e) {
                return r._mergeProtoView(e);
              }));
            }).then(function(t) {
              return e[0];
            });
          },
          _mergeProtoView: function(e) {
            return e.type !== M.HOST && e.type !== M.EMBEDDED ? null : this._render.mergeProtoViewsRecursively(this._collectMergeRenderProtoViews(e)).then(function(t) {
              e.mergeMapping = new C(t);
            });
          },
          _collectMergeRenderProtoViews: function(e) {
            for (var t = [e.render],
                n = 0; n < e.elementBinders.length; n++) {
              var r = e.elementBinders[n];
              f(r.nestedProtoView) && t.push(r.hasStaticComponent() || r.hasEmbeddedProtoView() && r.nestedProtoView.isEmbeddedFragment ? this._collectMergeRenderProtoViews(r.nestedProtoView) : null);
            }
            return t;
          },
          _collectComponentElementBinders: function(e) {
            var t = [];
            return e.elementBinders.forEach(function(e) {
              f(e.componentDirective) && t.push(e);
            }), t;
          },
          _buildRenderTemplate: function(e, t, n) {
            var r = this,
                i = this._urlResolver.resolve(this._appUrl, this._componentUrlMapper.getUrl(e)),
                o = null,
                s = null;
            return f(t.templateUrl) ? o = this._urlResolver.resolve(i, t.templateUrl) : f(t.template) && (o = i), f(t.styleUrls) && (s = _.map(t.styleUrls, function(e) {
              return r._urlResolver.resolve(i, e);
            })), new V({
              componentId: p(e),
              templateAbsUrl: o,
              template: t.template,
              styleAbsUrls: s,
              styles: t.styles,
              directives: _.map(n, function(e) {
                return e.metadata;
              }),
              encapsulation: t.encapsulation
            });
          },
          _flattenPipes: function(e) {
            if (u(e.pipes))
              return this._defaultPipes;
            var t = _.clone(this._defaultPipes);
            return this._flattenList(e.pipes, t), t;
          },
          _flattenDirectives: function(e) {
            if (u(e.directives))
              return [];
            var t = [];
            return this._flattenList(e.directives, t), t;
          },
          _flattenList: function(e, t) {
            for (var n = 0; n < e.length; n++) {
              var r = o(e[n]);
              g(r) ? this._flattenList(r, t) : t.push(r);
            }
          }
        }, {
          _isValidDirective: function(e) {
            return f(e) && (e instanceof c || e instanceof i);
          },
          _assertTypeIsComponent: function(e) {
            if (e.metadata.type !== N.COMPONENT_TYPE)
              throw new h("Could not load '" + p(e.key.token) + "' because it is not a component.");
          }
        }), e("Compiler", L), e("Compiler", L = t([s(), r(2, a(j)), n("design:paramtypes", [w, x, Array, B, E, S, I, k, D, P])], L));
      }
    };
  }), System.register("angular2/src/render/render", ["angular2/src/render/dom/compiler/view_loader", "angular2/src/render/dom/view/shared_styles_host", "angular2/src/render/dom/compiler/compiler", "angular2/src/render/dom/dom_renderer", "angular2/src/render/dom/dom_tokens", "angular2/src/render/dom/template_cloner", "angular2/src/render/api"], function(e) {
    "use strict";
    var t = {},
        t = {},
        t = {},
        t = {},
        t = {},
        t = {},
        t = {};
    return {
      setters: [function(n) {
        Object.keys(n).forEach(function(r) {
          t[r] || e(r, n[r]);
        });
      }, function(n) {
        Object.keys(n).forEach(function(r) {
          t[r] || e(r, n[r]);
        });
      }, function(n) {
        Object.keys(n).forEach(function(r) {
          t[r] || e(r, n[r]);
        });
      }, function(n) {
        Object.keys(n).forEach(function(r) {
          t[r] || e(r, n[r]);
        });
      }, function(n) {
        Object.keys(n).forEach(function(r) {
          t[r] || e(r, n[r]);
        });
      }, function(n) {
        Object.keys(n).forEach(function(r) {
          t[r] || e(r, n[r]);
        });
      }, function(n) {
        Object.keys(n).forEach(function(r) {
          t[r] || e(r, n[r]);
        });
      }],
      execute: function() {}
    };
  }), System.register("angular2/src/core/metadata/di", ["angular2/src/facade/lang", "angular2/src/di/metadata", "angular2/di"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f;
    return {
      setters: [function(e) {
        r = e.CONST, i = e.stringify, o = e.StringWrapper, s = e.isString;
      }, function(e) {
        a = e.DependencyMetadata;
      }, function(e) {
        c = e.resolveForwardRef;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, u = function(e) {
          function t(e) {
            $traceurRuntime.superConstructor(t).call(this), this.attributeName = e;
          }
          return $traceurRuntime.createClass(t, {
            get token() {
              return this;
            },
            toString: function() {
              return "@Attribute(" + i(this.attributeName) + ")";
            }
          }, {}, e);
        }(a), e("AttributeMetadata", u), e("AttributeMetadata", u = t([r(), n("design:paramtypes", [String])], u)), l = function(e) {
          function t(e) {
            var n,
                r = void 0 !== arguments[1] ? arguments[1] : {},
                i = void 0 === (n = r.descendants) ? !1 : n;
            $traceurRuntime.superConstructor(t).call(this), this._selector = e, this.descendants = i;
          }
          return $traceurRuntime.createClass(t, {
            get isViewQuery() {
              return !1;
            },
            get selector() {
              return c(this._selector);
            },
            get isVarBindingQuery() {
              return s(this.selector);
            },
            get varBindings() {
              return o.split(this.selector, new RegExp(","));
            },
            toString: function() {
              return "@Query(" + i(this.selector) + ")";
            }
          }, {}, e);
        }(a), e("QueryMetadata", l), e("QueryMetadata", l = t([r(), n("design:paramtypes", [Object, Object])], l)), f = function(e) {
          function t(e) {
            var n,
                r = void 0 !== arguments[1] ? arguments[1] : {},
                i = void 0 === (n = r.descendants) ? !1 : n;
            $traceurRuntime.superConstructor(t).call(this, e, {descendants: i});
          }
          return $traceurRuntime.createClass(t, {
            get isViewQuery() {
              return !0;
            },
            toString: function() {
              return "@ViewQuery(" + i(this.selector) + ")";
            }
          }, {}, e);
        }(l), e("ViewQueryMetadata", f), e("ViewQueryMetadata", f = t([r(), n("design:paramtypes", [Object, Object])], f));
      }
    };
  }), System.register("angular2/src/change_detection/change_detection", ["angular2/src/change_detection/jit_proto_change_detector", "angular2/src/change_detection/pregen_proto_change_detector", "angular2/src/change_detection/proto_change_detector", "angular2/src/change_detection/differs/iterable_differs", "angular2/src/change_detection/differs/default_iterable_differ", "angular2/src/change_detection/differs/keyvalue_differs", "angular2/src/change_detection/differs/default_keyvalue_differ", "angular2/src/change_detection/interfaces", "angular2/di", "angular2/src/facade/collection", "angular2/src/facade/lang", "angular2/src/change_detection/parser/ast", "angular2/src/change_detection/parser/lexer", "angular2/src/change_detection/parser/parser", "angular2/src/change_detection/parser/locals", "angular2/src/change_detection/exceptions", "angular2/src/change_detection/constants", "angular2/src/change_detection/binding_record", "angular2/src/change_detection/directive_record", "angular2/src/change_detection/dynamic_change_detector", "angular2/src/change_detection/change_detector_ref", "angular2/src/change_detection/change_detection_util"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y,
        b,
        w,
        C,
        R,
        E,
        x,
        S,
        D,
        I;
    return {
      setters: [function(e) {
        i = e.JitProtoChangeDetector;
      }, function(e) {
        o = e.PregenProtoChangeDetector;
      }, function(t) {
        s = t.DynamicProtoChangeDetector, e("DynamicProtoChangeDetector", t.DynamicProtoChangeDetector);
      }, function(t) {
        a = t.IterableDiffers, e("IterableDiffers", t.IterableDiffers);
      }, function(e) {
        c = e.DefaultIterableDifferFactory;
      }, function(t) {
        u = t.KeyValueDiffers, e("KeyValueDiffers", t.KeyValueDiffers);
      }, function(e) {
        l = e.DefaultKeyValueDifferFactory;
      }, function(t) {
        f = t.ChangeDetection, e("ChangeDetection", t.ChangeDetection), e("ChangeDetectorDefinition", t.ChangeDetectorDefinition), e("DebugContext", t.DebugContext);
      }, function(e) {
        h = e.Inject, d = e.Injectable, p = e.OpaqueToken, g = e.Optional;
      }, function(e) {
        m = e.StringMapWrapper;
      }, function(e) {
        v = e.CONST, _ = e.CONST_EXPR, y = e.isPresent;
      }, function(t) {
        e("ASTWithSource", t.ASTWithSource), e("AST", t.AST), e("AstTransformer", t.AstTransformer), e("PropertyRead", t.PropertyRead), e("LiteralArray", t.LiteralArray), e("ImplicitReceiver", t.ImplicitReceiver);
      }, function(t) {
        e("Lexer", t.Lexer);
      }, function(t) {
        e("Parser", t.Parser);
      }, function(t) {
        e("Locals", t.Locals);
      }, function(t) {
        e("DehydratedException", t.DehydratedException), e("ExpressionChangedAfterItHasBeenCheckedException", t.ExpressionChangedAfterItHasBeenCheckedException), e("ChangeDetectionError", t.ChangeDetectionError);
      }, function(t) {
        e("CHECK_ONCE", t.CHECK_ONCE), e("CHECK_ALWAYS", t.CHECK_ALWAYS), e("DETACHED", t.DETACHED), e("CHECKED", t.CHECKED), e("ON_PUSH", t.ON_PUSH), e("DEFAULT", t.DEFAULT);
      }, function(t) {
        e("BindingRecord", t.BindingRecord);
      }, function(t) {
        e("DirectiveIndex", t.DirectiveIndex), e("DirectiveRecord", t.DirectiveRecord);
      }, function(t) {
        e("DynamicChangeDetector", t.DynamicChangeDetector);
      }, function(t) {
        e("ChangeDetectorRef", t.ChangeDetectorRef);
      }, function(t) {
        e("WrappedValue", t.WrappedValue);
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, r = this && this.__param || function(e, t) {
          return function(n, r) {
            t(n, r, e);
          };
        }, b = _([_(new l)]), e("keyValDiff", b), w = _([_(new c)]), e("iterableDiff", w), C = _(new a(w)), e("defaultIterableDiffers", C), R = _(new u(b)), e("defaultKeyValueDiffers", R), E = {}, e("preGeneratedProtoDetectors", E), x = _(new p("ProtoChangeDetectors")), e("PROTO_CHANGE_DETECTOR", x), S = function(e) {
          function t(e) {
            $traceurRuntime.superConstructor(t).call(this), this._dynamicChangeDetection = new D, this._protoChangeDetectorFactories = y(e) ? e : E;
          }
          return $traceurRuntime.createClass(t, {createProtoChangeDetector: function(e) {
              var t = e.id;
              return m.contains(this._protoChangeDetectorFactories, t) ? m.get(this._protoChangeDetectorFactories, t)(e) : this._dynamicChangeDetection.createProtoChangeDetector(e);
            }}, {isSupported: function() {
              return o.isSupported();
            }}, e);
        }(f), e("PreGeneratedChangeDetection", S), e("PreGeneratedChangeDetection", S = t([d(), r(0, h(x)), r(0, g()), n("design:paramtypes", [Object])], S)), D = function(e) {
          function t() {
            $traceurRuntime.superConstructor(t).apply(this, arguments);
          }
          return $traceurRuntime.createClass(t, {createProtoChangeDetector: function(e) {
              return new s(e);
            }}, {}, e);
        }(f), e("DynamicChangeDetection", D), e("DynamicChangeDetection", D = t([d(), n("design:paramtypes", [])], D)), I = function(e) {
          function t() {
            $traceurRuntime.superConstructor(t).apply(this, arguments);
          }
          return $traceurRuntime.createClass(t, {createProtoChangeDetector: function(e) {
              return new i(e);
            }}, {isSupported: function() {
              return i.isSupported();
            }}, e);
        }(f), e("JitChangeDetection", I), e("JitChangeDetection", I = t([d(), v(), n("design:paramtypes", [])], I));
      }
    };
  }), System.register("angular2/src/core/application_common", ["angular2/di", "angular2/src/facade/lang", "angular2/src/dom/browser_adapter", "angular2/src/dom/dom_adapter", "angular2/src/core/compiler/compiler", "angular2/src/reflection/reflection", "angular2/src/change_detection/change_detection", "angular2/pipes", "angular2/src/core/exception_handler", "angular2/src/render/dom/compiler/view_loader", "angular2/src/render/dom/compiler/style_url_resolver", "angular2/src/render/dom/compiler/style_inliner", "angular2/src/core/compiler/view_resolver", "angular2/src/core/compiler/directive_resolver", "angular2/src/core/compiler/pipe_resolver", "angular2/src/facade/collection", "angular2/src/facade/async", "angular2/src/core/zone/ng_zone", "angular2/src/core/life_cycle/life_cycle", "angular2/src/render/xhr", "angular2/src/render/xhr_impl", "angular2/src/render/dom/events/event_manager", "angular2/src/render/dom/events/key_events", "angular2/src/render/dom/events/hammer_gestures", "angular2/src/core/compiler/component_url_mapper", "angular2/src/services/url_resolver", "angular2/src/services/app_root_url", "angular2/src/services/anchor_based_app_root_url", "angular2/src/core/compiler/dynamic_component_loader", "angular2/src/core/testability/testability", "angular2/src/core/compiler/view_pool", "angular2/src/core/compiler/view_manager", "angular2/src/core/compiler/view_manager_utils", "angular2/src/core/compiler/view_listener", "angular2/src/core/compiler/proto_view_factory", "angular2/src/render/api", "angular2/src/render/render", "angular2/src/render/dom/schema/element_schema_registry", "angular2/src/render/dom/schema/dom_element_schema_registry", "angular2/src/render/dom/view/shared_styles_host", "angular2/src/core/compiler/view_ref", "angular2/src/core/application_tokens", "angular2/src/profile/wtf_init", "angular2/src/core/platform_bindings"], function(e) {
    "use strict";
    function t(e) {
      var t = y;
      return w.isSupported() ? t = w : b.isSupported() && (t = b), [s(se).toValue(f.defaultDoc()), s(ae).toValue(!1), s(_e).toValue(e), s(ve).toFactory(function(t, n, r, i) {
        return t.loadAsRoot(e, null, n).then(function(e) {
          return i.registerApplication(e.location.nativeElement, r), e;
        });
      }, [Q, o, Y, G]), s(e).toFactory(function(e) {
        return e.then(function(e) {
          return e.instance;
        });
      }, [ve]), s(M).toFactory(function(e) {
        return new M(null, u());
      }, [D]), s(F).toFactory(function(e) {
        var t = [new W, new H, new $];
        return new F(t, e);
      }, [k]), oe, s(re).toAlias(oe), ue, fe, s(le).toValue(20), ce, s(he).toValue(new de), s(ie).toAlias(ce), ge, s(pe).toAlias(ge), ne, X, s(Z).toValue(1e4), J, ee, te, h, d, O, S, s(C).toValue(R), s(E).toValue(x), s(_).toClass(t), I, T, j, m, v, be, s(B).toValue(new L), U, q, P, A, Q, Y, z, s(K).toAlias(z)];
    }
    function n() {
      return new k({enableLongStackTrace: u()});
    }
    function r(e) {
      var t = void 0 !== arguments[1] ? arguments[1] : null;
      l.makeCurrent(), ye();
      var r = V.completer(),
          o = n();
      return o.run(function() {
        var n;
        try {
          var s = i(e, t, o);
          n = s.get(D), o.overrideOnErrorHandler(function(e, t) {
            return n.call(e, t);
          });
          var a = s.get(ve),
              u = function(t) {
                var n = me(t.hostView).changeDetector,
                    i = s.get(M);
                i.registerWith(o, n), i.tick(), r.resolve(new Re(t, e, s));
              },
              l = V.then(a, u);
          V.then(l, function(e) {}), V.then(l, null, function(e, t) {
            r.reject(e, t);
          });
        } catch (h) {
          c(n) ? n.call(h, h.stack) : f.logError(h), r.reject(h, h.stack);
        }
      }), r.promise;
    }
    function i(e, n, r) {
      a(we) && (we = o.resolveAndCreate(Ce));
      var i = c(n) ? N.concat(t(e), n) : t(e);
      return i.push(s(k).toValue(r)), we.resolveAndCreateChild(i);
    }
    var o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m,
        v,
        _,
        y,
        b,
        w,
        C,
        R,
        E,
        x,
        S,
        D,
        I,
        P,
        A,
        O,
        T,
        j,
        N,
        V,
        k,
        M,
        B,
        L,
        F,
        $,
        H,
        W,
        U,
        q,
        K,
        z,
        Q,
        G,
        Y,
        X,
        Z,
        J,
        ee,
        te,
        ne,
        re,
        ie,
        oe,
        se,
        ae,
        ce,
        ue,
        le,
        fe,
        he,
        de,
        pe,
        ge,
        me,
        ve,
        _e,
        ye,
        be,
        we,
        Ce,
        Re;
    return e("createNgZone", n), e("commonBootstrap", r), {
      setters: [function(e) {
        o = e.Injector, s = e.bind;
      }, function(e) {
        a = e.isBlank, c = e.isPresent, u = e.assertionsEnabled;
      }, function(e) {
        l = e.BrowserDomAdapter;
      }, function(e) {
        f = e.DOM;
      }, function(e) {
        h = e.Compiler, d = e.CompilerCache;
      }, function(e) {
        p = e.Reflector, g = e.reflector;
      }, function(e) {
        m = e.Parser, v = e.Lexer, _ = e.ChangeDetection, y = e.DynamicChangeDetection, b = e.JitChangeDetection, w = e.PreGeneratedChangeDetection, C = e.IterableDiffers, R = e.defaultIterableDiffers, E = e.KeyValueDiffers, x = e.defaultKeyValueDiffers;
      }, function(e) {
        S = e.DEFAULT_PIPES;
      }, function(e) {
        D = e.ExceptionHandler;
      }, function(e) {
        I = e.ViewLoader;
      }, function(e) {
        P = e.StyleUrlResolver;
      }, function(e) {
        A = e.StyleInliner;
      }, function(e) {
        O = e.ViewResolver;
      }, function(e) {
        T = e.DirectiveResolver;
      }, function(e) {
        j = e.PipeResolver;
      }, function(e) {
        N = e.ListWrapper;
      }, function(e) {
        V = e.PromiseWrapper;
      }, function(e) {
        k = e.NgZone;
      }, function(e) {
        M = e.LifeCycle;
      }, function(e) {
        B = e.XHR;
      }, function(e) {
        L = e.XHRImpl;
      }, function(e) {
        F = e.EventManager, $ = e.DomEventsPlugin;
      }, function(e) {
        H = e.KeyEventsPlugin;
      }, function(e) {
        W = e.HammerGesturesPlugin;
      }, function(e) {
        U = e.ComponentUrlMapper;
      }, function(e) {
        q = e.UrlResolver;
      }, function(e) {
        K = e.AppRootUrl;
      }, function(e) {
        z = e.AnchorBasedAppRootUrl;
      }, function(e) {
        Q = e.DynamicComponentLoader;
      }, function(e) {
        G = e.TestabilityRegistry, Y = e.Testability;
      }, function(e) {
        X = e.AppViewPool, Z = e.APP_VIEW_POOL_CAPACITY;
      }, function(e) {
        J = e.AppViewManager;
      }, function(e) {
        ee = e.AppViewManagerUtils;
      }, function(e) {
        te = e.AppViewListener;
      }, function(e) {
        ne = e.ProtoViewFactory;
      }, function(e) {
        re = e.Renderer, ie = e.RenderCompiler;
      }, function(e) {
        oe = e.DomRenderer, se = e.DOCUMENT, ae = e.DOM_REFLECT_PROPERTIES_AS_ATTRIBUTES, ce = e.DefaultDomCompiler, ue = e.APP_ID_RANDOM_BINDING, le = e.MAX_IN_MEMORY_ELEMENTS_PER_TEMPLATE, fe = e.TemplateCloner;
      }, function(e) {
        he = e.ElementSchemaRegistry;
      }, function(e) {
        de = e.DomElementSchemaRegistry;
      }, function(e) {
        pe = e.SharedStylesHost, ge = e.DomSharedStylesHost;
      }, function(e) {
        me = e.internalView;
      }, function(e) {
        ve = e.APP_COMPONENT_REF_PROMISE, _e = e.APP_COMPONENT;
      }, function(e) {
        ye = e.wtfInit;
      }, function(e) {
        be = e.EXCEPTION_BINDING;
      }],
      execute: function() {
        Ce = [s(p).toValue(g), G], Re = function() {
          function e(e, t, n) {
            this._hostComponent = e, this._injector = n, this._hostComponentType = t;
          }
          return $traceurRuntime.createClass(e, {
            get hostComponentType() {
              return this._hostComponentType;
            },
            get hostComponent() {
              return this._hostComponent.instance;
            },
            dispose: function() {
              this._hostComponent.dispose();
            },
            get injector() {
              return this._injector;
            }
          }, {});
        }(), e("ApplicationRef", Re);
      }
    };
  }), System.register("angular2/change_detection", ["angular2/src/change_detection/change_detection"], function(e) {
    "use strict";
    return {
      setters: [function(t) {
        e("CHECK_ONCE", t.CHECK_ONCE), e("CHECK_ALWAYS", t.CHECK_ALWAYS), e("DETACHED", t.DETACHED), e("CHECKED", t.CHECKED), e("ON_PUSH", t.ON_PUSH), e("DEFAULT", t.DEFAULT), e("ExpressionChangedAfterItHasBeenCheckedException", t.ExpressionChangedAfterItHasBeenCheckedException), e("ChangeDetectionError", t.ChangeDetectionError), e("Locals", t.Locals), e("ChangeDetectorRef", t.ChangeDetectorRef), e("WrappedValue", t.WrappedValue), e("IterableDiffers", t.IterableDiffers), e("KeyValueDiffers", t.KeyValueDiffers);
      }],
      execute: function() {}
    };
  }), System.register("angular2/core", ["angular2/src/core/application_tokens", "angular2/src/core/application_common", "angular2/src/facade/lang", "angular2/src/services/app_root_url", "angular2/src/services/url_resolver", "angular2/src/core/compiler/component_url_mapper", "angular2/src/core/compiler/directive_resolver", "angular2/src/core/compiler/compiler", "angular2/src/core/compiler/view_manager", "angular2/src/core/compiler/query_list", "angular2/src/core/compiler/dynamic_component_loader", "angular2/src/core/life_cycle/life_cycle", "angular2/src/core/compiler/element_ref", "angular2/src/core/compiler/template_ref", "angular2/src/core/compiler/view_ref", "angular2/src/core/compiler/view_container_ref", "angular2/src/core/zone/ng_zone", "angular2/src/facade/async"], function(e) {
    "use strict";
    return {
      setters: [function(t) {
        e("APP_COMPONENT", t.APP_COMPONENT);
      }, function(t) {
        e("ApplicationRef", t.ApplicationRef), e("bootstrap", t.commonBootstrap);
      }, function(t) {
        e("Type", t.Type);
      }, function(t) {
        e("AppRootUrl", t.AppRootUrl);
      }, function(t) {
        e("UrlResolver", t.UrlResolver);
      }, function(t) {
        e("ComponentUrlMapper", t.ComponentUrlMapper);
      }, function(t) {
        e("DirectiveResolver", t.DirectiveResolver);
      }, function(t) {
        e("Compiler", t.Compiler);
      }, function(t) {
        e("AppViewManager", t.AppViewManager);
      }, function(t) {
        e("QueryList", t.QueryList);
      }, function(t) {
        e("DynamicComponentLoader", t.DynamicComponentLoader), e("ComponentRef", t.ComponentRef);
      }, function(t) {
        e("LifeCycle", t.LifeCycle);
      }, function(t) {
        e("ElementRef", t.ElementRef);
      }, function(t) {
        e("TemplateRef", t.TemplateRef);
      }, function(t) {
        e("ViewRef", t.ViewRef), e("ProtoViewRef", t.ProtoViewRef);
      }, function(t) {
        e("ViewContainerRef", t.ViewContainerRef);
      }, function(t) {
        e("NgZone", t.NgZone);
      }, function(t) {
        e("Observable", t.Observable), e("EventEmitter", t.EventEmitter);
      }],
      execute: function() {}
    };
  }), System.register("angular2/src/core/metadata/directives", ["angular2/src/facade/lang", "angular2/src/di/metadata", "angular2/change_detection"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u;
    return {
      setters: [function(e) {
        r = e.CONST;
      }, function(e) {
        i = e.InjectableMetadata;
      }, function(e) {
        o = e.DEFAULT;
      }],
      execute: function() {
        t = this && this.__decorate || function(e, t, n, r) {
          if ("object" == typeof Reflect && "function" == typeof Reflect.decorate)
            return Reflect.decorate(e, t, n, r);
          switch (arguments.length) {
            case 2:
              return e.reduceRight(function(e, t) {
                return t && t(e) || e;
              }, t);
            case 3:
              return e.reduceRight(function(e, r) {
                return void(r && r(t, n));
              }, void 0);
            case 4:
              return e.reduceRight(function(e, r) {
                return r && r(t, n, e) || e;
              }, r);
          }
        }, n = this && this.__metadata || function(e, t) {
          return "object" == typeof Reflect && "function" == typeof Reflect.metadata ? Reflect.metadata(e, t) : void 0;
        }, s = function(e) {
          function t() {
            var e,
                n = void 0 !== arguments[0] ? arguments[0] : {},
                r = n.selector,
                i = n.properties,
                o = n.events,
                s = n.host,
                a = n.lifecycle,
                c = n.bindings,
                u = n.exportAs,
                l = void 0 === (e = n.compileChildren) ? !0 : e;
            $traceurRuntime.superConstructor(t).call(this), this.selector = r, this.properties = i, this.events = o, this.host = s, this.exportAs = u, this.lifecycle = a, this.compileChildren = l, this.bindings = c;
          }
          return $traceurRuntime.createClass(t, {}, {}, e);
        }(i), e("DirectiveMetadata", s), e("DirectiveMetadata", s = t([r(), n("design:paramtypes", [Object])], s)), a = function(e) {
          function t() {
            var e,
                n,
                r = void 0 !== arguments[0] ? arguments[0] : {},
                i = r.selector,
                s = r.properties,
                a = r.events,
                c = r.host,
                u = r.exportAs,
                l = r.lifecycle,
                f = r.bindings,
                h = r.viewBindings,
                d = void 0 === (e = r.changeDetection) ? o : e,
                p = void 0 === (n = r.compileChildren) ? !0 : n;
            $traceurRuntime.superConstructor(t).call(this, {
              selector: i,
              properties: s,
              events: a,
              host: c,
              exportAs: u,
              bindings: f,
              lifecycle: l,
              compileChildren: p
            }), this.changeDetection = d, this.viewBindings = h;
          }
          return $traceurRuntime.createClass(t, {}, {}, e);
        }(s), e("ComponentMetadata", a), e("ComponentMetadata", a = t([r(), n("design:paramtypes", [Object])], a)), e("LifecycleEvent", c), function(e) {
          e[e.onDestroy = 0] = "onDestroy", e[e.onChange = 1] = "onChange", e[e.onCheck = 2] = "onCheck", e[e.onInit = 3] = "onInit", e[e.onAllChangesDone = 4] = "onAllChangesDone";
        }(c || e("LifecycleEvent", c = {})), u = function(e) {
          function t(e) {
            var n = e.name;
            $traceurRuntime.superConstructor(t).call(this), this.name = n;
          }
          return $traceurRuntime.createClass(t, {}, {}, e);
        }(i), e("PipeMetadata", u), e("PipeMetadata", u = t([r(), n("design:paramtypes", [Object])], u));
      }
    };
  }), System.register("angular2/src/core/metadata", ["angular2/src/core/metadata/di", "angular2/src/core/metadata/directives", "angular2/src/core/metadata/view", "angular2/src/util/decorators"], function(e) {
    "use strict";
    var t,
        n,
        r,
        i,
        o,
        s,
        a,
        c,
        u,
        l,
        f,
        h,
        d,
        p,
        g,
        m;
    return {
      setters: [function(i) {
        t = i.QueryMetadata, n = i.ViewQueryMetadata, r = i.AttributeMetadata, e("QueryMetadata", i.QueryMetadata), e("ViewQueryMetadata", i.ViewQueryMetadata), e("AttributeMetadata", i.AttributeMetadata);
      }, function(t) {
        i = t.ComponentMetadata, o = t.DirectiveMetadata, s = t.PipeMetadata, e("ComponentMetadata", t.ComponentMetadata), e("DirectiveMetadata", t.DirectiveMetadata), e("PipeMetadata", t.PipeMetadata), e("LifecycleEvent", t.LifecycleEvent);
      }, function(t) {
        a = t.ViewMetadata, e("ViewMetadata", t.ViewMetadata), e("ViewEncapsulation", t.ViewEncapsulation);
      }, function(e) {
        c = e.makeDecorator, u = e.makeParamDecorator;
      }],
      execute: function() {
        l = c(i, function(e) {
          return e.View = h;
        }), e("Component", l), f = c(o), e("Directive", f), h = c(a, function(e) {
          return e.View = h;
        }), e("View", h), d = u(r), e("Attribute", d), p = u(t), e("Query", p), g = u(n), e("ViewQuery", g), m = c(s), e("Pipe", m);
      }
    };
  }), System.register("angular2/metadata", ["angular2/src/core/metadata", "angular2/src/util/decorators"], function(e) {
    "use strict";
    return {
      setters: [function(t) {
        e("ComponentMetadata", t.ComponentMetadata), e("DirectiveMetadata", t.DirectiveMetadata), e("PipeMetadata", t.PipeMetadata), e("LifecycleEvent", t.LifecycleEvent), e("ViewMetadata", t.ViewMetadata), e("ViewEncapsulation", t.ViewEncapsulation), e("QueryMetadata", t.QueryMetadata), e("AttributeMetadata", t.AttributeMetadata), e("Attribute", t.Attribute), e("Component", t.Component), e("Directive", t.Directive), e("View", t.View), e("Query", t.Query), e("ViewQuery", t.ViewQuery), e("Pipe", t.Pipe);
      }, function(t) {
        e("Class", t.Class);
      }],
      execute: function() {}
    };
  }), System.register("angular2/angular2", ["angular2/metadata", "angular2/change_detection", "angular2/core", "angular2/di", "angular2/directives", "angular2/forms", "angular2/render", "angular2/profile"], function(e) {
    "use strict";
    var t = {},
        t = {},
        t = {},
        t = {},
        t = {},
        t = {},
        t = {},
        t = {};
    return {
      setters: [function(n) {
        Object.keys(n).forEach(function(r) {
          t[r] || e(r, n[r]);
        });
      }, function(n) {
        Object.keys(n).forEach(function(r) {
          t[r] || e(r, n[r]);
        });
      }, function(n) {
        Object.keys(n).forEach(function(r) {
          t[r] || e(r, n[r]);
        });
      }, function(n) {
        Object.keys(n).forEach(function(r) {
          t[r] || e(r, n[r]);
        });
      }, function(n) {
        Object.keys(n).forEach(function(r) {
          t[r] || e(r, n[r]);
        });
      }, function(n) {
        Object.keys(n).forEach(function(r) {
          t[r] || e(r, n[r]);
        });
      }, function(n) {
        Object.keys(n).forEach(function(r) {
          t[r] || e(r, n[r]);
        });
      }, function(n) {
        Object.keys(n).forEach(function(r) {
          t[r] || e(r, n[r]);
        });
      }],
      execute: function() {}
    };
  });
})(require("process"));
